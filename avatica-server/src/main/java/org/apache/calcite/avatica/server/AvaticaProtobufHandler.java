begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|AvaticaUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|ProtobufHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|ProtobufTranslation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|ProtobufTranslationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|handler
operator|.
name|AbstractHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletInputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_comment
comment|/**  * Jetty handler that executes Avatica JSON request-responses.  */
end_comment

begin_class
specifier|public
class|class
name|AvaticaProtobufHandler
extends|extends
name|AbstractHandler
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|AvaticaHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|ProtobufHandler
name|pbHandler
decl_stmt|;
specifier|private
specifier|final
name|ProtobufTranslation
name|protobufTranslation
decl_stmt|;
specifier|public
name|AvaticaProtobufHandler
parameter_list|(
name|Service
name|service
parameter_list|)
block|{
name|this
operator|.
name|protobufTranslation
operator|=
operator|new
name|ProtobufTranslationImpl
argument_list|()
expr_stmt|;
name|this
operator|.
name|pbHandler
operator|=
operator|new
name|ProtobufHandler
argument_list|(
name|service
argument_list|,
name|protobufTranslation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|Request
name|baseRequest
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|response
operator|.
name|setContentType
argument_list|(
literal|"application/octet-stream;charset=utf-8"
argument_list|)
expr_stmt|;
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|getMethod
argument_list|()
operator|.
name|equals
argument_list|(
literal|"POST"
argument_list|)
condition|)
block|{
name|byte
index|[]
name|requestBytes
decl_stmt|;
try|try
init|(
name|ServletInputStream
name|inputStream
init|=
name|request
operator|.
name|getInputStream
argument_list|()
init|)
block|{
name|requestBytes
operator|=
name|AvaticaUtils
operator|.
name|readFullyToBytes
argument_list|(
name|inputStream
argument_list|)
expr_stmt|;
block|}
name|byte
index|[]
name|responseBytes
decl_stmt|;
try|try
block|{
name|responseBytes
operator|=
name|pbHandler
operator|.
name|apply
argument_list|(
name|requestBytes
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error handling request"
argument_list|,
name|t
argument_list|)
expr_stmt|;
name|response
operator|.
name|setStatus
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|responseBytes
operator|=
name|createErrorResponse
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|write
argument_list|(
name|responseBytes
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|byte
index|[]
name|createErrorResponse
parameter_list|(
name|Throwable
name|t
parameter_list|)
throws|throws
name|IOException
block|{
name|Service
operator|.
name|ErrorResponse
name|errorResponse
init|=
operator|new
name|Service
operator|.
name|ErrorResponse
argument_list|(
name|AvaticaHandler
operator|.
name|getErrorMessage
argument_list|(
name|t
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|protobufTranslation
operator|.
name|serializeResponse
argument_list|(
name|errorResponse
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End AvaticaProtobufHandler.java
end_comment

end_unit

