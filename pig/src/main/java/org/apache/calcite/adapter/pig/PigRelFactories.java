begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|pig
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|Contexts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|AggregateCall
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|CorrelationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|JoinRelType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|ImmutableBitSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/** Implementations of factories in {@link RelFactories}  * for the Pig adapter. */
end_comment

begin_class
specifier|public
class|class
name|PigRelFactories
block|{
specifier|public
specifier|static
specifier|final
name|Context
name|ALL_PIG_REL_FACTORIES
init|=
name|Contexts
operator|.
name|of
argument_list|(
name|PigTableScanFactory
operator|.
name|INSTANCE
argument_list|,
name|PigFilterFactory
operator|.
name|INSTANCE
argument_list|,
name|PigAggregateFactory
operator|.
name|INSTANCE
argument_list|,
name|PigJoinFactory
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
comment|// prevent instantiation
specifier|private
name|PigRelFactories
parameter_list|()
block|{
block|}
comment|/**    * Implementation of    * {@link org.apache.calcite.rel.core.RelFactories.TableScanFactory} that    * returns a {@link PigTableScan}.    */
specifier|public
specifier|static
class|class
name|PigTableScanFactory
implements|implements
name|RelFactories
operator|.
name|TableScanFactory
block|{
specifier|public
specifier|static
specifier|final
name|PigTableScanFactory
name|INSTANCE
init|=
operator|new
name|PigTableScanFactory
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|RelNode
name|createScan
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelOptTable
name|table
parameter_list|)
block|{
return|return
operator|new
name|PigTableScan
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSetOf
argument_list|(
name|PigRel
operator|.
name|CONVENTION
argument_list|)
argument_list|,
name|table
argument_list|)
return|;
block|}
block|}
comment|/**    * Implementation of    * {@link org.apache.calcite.rel.core.RelFactories.FilterFactory} that    * returns a {@link PigFilter}.    */
specifier|public
specifier|static
class|class
name|PigFilterFactory
implements|implements
name|RelFactories
operator|.
name|FilterFactory
block|{
specifier|public
specifier|static
specifier|final
name|PigFilterFactory
name|INSTANCE
init|=
operator|new
name|PigFilterFactory
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|RelNode
name|createFilter
parameter_list|(
name|RelNode
name|input
parameter_list|,
name|RexNode
name|condition
parameter_list|)
block|{
return|return
operator|new
name|PigFilter
argument_list|(
name|input
operator|.
name|getCluster
argument_list|()
argument_list|,
name|input
operator|.
name|getTraitSet
argument_list|()
operator|.
name|replace
argument_list|(
name|PigRel
operator|.
name|CONVENTION
argument_list|)
argument_list|,
name|input
argument_list|,
name|condition
argument_list|)
return|;
block|}
block|}
comment|/**    * Implementation of    * {@link org.apache.calcite.rel.core.RelFactories.AggregateFactory} that    * returns a {@link PigAggregate}.    */
specifier|public
specifier|static
class|class
name|PigAggregateFactory
implements|implements
name|RelFactories
operator|.
name|AggregateFactory
block|{
specifier|public
specifier|static
specifier|final
name|PigAggregateFactory
name|INSTANCE
init|=
operator|new
name|PigAggregateFactory
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|RelNode
name|createAggregate
parameter_list|(
name|RelNode
name|input
parameter_list|,
name|boolean
name|indicator
parameter_list|,
name|ImmutableBitSet
name|groupSet
parameter_list|,
name|ImmutableList
argument_list|<
name|ImmutableBitSet
argument_list|>
name|groupSets
parameter_list|,
name|List
argument_list|<
name|AggregateCall
argument_list|>
name|aggCalls
parameter_list|)
block|{
return|return
operator|new
name|PigAggregate
argument_list|(
name|input
operator|.
name|getCluster
argument_list|()
argument_list|,
name|input
operator|.
name|getTraitSet
argument_list|()
argument_list|,
name|input
argument_list|,
name|indicator
argument_list|,
name|groupSet
argument_list|,
name|groupSets
argument_list|,
name|aggCalls
argument_list|)
return|;
block|}
block|}
comment|/**    * Implementation of    * {@link org.apache.calcite.rel.core.RelFactories.JoinFactory} that    * returns a {@link PigJoin}.    */
specifier|public
specifier|static
class|class
name|PigJoinFactory
implements|implements
name|RelFactories
operator|.
name|JoinFactory
block|{
specifier|public
specifier|static
specifier|final
name|PigJoinFactory
name|INSTANCE
init|=
operator|new
name|PigJoinFactory
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|RelNode
name|createJoin
parameter_list|(
name|RelNode
name|left
parameter_list|,
name|RelNode
name|right
parameter_list|,
name|RexNode
name|condition
parameter_list|,
name|Set
argument_list|<
name|CorrelationId
argument_list|>
name|variablesSet
parameter_list|,
name|JoinRelType
name|joinType
parameter_list|,
name|boolean
name|semiJoinDone
parameter_list|)
block|{
return|return
operator|new
name|PigJoin
argument_list|(
name|left
operator|.
name|getCluster
argument_list|()
argument_list|,
name|left
operator|.
name|getTraitSet
argument_list|()
argument_list|,
name|left
argument_list|,
name|right
argument_list|,
name|condition
argument_list|,
name|joinType
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|RelNode
name|createJoin
parameter_list|(
name|RelNode
name|left
parameter_list|,
name|RelNode
name|right
parameter_list|,
name|RexNode
name|condition
parameter_list|,
name|JoinRelType
name|joinType
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|variablesStopped
parameter_list|,
name|boolean
name|semiJoinDone
parameter_list|)
block|{
return|return
operator|new
name|PigJoin
argument_list|(
name|left
operator|.
name|getCluster
argument_list|()
argument_list|,
name|left
operator|.
name|getTraitSet
argument_list|()
argument_list|,
name|left
argument_list|,
name|right
argument_list|,
name|condition
argument_list|,
name|joinType
argument_list|)
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End PigRelFactories.java
end_comment

end_unit

