begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|noop
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Driver
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DriverManager
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DriverPropertyInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLFeatureNotSupportedException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_comment
comment|/**  * A Noop JDBC Driver.  */
end_comment

begin_class
specifier|public
class|class
name|AvaticaNoopDriver
implements|implements
name|Driver
block|{
specifier|private
specifier|static
specifier|final
name|AvaticaNoopDriver
name|INSTANCE
init|=
operator|new
name|AvaticaNoopDriver
argument_list|()
decl_stmt|;
static|static
block|{
try|try
block|{
name|DriverManager
operator|.
name|registerDriver
argument_list|(
name|INSTANCE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Failed to register driver"
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|(
name|System
operator|.
name|err
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|connect
parameter_list|(
name|String
name|url
parameter_list|,
name|Properties
name|info
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|AvaticaNoopConnection
operator|.
name|getInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|acceptsURL
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|url
operator|.
name|startsWith
argument_list|(
literal|"jdbc:avatica:noop"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|DriverPropertyInfo
index|[]
name|getPropertyInfo
parameter_list|(
name|String
name|url
parameter_list|,
name|Properties
name|info
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
operator|new
name|DriverPropertyInfo
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getMajorVersion
parameter_list|()
block|{
return|return
literal|1
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getMinorVersion
parameter_list|()
block|{
return|return
literal|7
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|jdbcCompliant
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|Logger
name|getParentLogger
parameter_list|()
throws|throws
name|SQLFeatureNotSupportedException
block|{
return|return
name|Logger
operator|.
name|getLogger
argument_list|(
literal|""
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End AvaticaNoopDriver.java
end_comment

end_unit

