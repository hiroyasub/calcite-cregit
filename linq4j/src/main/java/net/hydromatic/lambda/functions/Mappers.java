begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|lambda
operator|.
name|functions
package|;
end_package

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|Linq4j
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Utilities for {@link Mapper}.  */
end_comment

begin_class
specifier|public
class|class
name|Mappers
block|{
specifier|private
name|Mappers
parameter_list|()
block|{
throw|throw
operator|new
name|AssertionError
argument_list|()
throw|;
block|}
specifier|private
specifier|static
specifier|final
name|Mapper
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|IDENTITY
init|=
operator|new
name|Mapper
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|()
block|{
specifier|public
name|Object
name|map
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|o
return|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|Object
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|Object
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Mapper
argument_list|<
name|Object
argument_list|,
name|String
argument_list|>
name|STRING
init|=
operator|new
name|Mapper
argument_list|<
name|Object
argument_list|,
name|String
argument_list|>
argument_list|()
block|{
specifier|public
name|String
name|map
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|Object
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|String
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|T
argument_list|>
name|identity
parameter_list|()
block|{
return|return
operator|(
name|Mapper
argument_list|<
name|T
argument_list|,
name|T
argument_list|>
operator|)
name|IDENTITY
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|String
argument_list|>
name|string
parameter_list|()
block|{
return|return
operator|(
name|Mapper
argument_list|<
name|T
argument_list|,
name|String
argument_list|>
operator|)
name|STRING
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|,
name|U
parameter_list|,
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|chain
parameter_list|(
specifier|final
name|Mapper
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|U
argument_list|>
name|first
parameter_list|,
specifier|final
name|Mapper
argument_list|<
name|?
super|super
name|U
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|second
parameter_list|)
block|{
return|return
operator|new
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
argument_list|()
block|{
specifier|public
name|V
name|map
parameter_list|(
name|T
name|t
parameter_list|)
block|{
return|return
name|second
operator|.
name|map
argument_list|(
name|first
operator|.
name|map
argument_list|(
name|t
argument_list|)
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|W
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|W
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|V
argument_list|,
name|?
extends|extends
name|W
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|,
name|U
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
name|constant
parameter_list|(
specifier|final
name|U
name|constant
parameter_list|)
block|{
return|return
operator|new
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
argument_list|()
block|{
specifier|public
name|U
name|map
parameter_list|(
name|T
name|t
parameter_list|)
block|{
return|return
name|constant
return|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|U
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|T
argument_list|>
name|substitute
parameter_list|(
specifier|final
name|T
name|subOut
parameter_list|,
specifier|final
name|T
name|subIn
parameter_list|)
block|{
return|return
operator|new
name|Mapper
argument_list|<
name|T
argument_list|,
name|T
argument_list|>
argument_list|()
block|{
specifier|public
name|T
name|map
parameter_list|(
name|T
name|t
parameter_list|)
block|{
return|return
name|Linq4j
operator|.
name|equals
argument_list|(
name|subOut
argument_list|,
name|t
argument_list|)
condition|?
name|subIn
else|:
name|t
return|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|,
name|U
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
name|instantiate
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|clazzT
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|U
argument_list|>
name|clazzU
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
comment|// tODO:
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|,
name|U
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
name|forMap
parameter_list|(
specifier|final
name|Map
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|U
argument_list|>
name|map
parameter_list|)
block|{
return|return
operator|new
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
argument_list|()
block|{
specifier|public
name|U
name|map
parameter_list|(
name|T
name|t
parameter_list|)
block|{
if|if
condition|(
name|map
operator|.
name|containsKey
argument_list|(
name|t
argument_list|)
condition|)
block|{
return|return
name|map
operator|.
name|get
argument_list|(
name|t
argument_list|)
return|;
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"unmappable<T> : "
operator|+
name|t
argument_list|)
throw|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|U
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|,
name|U
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
name|forMap
parameter_list|(
specifier|final
name|Map
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|U
argument_list|>
name|map
parameter_list|,
specifier|final
name|U
name|defaultValue
parameter_list|)
block|{
return|return
operator|new
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
argument_list|()
block|{
specifier|public
name|U
name|map
parameter_list|(
name|T
name|t
parameter_list|)
block|{
return|return
name|map
operator|.
name|containsKey
argument_list|(
name|t
argument_list|)
condition|?
name|map
operator|.
name|get
argument_list|(
name|t
argument_list|)
else|:
name|defaultValue
return|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|U
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|,
name|U
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
name|forPredicate
parameter_list|(
specifier|final
name|Predicate
argument_list|<
name|?
super|super
name|T
argument_list|>
name|predicate
parameter_list|,
specifier|final
name|U
name|forTrue
parameter_list|,
specifier|final
name|U
name|forFalse
parameter_list|)
block|{
return|return
operator|new
name|Mapper
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
argument_list|()
block|{
specifier|public
name|U
name|map
parameter_list|(
name|T
name|t
parameter_list|)
block|{
return|return
name|predicate
operator|.
name|test
argument_list|(
name|t
argument_list|)
condition|?
name|forTrue
else|:
name|forFalse
return|;
block|}
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|U
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|abstract
specifier|static
class|class
name|AbstractMapper
parameter_list|<
name|T
parameter_list|,
name|R
parameter_list|>
implements|implements
name|Mapper
argument_list|<
name|T
argument_list|,
name|R
argument_list|>
block|{
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Mapper
argument_list|<
name|T
argument_list|,
name|V
argument_list|>
name|compose
parameter_list|(
name|Mapper
argument_list|<
name|?
super|super
name|R
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|after
parameter_list|)
block|{
return|return
name|chain
argument_list|(
name|this
argument_list|,
name|after
argument_list|)
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End Mappers.java
end_comment

end_unit

