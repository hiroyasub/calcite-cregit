begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|druid
package|;
end_package

begin_comment
comment|/**  * DimensionSpec implementation that uses a time format extraction function.  */
end_comment

begin_class
specifier|public
class|class
name|TimeExtractionDimensionSpec
extends|extends
name|ExtractionDimensionSpec
block|{
specifier|public
name|TimeExtractionDimensionSpec
parameter_list|(
name|ExtractionFunction
name|extractionFunction
parameter_list|,
name|String
name|outputName
parameter_list|)
block|{
name|super
argument_list|(
name|DruidTable
operator|.
name|DEFAULT_TIMESTAMP_COLUMN
argument_list|,
name|extractionFunction
argument_list|,
name|outputName
argument_list|)
expr_stmt|;
block|}
comment|/**    * Creates a time extraction DimensionSpec that renames the '__time' column    * to the given name.    *    * @param outputName name of the output column    *    * @return the time extraction DimensionSpec instance    */
specifier|public
specifier|static
name|TimeExtractionDimensionSpec
name|makeFullTimeExtract
parameter_list|(
name|String
name|outputName
parameter_list|)
block|{
return|return
operator|new
name|TimeExtractionDimensionSpec
argument_list|(
name|TimeExtractionFunction
operator|.
name|createDefault
argument_list|()
argument_list|,
name|outputName
argument_list|)
return|;
block|}
comment|/**    * Creates a time extraction DimensionSpec that formats the '__time' column    * according to the given granularity and outputs the column with the given    * name. Only YEAR, MONTH, and DAY granularity are supported.    *    * @param granularity granularity to apply to the column    * @param outputName  name of the output column    *    * @return time field extraction DimensionSpec instance or null if granularity    * is not supported    */
specifier|public
specifier|static
name|TimeExtractionDimensionSpec
name|makeExtract
parameter_list|(
name|Granularity
name|granularity
parameter_list|,
name|String
name|outputName
parameter_list|)
block|{
switch|switch
condition|(
name|granularity
condition|)
block|{
case|case
name|YEAR
case|:
return|return
operator|new
name|TimeExtractionDimensionSpec
argument_list|(
name|TimeExtractionFunction
operator|.
name|createExtractFromGranularity
argument_list|(
name|granularity
argument_list|)
argument_list|,
name|outputName
argument_list|)
return|;
case|case
name|MONTH
case|:
return|return
operator|new
name|TimeExtractionDimensionSpec
argument_list|(
name|TimeExtractionFunction
operator|.
name|createExtractFromGranularity
argument_list|(
name|granularity
argument_list|)
argument_list|,
name|outputName
argument_list|)
return|;
case|case
name|DAY
case|:
return|return
operator|new
name|TimeExtractionDimensionSpec
argument_list|(
name|TimeExtractionFunction
operator|.
name|createExtractFromGranularity
argument_list|(
name|granularity
argument_list|)
argument_list|,
name|outputName
argument_list|)
return|;
comment|// TODO: Support other granularities
default|default:
return|return
literal|null
return|;
block|}
block|}
comment|/**    * Creates floor time extraction dimension spec from Granularity with a given output name    * @param granularity granularity to apply to the time column    * @param outputName name of the output column    *    * @return floor time extraction DimensionSpec instance.    */
specifier|public
specifier|static
name|TimeExtractionDimensionSpec
name|makeFloor
parameter_list|(
name|Granularity
name|granularity
parameter_list|,
name|String
name|outputName
parameter_list|)
block|{
name|ExtractionFunction
name|fn
init|=
name|TimeExtractionFunction
operator|.
name|createFloorFromGranularity
argument_list|(
name|granularity
argument_list|)
decl_stmt|;
return|return
operator|new
name|TimeExtractionDimensionSpec
argument_list|(
name|fn
argument_list|,
name|outputName
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End TimeExtractionDimensionSpec.java
end_comment

end_unit

