begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|druid
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|SchemaPlus
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Schema factory that creates Druid schemas.  *  *<table>  *<caption>Druid schema operands</caption>  *<tr>  *<th>Operand</th>  *<th>Description</th>  *<th>Required</th>  *</tr>  *<tr>  *<td>url</td>  *<td>URL of Druid's query node.  *     The default is "http://localhost:8082".</td>  *<td>No</td>  *</tr>  *<tr>  *<td>coordinatorUrl</td>  *<td>URL of Druid's coordinator node.  *     The default is<code>url</code>, replacing "8082" with "8081",  *     for example "http://localhost:8081".</td>  *<td>No</td>  *</tr>  *</table>  */
end_comment

begin_class
specifier|public
class|class
name|DruidSchemaFactory
implements|implements
name|SchemaFactory
block|{
comment|/** Default Druid URL. */
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_URL
init|=
literal|"http://localhost:8082"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Schema
name|create
parameter_list|(
name|SchemaPlus
name|parentSchema
parameter_list|,
name|String
name|name
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|operand
parameter_list|)
block|{
specifier|final
name|String
name|url
init|=
name|operand
operator|.
name|get
argument_list|(
literal|"url"
argument_list|)
operator|instanceof
name|String
condition|?
operator|(
name|String
operator|)
name|operand
operator|.
name|get
argument_list|(
literal|"url"
argument_list|)
else|:
name|DEFAULT_URL
decl_stmt|;
specifier|final
name|String
name|coordinatorUrl
init|=
name|operand
operator|.
name|get
argument_list|(
literal|"coordinatorUrl"
argument_list|)
operator|instanceof
name|String
condition|?
operator|(
name|String
operator|)
name|operand
operator|.
name|get
argument_list|(
literal|"coordinatorUrl"
argument_list|)
else|:
name|url
operator|.
name|replace
argument_list|(
literal|":8082"
argument_list|,
literal|":8081"
argument_list|)
decl_stmt|;
comment|// "tables" is a hidden attribute, copied in from the enclosing custom
comment|// schema
specifier|final
name|boolean
name|containsTables
init|=
name|operand
operator|.
name|get
argument_list|(
literal|"tables"
argument_list|)
operator|instanceof
name|List
operator|&&
operator|(
operator|(
name|List
operator|)
name|operand
operator|.
name|get
argument_list|(
literal|"tables"
argument_list|)
operator|)
operator|.
name|size
argument_list|()
operator|>
literal|0
decl_stmt|;
return|return
operator|new
name|DruidSchema
argument_list|(
name|url
argument_list|,
name|coordinatorUrl
argument_list|,
operator|!
name|containsTables
argument_list|)
return|;
block|}
block|}
end_class

end_unit

