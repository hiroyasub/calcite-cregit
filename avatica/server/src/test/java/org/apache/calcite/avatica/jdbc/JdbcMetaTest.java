begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|AvaticaPreparedStatement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|Meta
operator|.
name|ConnectionHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|Meta
operator|.
name|Signature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|Meta
operator|.
name|StatementHandle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ParameterMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|PreparedStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Unit tests for {@link JdbcMeta}.  */
end_comment

begin_class
specifier|public
class|class
name|JdbcMetaTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testExceptionPropagation
parameter_list|()
throws|throws
name|SQLException
block|{
name|JdbcMeta
name|meta
init|=
operator|new
name|JdbcMeta
argument_list|(
literal|"url"
argument_list|)
decl_stmt|;
specifier|final
name|Throwable
name|e
init|=
operator|new
name|Exception
argument_list|()
decl_stmt|;
specifier|final
name|RuntimeException
name|rte
decl_stmt|;
try|try
block|{
name|meta
operator|.
name|propagate
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected an exception to be thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|caughtException
parameter_list|)
block|{
name|rte
operator|=
name|caughtException
expr_stmt|;
name|assertThat
argument_list|(
name|rte
operator|.
name|getCause
argument_list|()
argument_list|,
name|is
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrepareSetsMaxRows
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|id
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|String
name|sql
init|=
literal|"SELECT * FROM FOO"
decl_stmt|;
specifier|final
name|int
name|maxRows
init|=
literal|500
decl_stmt|;
specifier|final
name|ConnectionHandle
name|ch
init|=
operator|new
name|ConnectionHandle
argument_list|(
name|id
argument_list|)
decl_stmt|;
specifier|final
name|AtomicInteger
name|statementIdGenerator
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|JdbcMeta
name|meta
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|JdbcMeta
operator|.
name|class
argument_list|)
decl_stmt|;
name|Connection
name|connection
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Connection
operator|.
name|class
argument_list|)
decl_stmt|;
name|PreparedStatement
name|statement
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|PreparedStatement
operator|.
name|class
argument_list|)
decl_stmt|;
name|ResultSetMetaData
name|resultSetMetaData
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ResultSetMetaData
operator|.
name|class
argument_list|)
decl_stmt|;
name|ParameterMetaData
name|parameterMetaData
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ParameterMetaData
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Cache
argument_list|<
name|Integer
argument_list|,
name|StatementInfo
argument_list|>
name|statementCache
init|=
operator|(
name|Cache
argument_list|<
name|Integer
argument_list|,
name|StatementInfo
argument_list|>
operator|)
name|Mockito
operator|.
name|mock
argument_list|(
name|Cache
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|meta
operator|.
name|getStatementIdGenerator
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|statementIdGenerator
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|meta
operator|.
name|getStatementCache
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|statementCache
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|meta
operator|.
name|getConnection
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|connection
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|connection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|statement
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|statement
operator|.
name|isWrapperFor
argument_list|(
name|AvaticaPreparedStatement
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|statement
operator|.
name|getMetaData
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|resultSetMetaData
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|statement
operator|.
name|getParameterMetaData
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|parameterMetaData
argument_list|)
expr_stmt|;
comment|// Call the real methods
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|meta
argument_list|)
operator|.
name|setMaxRows
argument_list|(
name|statement
argument_list|,
name|maxRows
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|meta
argument_list|)
operator|.
name|prepare
argument_list|(
name|ch
argument_list|,
name|sql
argument_list|,
name|maxRows
argument_list|)
expr_stmt|;
name|meta
operator|.
name|prepare
argument_list|(
name|ch
argument_list|,
name|sql
argument_list|,
name|maxRows
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|statement
argument_list|)
operator|.
name|setMaxRows
argument_list|(
name|maxRows
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrepareAndExecuteSetsMaxRows
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|id
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|int
name|statementId
init|=
literal|12345
decl_stmt|;
specifier|final
name|String
name|sql
init|=
literal|"SELECT * FROM FOO"
decl_stmt|;
specifier|final
name|int
name|maxRows
init|=
literal|500
decl_stmt|;
name|JdbcMeta
name|meta
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|JdbcMeta
operator|.
name|class
argument_list|)
decl_stmt|;
name|PreparedStatement
name|statement
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|PreparedStatement
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Cache
argument_list|<
name|Integer
argument_list|,
name|StatementInfo
argument_list|>
name|statementCache
init|=
operator|(
name|Cache
argument_list|<
name|Integer
argument_list|,
name|StatementInfo
argument_list|>
operator|)
name|Mockito
operator|.
name|mock
argument_list|(
name|Cache
operator|.
name|class
argument_list|)
decl_stmt|;
name|Signature
name|signature
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Signature
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|StatementInfo
name|statementInfo
init|=
operator|new
name|StatementInfo
argument_list|(
name|statement
argument_list|)
decl_stmt|;
specifier|final
name|StatementHandle
name|statementHandle
init|=
operator|new
name|StatementHandle
argument_list|(
name|id
argument_list|,
name|statementId
argument_list|,
name|signature
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|meta
operator|.
name|getStatementCache
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|statementCache
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|statementCache
operator|.
name|getIfPresent
argument_list|(
name|statementId
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|statementInfo
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|statement
operator|.
name|getResultSet
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// The real methods
name|Mockito
operator|.
name|when
argument_list|(
name|meta
operator|.
name|prepareAndExecute
argument_list|(
name|statementHandle
argument_list|,
name|sql
argument_list|,
name|maxRows
argument_list|,
literal|50
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|meta
argument_list|)
operator|.
name|setMaxRows
argument_list|(
name|statement
argument_list|,
name|maxRows
argument_list|)
expr_stmt|;
comment|// Call our method
name|meta
operator|.
name|prepareAndExecute
argument_list|(
name|statementHandle
argument_list|,
name|sql
argument_list|,
name|maxRows
argument_list|,
literal|50
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Verify we called setMaxRows with the right value
name|Mockito
operator|.
name|verify
argument_list|(
name|statement
argument_list|)
operator|.
name|setMaxRows
argument_list|(
name|maxRows
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End JdbcMetaTest.java
end_comment

end_unit

