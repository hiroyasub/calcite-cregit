begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Driver
operator|.
name|Serialization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_comment
comment|/**  * Test class for {@link HttpServer}.  */
end_comment

begin_class
specifier|public
class|class
name|HttpServerBuilderTest
block|{
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
comment|// Disabled on JDK9 due to Mockito bug; see [CALCITE-1567].
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.version"
argument_list|)
operator|.
name|compareTo
argument_list|(
literal|"9"
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|extraAllowedRolesConfigured
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
operator|new
name|String
index|[]
block|{
literal|"BAR.COM"
block|}
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|extraRoles
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|,
literal|"BAR.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|lotsOfExtraRoles
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
operator|new
name|String
index|[]
block|{
literal|"BAR.COM"
block|,
literal|"BAZ.COM"
block|,
literal|"FOO.COM"
block|}
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|extraRoles
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|,
literal|"BAR.COM"
block|,
literal|"BAZ.COM"
block|,
literal|"FOO.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|nullExtraRoles
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
literal|null
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|emptyExtraRoles
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
operator|new
name|String
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|extraRoles
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|extraAllowedRolesConfiguredWithExplitRealm
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
operator|new
name|String
index|[]
block|{
literal|"BAR.COM"
block|}
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
literal|"EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|extraRoles
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|,
literal|"BAR.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|lotsOfExtraRolesWithExplitRealm
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
operator|new
name|String
index|[]
block|{
literal|"BAR.COM"
block|,
literal|"BAZ.COM"
block|,
literal|"FOO.COM"
block|}
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
literal|"EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|extraRoles
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|,
literal|"BAR.COM"
block|,
literal|"BAZ.COM"
block|,
literal|"FOO.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|nullExtraRolesWithExplitRealm
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
literal|null
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
literal|"EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|emptyExtraRolesWithExplitRealm
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|extraRoles
init|=
operator|new
name|String
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|Service
name|mockService
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServer
name|server
init|=
operator|new
name|HttpServer
operator|.
name|Builder
argument_list|()
operator|.
name|withSpnego
argument_list|(
literal|"HTTP/localhost.localdomain@EXAMPLE.COM"
argument_list|,
literal|"EXAMPLE.COM"
argument_list|,
name|extraRoles
argument_list|)
operator|.
name|withHandler
argument_list|(
name|mockService
argument_list|,
name|Serialization
operator|.
name|JSON
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|extraRoles
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
operator|.
name|getAllowedRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"EXAMPLE.COM"
block|}
argument_list|,
name|server
operator|.
name|getAllowedRealms
argument_list|(
literal|"EXAMPLE.COM"
argument_list|,
name|server
operator|.
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End HttpServerBuilderTest.java
end_comment

end_unit

