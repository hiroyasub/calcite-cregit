begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DatabaseMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_comment
comment|/**  * Identifies an operation from {@link DatabaseMetaData} which returns a {@link ResultSet}. This  * enum is used to allow clients to request the server to re-instantiate a {@link ResultSet} for  * these operations which do not have a SQL string associated with them as a normal query does.  */
end_comment

begin_enum
specifier|public
enum|enum
name|MetaDataOperation
block|{
name|GET_ATTRIBUTES
block|,
name|GET_BEST_ROW_IDENTIFIER
block|,
name|GET_CATALOGS
block|,
name|GET_CLIENT_INFO_PROPERTIES
block|,
name|GET_COLUMN_PRIVILEGES
block|,
name|GET_COLUMNS
block|,
name|GET_CROSS_REFERENCE
block|,
name|GET_EXPORTED_KEYS
block|,
name|GET_FUNCTION_COLUMNS
block|,
name|GET_FUNCTIONS
block|,
name|GET_IMPORTED_KEYS
block|,
name|GET_INDEX_INFO
block|,
name|GET_PRIMARY_KEYS
block|,
name|GET_PROCEDURE_COLUMNS
block|,
name|GET_PROCEDURES
block|,
name|GET_PSEUDO_COLUMNS
block|,
name|GET_SCHEMAS
block|,
name|GET_SCHEMAS_WITH_ARGS
block|,
name|GET_SUPER_TABLES
block|,
name|GET_SUPER_TYPES
block|,
name|GET_TABLE_PRIVILEGES
block|,
name|GET_TABLES
block|,
name|GET_TABLE_TYPES
block|,
name|GET_TYPE_INFO
block|,
name|GET_UDTS
block|,
name|GET_VERSION_COLUMNS
block|;
specifier|public
name|Common
operator|.
name|MetaDataOperation
name|toProto
parameter_list|()
block|{
switch|switch
condition|(
name|this
condition|)
block|{
case|case
name|GET_ATTRIBUTES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_ATTRIBUTES
return|;
case|case
name|GET_BEST_ROW_IDENTIFIER
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_BEST_ROW_IDENTIFIER
return|;
case|case
name|GET_CATALOGS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_CATALOGS
return|;
case|case
name|GET_CLIENT_INFO_PROPERTIES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_CLIENT_INFO_PROPERTIES
return|;
case|case
name|GET_COLUMNS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_COLUMNS
return|;
case|case
name|GET_COLUMN_PRIVILEGES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_COLUMN_PRIVILEGES
return|;
case|case
name|GET_CROSS_REFERENCE
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_CROSS_REFERENCE
return|;
case|case
name|GET_EXPORTED_KEYS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_EXPORTED_KEYS
return|;
case|case
name|GET_FUNCTIONS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_FUNCTIONS
return|;
case|case
name|GET_FUNCTION_COLUMNS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_FUNCTION_COLUMNS
return|;
case|case
name|GET_IMPORTED_KEYS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_IMPORTED_KEYS
return|;
case|case
name|GET_INDEX_INFO
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_INDEX_INFO
return|;
case|case
name|GET_PRIMARY_KEYS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_PRIMARY_KEYS
return|;
case|case
name|GET_PROCEDURES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_PROCEDURES
return|;
case|case
name|GET_PROCEDURE_COLUMNS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_PROCEDURE_COLUMNS
return|;
case|case
name|GET_PSEUDO_COLUMNS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_PSEUDO_COLUMNS
return|;
case|case
name|GET_SCHEMAS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_SCHEMAS
return|;
case|case
name|GET_SCHEMAS_WITH_ARGS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_SCHEMAS_WITH_ARGS
return|;
case|case
name|GET_SUPER_TABLES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_SUPER_TABLES
return|;
case|case
name|GET_SUPER_TYPES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_SUPER_TYPES
return|;
case|case
name|GET_TABLES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_TABLES
return|;
case|case
name|GET_TABLE_PRIVILEGES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_TABLE_PRIVILEGES
return|;
case|case
name|GET_TABLE_TYPES
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_TABLE_TYPES
return|;
case|case
name|GET_TYPE_INFO
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_TYPE_INFO
return|;
case|case
name|GET_UDTS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_UDTS
return|;
case|case
name|GET_VERSION_COLUMNS
case|:
return|return
name|Common
operator|.
name|MetaDataOperation
operator|.
name|GET_VERSION_COLUMNS
return|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unknown type: "
operator|+
name|this
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|MetaDataOperation
name|fromProto
parameter_list|(
name|Common
operator|.
name|MetaDataOperation
name|protoOp
parameter_list|)
block|{
comment|// Null is acceptable
if|if
condition|(
literal|null
operator|==
name|protoOp
condition|)
block|{
return|return
literal|null
return|;
block|}
switch|switch
condition|(
name|protoOp
condition|)
block|{
case|case
name|GET_ATTRIBUTES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_ATTRIBUTES
return|;
case|case
name|GET_BEST_ROW_IDENTIFIER
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_BEST_ROW_IDENTIFIER
return|;
case|case
name|GET_CATALOGS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_CATALOGS
return|;
case|case
name|GET_CLIENT_INFO_PROPERTIES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_CLIENT_INFO_PROPERTIES
return|;
case|case
name|GET_COLUMNS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_COLUMNS
return|;
case|case
name|GET_COLUMN_PRIVILEGES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_COLUMN_PRIVILEGES
return|;
case|case
name|GET_CROSS_REFERENCE
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_CROSS_REFERENCE
return|;
case|case
name|GET_EXPORTED_KEYS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_EXPORTED_KEYS
return|;
case|case
name|GET_FUNCTIONS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_FUNCTIONS
return|;
case|case
name|GET_FUNCTION_COLUMNS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_FUNCTION_COLUMNS
return|;
case|case
name|GET_IMPORTED_KEYS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_IMPORTED_KEYS
return|;
case|case
name|GET_INDEX_INFO
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_INDEX_INFO
return|;
case|case
name|GET_PRIMARY_KEYS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_PRIMARY_KEYS
return|;
case|case
name|GET_PROCEDURES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_PROCEDURES
return|;
case|case
name|GET_PROCEDURE_COLUMNS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_PROCEDURE_COLUMNS
return|;
case|case
name|GET_PSEUDO_COLUMNS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_PSEUDO_COLUMNS
return|;
case|case
name|GET_SCHEMAS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_SCHEMAS
return|;
case|case
name|GET_SCHEMAS_WITH_ARGS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_SCHEMAS_WITH_ARGS
return|;
case|case
name|GET_SUPER_TABLES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_SUPER_TABLES
return|;
case|case
name|GET_SUPER_TYPES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_SUPER_TYPES
return|;
case|case
name|GET_TABLES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_TABLES
return|;
case|case
name|GET_TABLE_PRIVILEGES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_TABLE_PRIVILEGES
return|;
case|case
name|GET_TABLE_TYPES
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_TABLE_TYPES
return|;
case|case
name|GET_TYPE_INFO
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_TYPE_INFO
return|;
case|case
name|GET_UDTS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_UDTS
return|;
case|case
name|GET_VERSION_COLUMNS
case|:
return|return
name|MetaDataOperation
operator|.
name|GET_VERSION_COLUMNS
return|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unknown type: "
operator|+
name|protoOp
argument_list|)
throw|;
block|}
block|}
block|}
end_enum

begin_comment
comment|// End MetaDataOperation.java
end_comment

end_unit

