begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Tests for AvaticaConnection  */
end_comment

begin_class
specifier|public
class|class
name|AvaticaConnectionTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testNumExecuteRetries
parameter_list|()
block|{
comment|// Disabled on JDK9 due to Mockito bug; see [CALCITE-1567].
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.version"
argument_list|)
operator|.
name|compareTo
argument_list|(
literal|"9"
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|AvaticaConnection
name|statement
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AvaticaConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|statement
operator|.
name|getNumStatementRetries
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|Properties
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
comment|// Bad argument should throw an exception
try|try
block|{
name|statement
operator|.
name|getNumStatementRetries
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Calling getNumStatementRetries with a null object should throw an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{
comment|// Pass
block|}
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
comment|// Verify the default value
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|AvaticaConnection
operator|.
name|NUM_EXECUTE_RETRIES_DEFAULT
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|statement
operator|.
name|getNumStatementRetries
argument_list|(
name|props
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set a non-default value
name|props
operator|.
name|setProperty
argument_list|(
name|AvaticaConnection
operator|.
name|NUM_EXECUTE_RETRIES_KEY
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
comment|// Verify that we observe that value
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|statement
operator|.
name|getNumStatementRetries
argument_list|(
name|props
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End AvaticaConnectionTest.java
end_comment

end_unit

