begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|util
operator|.
name|AbstractCursor
operator|.
name|Getter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|util
operator|.
name|AbstractCursor
operator|.
name|NumberAccessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Test logic for the NumberAccessor.  */
end_comment

begin_class
specifier|public
class|class
name|NumberAccessorTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBigDecimalZeroScale
parameter_list|()
throws|throws
name|SQLException
block|{
specifier|final
name|BigDecimal
name|orig
init|=
operator|new
name|BigDecimal
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|137L
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|NumberAccessor
name|accessor
init|=
operator|new
name|AbstractCursor
operator|.
name|NumberAccessor
argument_list|(
operator|new
name|Getter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|getObject
parameter_list|()
block|{
return|return
name|orig
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|wasNull
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|orig
argument_list|,
name|accessor
operator|.
name|getBigDecimal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End NumberAccessorTest.java
end_comment

end_unit

