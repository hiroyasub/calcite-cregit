begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|AvaticaUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|ColumnMetaData
operator|.
name|Rep
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|Meta
operator|.
name|Signature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|Meta
operator|.
name|StatementHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|WireMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnsafeByteOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Protobuf serialization tests.  */
end_comment

begin_class
specifier|public
class|class
name|ProtobufSerializationTest
block|{
specifier|private
name|Signature
name|getSignature
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|private
name|List
argument_list|<
name|TypedValue
argument_list|>
name|getTypedValues
parameter_list|()
block|{
name|List
argument_list|<
name|TypedValue
argument_list|>
name|paramValues
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|TypedValue
operator|.
name|create
argument_list|(
name|Rep
operator|.
name|BOOLEAN
operator|.
name|name
argument_list|()
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
argument_list|,
name|TypedValue
operator|.
name|create
argument_list|(
name|Rep
operator|.
name|STRING
operator|.
name|name
argument_list|()
argument_list|,
literal|"string"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|paramValues
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExecuteSerialization
parameter_list|()
throws|throws
name|Exception
block|{
name|Service
operator|.
name|ExecuteRequest
name|executeRequest
init|=
operator|new
name|Service
operator|.
name|ExecuteRequest
argument_list|(
operator|new
name|StatementHandle
argument_list|(
literal|"connection"
argument_list|,
literal|12345
argument_list|,
name|getSignature
argument_list|()
argument_list|)
argument_list|,
name|getTypedValues
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Requests
operator|.
name|ExecuteRequest
name|pbExecuteRequest
init|=
name|executeRequest
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
literal|1024
argument_list|)
decl_stmt|;
name|pbExecuteRequest
operator|.
name|writeTo
argument_list|(
name|baos
argument_list|)
expr_stmt|;
name|byte
index|[]
name|serialized
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|WireMessage
name|wireMsg
init|=
name|WireMessage
operator|.
name|newBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|Requests
operator|.
name|ExecuteRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|setWrappedMessage
argument_list|(
name|UnsafeByteOperations
operator|.
name|unsafeWrap
argument_list|(
name|serialized
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|wireMsg
operator|.
name|writeTo
argument_list|(
name|baos
argument_list|)
expr_stmt|;
name|serialized
operator|=
name|baos
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
name|ProtobufTranslation
name|translator
init|=
operator|new
name|ProtobufTranslationImpl
argument_list|()
decl_stmt|;
name|Request
name|newRequest
init|=
name|translator
operator|.
name|parseRequest
argument_list|(
name|serialized
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|executeRequest
argument_list|,
name|newRequest
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrepareSerialization
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|sql
init|=
literal|"SELECT * FROM FOO"
decl_stmt|;
specifier|final
name|String
name|connectionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|maxRowCount
range|:
name|Arrays
operator|.
name|asList
argument_list|(
operator|-
literal|1L
argument_list|,
literal|0L
argument_list|,
literal|1L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
control|)
block|{
name|Service
operator|.
name|PrepareRequest
name|prepareReq
init|=
operator|new
name|Service
operator|.
name|PrepareRequest
argument_list|(
name|connectionId
argument_list|,
name|sql
argument_list|,
name|maxRowCount
argument_list|)
decl_stmt|;
name|Requests
operator|.
name|PrepareRequest
name|prepareProtoReq
init|=
name|prepareReq
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareProtoReq
operator|.
name|getMaxRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareProtoReq
operator|.
name|getMaxRowsTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prepareReq
argument_list|,
name|prepareReq
operator|.
name|deserialize
argument_list|(
name|prepareProtoReq
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrepareDeserialization
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|sql
init|=
literal|"SELECT * FROM FOO"
decl_stmt|;
specifier|final
name|String
name|connectionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|long
name|maxRowCount
init|=
literal|200L
decl_stmt|;
comment|// The "current" serialization strategy.
name|Requests
operator|.
name|PrepareRequest
name|protoPrepare
init|=
name|Requests
operator|.
name|PrepareRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowsTotal
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Service
operator|.
name|PrepareRequest
name|prepareReq
init|=
operator|new
name|Service
operator|.
name|PrepareRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
comment|// The "old" serialization strategy.
name|protoPrepare
operator|=
name|Requests
operator|.
name|PrepareRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowCount
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|prepareReq
operator|=
operator|new
name|Service
operator|.
name|PrepareRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
comment|// Both the new and old provided should default to the new
name|protoPrepare
operator|=
name|Requests
operator|.
name|PrepareRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowCount
argument_list|(
literal|500L
argument_list|)
operator|.
name|setMaxRowsTotal
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|prepareReq
operator|=
operator|new
name|Service
operator|.
name|PrepareRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrepareAndExecuteSerialization
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|sql
init|=
literal|"SELECT * FROM FOO"
decl_stmt|;
specifier|final
name|int
name|statementId
init|=
literal|12345
decl_stmt|;
specifier|final
name|String
name|connectionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|maxRowCount
range|:
name|Arrays
operator|.
name|asList
argument_list|(
operator|-
literal|1L
argument_list|,
literal|0L
argument_list|,
literal|1L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
control|)
block|{
name|Service
operator|.
name|PrepareAndExecuteRequest
name|prepareAndExecuteReq
init|=
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|(
name|connectionId
argument_list|,
name|statementId
argument_list|,
name|sql
argument_list|,
name|maxRowCount
argument_list|)
decl_stmt|;
name|Requests
operator|.
name|PrepareAndExecuteRequest
name|prepareAndExecuteProtoReq
init|=
name|prepareAndExecuteReq
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteProtoReq
operator|.
name|getMaxRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteProtoReq
operator|.
name|getMaxRowsTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AvaticaUtils
operator|.
name|toSaturatedInt
argument_list|(
name|maxRowCount
argument_list|)
argument_list|,
name|prepareAndExecuteProtoReq
operator|.
name|getFirstFrameMaxSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prepareAndExecuteReq
argument_list|,
name|prepareAndExecuteReq
operator|.
name|deserialize
argument_list|(
name|prepareAndExecuteProtoReq
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|int
name|maxRowsInFirstFrame
init|=
literal|50
decl_stmt|;
for|for
control|(
name|long
name|maxRowCount
range|:
name|Arrays
operator|.
name|asList
argument_list|(
operator|-
literal|1L
argument_list|,
literal|0L
argument_list|,
literal|1L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
control|)
block|{
name|Service
operator|.
name|PrepareAndExecuteRequest
name|prepareAndExecuteReq
init|=
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|(
name|connectionId
argument_list|,
name|statementId
argument_list|,
name|sql
argument_list|,
name|maxRowCount
argument_list|,
name|maxRowsInFirstFrame
argument_list|)
decl_stmt|;
name|Requests
operator|.
name|PrepareAndExecuteRequest
name|prepareAndExecuteProtoReq
init|=
name|prepareAndExecuteReq
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteProtoReq
operator|.
name|getMaxRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteProtoReq
operator|.
name|getMaxRowsTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowsInFirstFrame
argument_list|,
name|prepareAndExecuteProtoReq
operator|.
name|getFirstFrameMaxSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prepareAndExecuteReq
argument_list|,
name|prepareAndExecuteReq
operator|.
name|deserialize
argument_list|(
name|prepareAndExecuteProtoReq
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrepareAndExecuteDeserialization
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|sql
init|=
literal|"SELECT * FROM FOO"
decl_stmt|;
specifier|final
name|String
name|connectionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|long
name|maxRowCount
init|=
literal|200L
decl_stmt|;
specifier|final
name|int
name|maxRowsInFirstFrame
init|=
literal|50
decl_stmt|;
comment|// The "current" serialization strategy (maxRowsTotal and firstFrameMaxSize)
name|Requests
operator|.
name|PrepareAndExecuteRequest
name|protoPrepare
init|=
name|Requests
operator|.
name|PrepareAndExecuteRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowsTotal
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|setFirstFrameMaxSize
argument_list|(
name|maxRowsInFirstFrame
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Service
operator|.
name|PrepareAndExecuteRequest
name|prepareAndExecuteReq
init|=
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowsInFirstFrame
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowsInFirstFrame
argument_list|)
expr_stmt|;
comment|// The "old" serialization strategy (maxRowCount)
name|protoPrepare
operator|=
name|Requests
operator|.
name|PrepareAndExecuteRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowCount
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|prepareAndExecuteReq
operator|=
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AvaticaUtils
operator|.
name|toSaturatedInt
argument_list|(
name|maxRowCount
argument_list|)
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowsInFirstFrame
argument_list|)
expr_stmt|;
comment|// Both the new and old provided should default to the new (firstFrameMaxSize should be the
comment|// the same as what ultimately is set to maxRowCount)
name|protoPrepare
operator|=
name|Requests
operator|.
name|PrepareAndExecuteRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowCount
argument_list|(
literal|500L
argument_list|)
operator|.
name|setMaxRowsTotal
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|prepareAndExecuteReq
operator|=
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AvaticaUtils
operator|.
name|toSaturatedInt
argument_list|(
name|maxRowCount
argument_list|)
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowsInFirstFrame
argument_list|)
expr_stmt|;
comment|// Same as previous example, but explicitly setting maxRowsInFirstFrame too
name|protoPrepare
operator|=
name|Requests
operator|.
name|PrepareAndExecuteRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setSql
argument_list|(
name|sql
argument_list|)
operator|.
name|setMaxRowCount
argument_list|(
literal|500L
argument_list|)
operator|.
name|setMaxRowsTotal
argument_list|(
name|maxRowCount
argument_list|)
operator|.
name|setFirstFrameMaxSize
argument_list|(
name|maxRowsInFirstFrame
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|prepareAndExecuteReq
operator|=
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoPrepare
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowsInFirstFrame
argument_list|,
name|prepareAndExecuteReq
operator|.
name|maxRowsInFirstFrame
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFetchRequestSerialization
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|connectionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|int
name|statementId
init|=
literal|12345
decl_stmt|;
specifier|final
name|long
name|offset
init|=
literal|0L
decl_stmt|;
for|for
control|(
name|int
name|maxRowCount
range|:
name|Arrays
operator|.
name|asList
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
control|)
block|{
name|Service
operator|.
name|FetchRequest
name|fetchReq
init|=
operator|new
name|Service
operator|.
name|FetchRequest
argument_list|(
name|connectionId
argument_list|,
name|statementId
argument_list|,
name|offset
argument_list|,
name|maxRowCount
argument_list|)
decl_stmt|;
name|Requests
operator|.
name|FetchRequest
name|fetchProtoReq
init|=
name|fetchReq
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|fetchProtoReq
operator|.
name|getFetchMaxRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxRowCount
argument_list|,
name|fetchProtoReq
operator|.
name|getFrameMaxSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fetchReq
argument_list|,
name|fetchReq
operator|.
name|deserialize
argument_list|(
name|fetchProtoReq
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFetchRequestDeserialization
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|connectionId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|int
name|statementId
init|=
literal|12345
decl_stmt|;
specifier|final
name|long
name|offset
init|=
literal|0L
decl_stmt|;
specifier|final
name|int
name|maxSize
init|=
literal|200
decl_stmt|;
comment|// The "current" serialization strategy.
name|Requests
operator|.
name|FetchRequest
name|protoFetch
init|=
name|Requests
operator|.
name|FetchRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setStatementId
argument_list|(
name|statementId
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
operator|.
name|setFrameMaxSize
argument_list|(
name|maxSize
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Service
operator|.
name|FetchRequest
name|fetchReq
init|=
operator|new
name|Service
operator|.
name|FetchRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoFetch
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|maxSize
argument_list|,
name|fetchReq
operator|.
name|fetchMaxRowCount
argument_list|)
expr_stmt|;
comment|// The "old" serialization strategy.
name|protoFetch
operator|=
name|Requests
operator|.
name|FetchRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setStatementId
argument_list|(
name|statementId
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
operator|.
name|setFetchMaxRowCount
argument_list|(
name|maxSize
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|fetchReq
operator|=
operator|new
name|Service
operator|.
name|FetchRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoFetch
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxSize
argument_list|,
name|fetchReq
operator|.
name|fetchMaxRowCount
argument_list|)
expr_stmt|;
comment|// Both the new and old provided should default to the new
name|protoFetch
operator|=
name|Requests
operator|.
name|FetchRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
name|connectionId
argument_list|)
operator|.
name|setStatementId
argument_list|(
name|statementId
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
operator|.
name|setFetchMaxRowCount
argument_list|(
literal|100
argument_list|)
operator|.
name|setFrameMaxSize
argument_list|(
name|maxSize
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|fetchReq
operator|=
operator|new
name|Service
operator|.
name|FetchRequest
argument_list|()
operator|.
name|deserialize
argument_list|(
name|protoFetch
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxSize
argument_list|,
name|fetchReq
operator|.
name|fetchMaxRowCount
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End ProtobufSerializationTest.java
end_comment

end_unit

