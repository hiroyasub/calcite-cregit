begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|StatusLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|protocol
operator|.
name|HttpClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|StringEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_comment
comment|/**  * Test class for {@link AvaticaCommonsHttpClientImpl}  */
end_comment

begin_class
specifier|public
class|class
name|AvaticaCommonsHttpClientImplTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testRetryOnHttp503
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|byte
index|[]
name|requestBytes
init|=
literal|"fake_request"
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
decl_stmt|;
specifier|final
name|CloseableHttpResponse
name|badResponse
init|=
name|mock
argument_list|(
name|CloseableHttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|CloseableHttpResponse
name|goodResponse
init|=
name|mock
argument_list|(
name|CloseableHttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|StatusLine
name|badStatusLine
init|=
name|mock
argument_list|(
name|StatusLine
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|StatusLine
name|goodStatusLine
init|=
name|mock
argument_list|(
name|StatusLine
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|StringEntity
name|responseEntity
init|=
operator|new
name|StringEntity
argument_list|(
literal|"success"
argument_list|)
decl_stmt|;
specifier|final
name|Answer
argument_list|<
name|CloseableHttpResponse
argument_list|>
name|failThenSucceed
init|=
operator|new
name|Answer
argument_list|<
name|CloseableHttpResponse
argument_list|>
argument_list|()
block|{
specifier|private
name|int
name|iteration
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
name|CloseableHttpResponse
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|iteration
operator|++
expr_stmt|;
if|if
condition|(
literal|1
operator|==
name|iteration
condition|)
block|{
return|return
name|badResponse
return|;
block|}
else|else
block|{
return|return
name|goodResponse
return|;
block|}
block|}
block|}
decl_stmt|;
specifier|final
name|AvaticaCommonsHttpClientImpl
name|client
init|=
name|mock
argument_list|(
name|AvaticaCommonsHttpClientImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|client
operator|.
name|send
argument_list|(
name|any
argument_list|(
name|byte
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|client
operator|.
name|execute
argument_list|(
name|any
argument_list|(
name|HttpPost
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|HttpClientContext
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|then
argument_list|(
name|failThenSucceed
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|badResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|badStatusLine
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|badStatusLine
operator|.
name|getStatusCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_UNAVAILABLE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|goodResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|goodStatusLine
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|goodStatusLine
operator|.
name|getStatusCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_OK
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|goodResponse
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|responseEntity
argument_list|)
expr_stmt|;
name|byte
index|[]
name|responseBytes
init|=
name|client
operator|.
name|send
argument_list|(
name|requestBytes
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"success"
argument_list|,
operator|new
name|String
argument_list|(
name|responseBytes
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End AvaticaCommonsHttpClientImplTest.java
end_comment

end_unit

