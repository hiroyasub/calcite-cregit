begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|noop
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Gauge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Meter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_comment
comment|/**  * {@link MetricsSystem} implementation which does nothing. Returns {@link Metric} implementations  * which also does nothing (avoiding null instances).  */
end_comment

begin_class
specifier|public
class|class
name|NoopMetricsSystem
implements|implements
name|MetricsSystem
block|{
specifier|private
specifier|static
specifier|final
name|NoopMetricsSystem
name|NOOP_METRICS
init|=
operator|new
name|NoopMetricsSystem
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Timer
name|TIMER
init|=
operator|new
name|NoopTimer
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Histogram
name|HISTOGRAM
init|=
operator|new
name|NoopHistogram
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Meter
name|METER
init|=
operator|new
name|NoopMeter
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Counter
name|COUNTER
init|=
operator|new
name|NoopCounter
argument_list|()
decl_stmt|;
comment|/**    * @return A {@link NoopMetricsSystem} instance.    */
specifier|public
specifier|static
name|NoopMetricsSystem
name|getInstance
parameter_list|()
block|{
return|return
name|NOOP_METRICS
return|;
block|}
specifier|private
name|NoopMetricsSystem
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|Timer
name|getTimer
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|TIMER
return|;
block|}
annotation|@
name|Override
specifier|public
name|Histogram
name|getHistogram
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|HISTOGRAM
return|;
block|}
annotation|@
name|Override
specifier|public
name|Meter
name|getMeter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|METER
return|;
block|}
annotation|@
name|Override
specifier|public
name|Counter
name|getCounter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|COUNTER
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|register
parameter_list|(
name|String
name|name
parameter_list|,
name|Gauge
argument_list|<
name|T
argument_list|>
name|gauge
parameter_list|)
block|{
block|}
block|}
end_class

begin_comment
comment|// End NoopMetricsSystem.java
end_comment

end_unit

