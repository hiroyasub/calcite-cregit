begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Test class for ProtobufService.  */
end_comment

begin_class
specifier|public
class|class
name|ProtobufServiceTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testCastProtobufMessage
parameter_list|()
block|{
specifier|final
name|Requests
operator|.
name|CommitRequest
name|commitReq
init|=
name|Requests
operator|.
name|CommitRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
literal|"cnxn1"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|Requests
operator|.
name|RollbackRequest
name|rollbackReq
init|=
name|Requests
operator|.
name|RollbackRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setConnectionId
argument_list|(
literal|"cnxn1"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|commitReq
argument_list|,
name|ProtobufService
operator|.
name|castProtobufMessage
argument_list|(
name|commitReq
argument_list|,
name|Requests
operator|.
name|CommitRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|rollbackReq
argument_list|,
name|ProtobufService
operator|.
name|castProtobufMessage
argument_list|(
name|rollbackReq
argument_list|,
name|Requests
operator|.
name|RollbackRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|ProtobufService
operator|.
name|castProtobufMessage
argument_list|(
name|commitReq
argument_list|,
name|Requests
operator|.
name|RollbackRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have seen IllegalArgumentException casting CommitRequest into RollbackRequest"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Expected
block|}
try|try
block|{
name|ProtobufService
operator|.
name|castProtobufMessage
argument_list|(
name|rollbackReq
argument_list|,
name|Requests
operator|.
name|CommitRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have seen IllegalArgumentException casting RollbackRequest into CommitRequest"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Expected
block|}
block|}
block|}
end_class

begin_comment
comment|// End ProtobufServiceTest.java
end_comment

end_unit

