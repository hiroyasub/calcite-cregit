begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|AvaticaClientRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|AvaticaSeverity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
operator|.
name|ErrorResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
operator|.
name|RpcMetadataResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * A test class for ErrorResponse.  */
end_comment

begin_class
specifier|public
class|class
name|ErrorResponseTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testEquality
parameter_list|()
block|{
specifier|final
name|String
name|message
init|=
literal|"There was an error"
decl_stmt|;
specifier|final
name|int
name|code
init|=
literal|23
decl_stmt|;
specifier|final
name|String
name|state
init|=
literal|"a1b2c"
decl_stmt|;
specifier|final
name|AvaticaSeverity
name|severity
init|=
name|AvaticaSeverity
operator|.
name|ERROR
decl_stmt|;
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|exceptions
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Server Stacktrace 1"
argument_list|,
literal|"Server Stacktace 2"
argument_list|)
decl_stmt|;
specifier|final
name|RpcMetadataResponse
name|metadata
init|=
operator|new
name|RpcMetadataResponse
argument_list|(
literal|"localhost:8765"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ErrorResponse
argument_list|(
name|message
argument_list|,
name|code
argument_list|,
name|state
argument_list|,
name|severity
argument_list|,
name|exceptions
argument_list|,
name|metadata
argument_list|)
argument_list|,
operator|new
name|ErrorResponse
argument_list|(
name|message
argument_list|,
name|code
argument_list|,
name|state
argument_list|,
name|severity
argument_list|,
name|exceptions
argument_list|,
name|metadata
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToClientRTE
parameter_list|()
block|{
specifier|final
name|String
name|message
init|=
literal|"There was an error"
decl_stmt|;
specifier|final
name|int
name|code
init|=
literal|23
decl_stmt|;
specifier|final
name|String
name|state
init|=
literal|"a1b2c"
decl_stmt|;
specifier|final
name|AvaticaSeverity
name|severity
init|=
name|AvaticaSeverity
operator|.
name|ERROR
decl_stmt|;
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|exceptions
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Server Stacktrace 1"
argument_list|,
literal|"Server Stacktace 2"
argument_list|)
decl_stmt|;
specifier|final
name|RpcMetadataResponse
name|metadata
init|=
operator|new
name|RpcMetadataResponse
argument_list|(
literal|"localhost:8765"
argument_list|)
decl_stmt|;
specifier|final
name|ErrorResponse
name|resp
init|=
operator|new
name|ErrorResponse
argument_list|(
name|message
argument_list|,
name|code
argument_list|,
name|state
argument_list|,
name|severity
argument_list|,
name|exceptions
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|AvaticaClientRuntimeException
name|exception
init|=
name|resp
operator|.
name|toException
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected error message to end with '"
operator|+
name|resp
operator|.
name|errorMessage
operator|+
literal|"', but was '"
operator|+
name|exception
operator|.
name|getMessage
argument_list|()
operator|+
literal|"'"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
operator|.
name|endsWith
argument_list|(
name|resp
operator|.
name|errorMessage
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resp
operator|.
name|errorCode
argument_list|,
name|exception
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resp
operator|.
name|severity
argument_list|,
name|exception
operator|.
name|getSeverity
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resp
operator|.
name|sqlState
argument_list|,
name|exception
operator|.
name|getSqlState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resp
operator|.
name|exceptions
argument_list|,
name|exception
operator|.
name|getServerExceptions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resp
operator|.
name|rpcMetadata
argument_list|,
name|exception
operator|.
name|getRpcMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End ErrorResponseTest.java
end_comment

end_unit

