begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: responses.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
package|;
end_package

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|,
literal|"rawtypes"
block|}
argument_list|)
specifier|public
specifier|final
class|class
name|Responses
block|{
specifier|private
name|Responses
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{
block|}
specifier|public
interface|interface
name|ResultSetResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:ResultSetResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string connection_id = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getConnectionId
parameter_list|()
function_decl|;
comment|/**      *<code>optional string connection_id = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getConnectionIdBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 statement_id = 2;</code>      */
name|int
name|getStatementId
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool own_statement = 3;</code>      */
name|boolean
name|getOwnStatement
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Signature signature = 4;</code>      */
name|boolean
name|hasSignature
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Signature signature = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|getSignature
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Signature signature = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|SignatureOrBuilder
name|getSignatureOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Frame first_frame = 5;</code>      */
name|boolean
name|hasFirstFrame
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Frame first_frame = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|getFirstFrame
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Frame first_frame = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
name|getFirstFrameOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 update_count = 6;</code>      *      *<pre>      * -1 for normal result sets, else this response contains a dummy result set      *</pre>      */
name|long
name|getUpdateCount
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 7;</code>      *      *<pre>      * with no signature nor other data.      *</pre>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 7;</code>      *      *<pre>      * with no signature nor other data.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 7;</code>      *      *<pre>      * with no signature nor other data.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ResultSetResponse}    *    *<pre>    * Response that contains a result set.    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|ResultSetResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:ResultSetResponse)
name|ResultSetResponseOrBuilder
block|{
comment|// Use ResultSetResponse.newBuilder() to construct.
specifier|private
name|ResultSetResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ResultSetResponse
parameter_list|()
block|{
name|connectionId_
operator|=
literal|""
expr_stmt|;
name|statementId_
operator|=
literal|0
expr_stmt|;
name|ownStatement_
operator|=
literal|false
expr_stmt|;
name|updateCount_
operator|=
literal|0L
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|ResultSetResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
name|connectionId_
operator|=
name|s
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|statementId_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|ownStatement_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|signature_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|signature_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|signature_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|signature_
argument_list|)
expr_stmt|;
name|signature_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|42
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|firstFrame_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|firstFrame_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|firstFrame_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|firstFrame_
argument_list|)
expr_stmt|;
name|firstFrame_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|48
case|:
block|{
name|updateCount_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ResultSetResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ResultSetResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CONNECTION_ID_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|connectionId_
decl_stmt|;
comment|/**      *<code>optional string connection_id = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getConnectionId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|connectionId_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string connection_id = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getConnectionIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|connectionId_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STATEMENT_ID_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|statementId_
decl_stmt|;
comment|/**      *<code>optional uint32 statement_id = 2;</code>      */
specifier|public
name|int
name|getStatementId
parameter_list|()
block|{
return|return
name|statementId_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OWN_STATEMENT_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|boolean
name|ownStatement_
decl_stmt|;
comment|/**      *<code>optional bool own_statement = 3;</code>      */
specifier|public
name|boolean
name|getOwnStatement
parameter_list|()
block|{
return|return
name|ownStatement_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SIGNATURE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|signature_
decl_stmt|;
comment|/**      *<code>optional .Signature signature = 4;</code>      */
specifier|public
name|boolean
name|hasSignature
parameter_list|()
block|{
return|return
name|signature_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .Signature signature = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|getSignature
parameter_list|()
block|{
return|return
name|signature_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|signature_
return|;
block|}
comment|/**      *<code>optional .Signature signature = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|SignatureOrBuilder
name|getSignatureOrBuilder
parameter_list|()
block|{
return|return
name|getSignature
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|FIRST_FRAME_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|firstFrame_
decl_stmt|;
comment|/**      *<code>optional .Frame first_frame = 5;</code>      */
specifier|public
name|boolean
name|hasFirstFrame
parameter_list|()
block|{
return|return
name|firstFrame_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .Frame first_frame = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|getFirstFrame
parameter_list|()
block|{
return|return
name|firstFrame_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|firstFrame_
return|;
block|}
comment|/**      *<code>optional .Frame first_frame = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
name|getFirstFrameOrBuilder
parameter_list|()
block|{
return|return
name|getFirstFrame
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UPDATE_COUNT_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|long
name|updateCount_
decl_stmt|;
comment|/**      *<code>optional uint64 update_count = 6;</code>      *      *<pre>      * -1 for normal result sets, else this response contains a dummy result set      *</pre>      */
specifier|public
name|long
name|getUpdateCount
parameter_list|()
block|{
return|return
name|updateCount_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 7;</code>      *      *<pre>      * with no signature nor other data.      *</pre>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 7;</code>      *      *<pre>      * with no signature nor other data.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 7;</code>      *      *<pre>      * with no signature nor other data.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|!
name|getConnectionIdBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|connectionId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|statementId_
operator|!=
literal|0
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|2
argument_list|,
name|statementId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ownStatement_
operator|!=
literal|false
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|3
argument_list|,
name|ownStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|signature_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|getSignature
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|firstFrame_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|getFirstFrame
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|updateCount_
operator|!=
literal|0L
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|6
argument_list|,
name|updateCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|!
name|getConnectionIdBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|connectionId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|statementId_
operator|!=
literal|0
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|2
argument_list|,
name|statementId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ownStatement_
operator|!=
literal|false
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|3
argument_list|,
name|ownStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|signature_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|getSignature
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|firstFrame_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|getFirstFrame
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|updateCount_
operator|!=
literal|0L
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|6
argument_list|,
name|updateCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ResultSetResponse}      *      *<pre>      * Response that contains a result set.      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:ResultSetResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ResultSetResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ResultSetResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.ResultSetResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|connectionId_
operator|=
literal|""
expr_stmt|;
name|statementId_
operator|=
literal|0
expr_stmt|;
name|ownStatement_
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
name|signature_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|signature_
operator|=
literal|null
expr_stmt|;
name|signatureBuilder_
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
name|firstFrame_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|firstFrame_
operator|=
literal|null
expr_stmt|;
name|firstFrameBuilder_
operator|=
literal|null
expr_stmt|;
block|}
name|updateCount_
operator|=
literal|0L
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ResultSetResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|result
operator|.
name|connectionId_
operator|=
name|connectionId_
expr_stmt|;
name|result
operator|.
name|statementId_
operator|=
name|statementId_
expr_stmt|;
name|result
operator|.
name|ownStatement_
operator|=
name|ownStatement_
expr_stmt|;
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|signature_
operator|=
name|signature_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|signature_
operator|=
name|signatureBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|firstFrame_
operator|=
name|firstFrame_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|firstFrame_
operator|=
name|firstFrameBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|updateCount_
operator|=
name|updateCount_
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|getConnectionId
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|connectionId_
operator|=
name|other
operator|.
name|connectionId_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getStatementId
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|setStatementId
argument_list|(
name|other
operator|.
name|getStatementId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getOwnStatement
argument_list|()
operator|!=
literal|false
condition|)
block|{
name|setOwnStatement
argument_list|(
name|other
operator|.
name|getOwnStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSignature
argument_list|()
condition|)
block|{
name|mergeSignature
argument_list|(
name|other
operator|.
name|getSignature
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasFirstFrame
argument_list|()
condition|)
block|{
name|mergeFirstFrame
argument_list|(
name|other
operator|.
name|getFirstFrame
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getUpdateCount
argument_list|()
operator|!=
literal|0L
condition|)
block|{
name|setUpdateCount
argument_list|(
name|other
operator|.
name|getUpdateCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|connectionId_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getConnectionId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|connectionId_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getConnectionIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|connectionId_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|Builder
name|setConnectionId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|connectionId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|Builder
name|clearConnectionId
parameter_list|()
block|{
name|connectionId_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getConnectionId
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|Builder
name|setConnectionIdBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|connectionId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|statementId_
decl_stmt|;
comment|/**        *<code>optional uint32 statement_id = 2;</code>        */
specifier|public
name|int
name|getStatementId
parameter_list|()
block|{
return|return
name|statementId_
return|;
block|}
comment|/**        *<code>optional uint32 statement_id = 2;</code>        */
specifier|public
name|Builder
name|setStatementId
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|statementId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 statement_id = 2;</code>        */
specifier|public
name|Builder
name|clearStatementId
parameter_list|()
block|{
name|statementId_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|ownStatement_
decl_stmt|;
comment|/**        *<code>optional bool own_statement = 3;</code>        */
specifier|public
name|boolean
name|getOwnStatement
parameter_list|()
block|{
return|return
name|ownStatement_
return|;
block|}
comment|/**        *<code>optional bool own_statement = 3;</code>        */
specifier|public
name|Builder
name|setOwnStatement
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|ownStatement_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool own_statement = 3;</code>        */
specifier|public
name|Builder
name|clearOwnStatement
parameter_list|()
block|{
name|ownStatement_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|signature_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|SignatureOrBuilder
argument_list|>
name|signatureBuilder_
decl_stmt|;
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|boolean
name|hasSignature
parameter_list|()
block|{
return|return
name|signatureBuilder_
operator|!=
literal|null
operator|||
name|signature_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|getSignature
parameter_list|()
block|{
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|signature_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|signature_
return|;
block|}
else|else
block|{
return|return
name|signatureBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|Builder
name|setSignature
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|value
parameter_list|)
block|{
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|signature_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|signatureBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|Builder
name|setSignature
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
name|signature_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|signatureBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|Builder
name|mergeSignature
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
name|value
parameter_list|)
block|{
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|signature_
operator|!=
literal|null
condition|)
block|{
name|signature_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|newBuilder
argument_list|(
name|signature_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|signature_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|signatureBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|Builder
name|clearSignature
parameter_list|()
block|{
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
name|signature_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|signature_
operator|=
literal|null
expr_stmt|;
name|signatureBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|Builder
name|getSignatureBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSignatureFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|SignatureOrBuilder
name|getSignatureOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|signatureBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|signatureBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|signature_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|signature_
return|;
block|}
block|}
comment|/**        *<code>optional .Signature signature = 4;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|SignatureOrBuilder
argument_list|>
name|getSignatureFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|signatureBuilder_
operator|==
literal|null
condition|)
block|{
name|signatureBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Signature
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|SignatureOrBuilder
argument_list|>
argument_list|(
name|getSignature
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|signature_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|signatureBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|firstFrame_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
argument_list|>
name|firstFrameBuilder_
decl_stmt|;
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|boolean
name|hasFirstFrame
parameter_list|()
block|{
return|return
name|firstFrameBuilder_
operator|!=
literal|null
operator|||
name|firstFrame_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|getFirstFrame
parameter_list|()
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|firstFrame_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|firstFrame_
return|;
block|}
else|else
block|{
return|return
name|firstFrameBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|Builder
name|setFirstFrame
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|value
parameter_list|)
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|firstFrame_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|firstFrameBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|Builder
name|setFirstFrame
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
name|firstFrame_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|firstFrameBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|Builder
name|mergeFirstFrame
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|value
parameter_list|)
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|firstFrame_
operator|!=
literal|null
condition|)
block|{
name|firstFrame_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|newBuilder
argument_list|(
name|firstFrame_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|firstFrame_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|firstFrameBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|Builder
name|clearFirstFrame
parameter_list|()
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
name|firstFrame_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|firstFrame_
operator|=
literal|null
expr_stmt|;
name|firstFrameBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
name|getFirstFrameBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getFirstFrameFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
name|getFirstFrameOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|firstFrameBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|firstFrame_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|firstFrame_
return|;
block|}
block|}
comment|/**        *<code>optional .Frame first_frame = 5;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
argument_list|>
name|getFirstFrameFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|firstFrameBuilder_
operator|==
literal|null
condition|)
block|{
name|firstFrameBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
argument_list|>
argument_list|(
name|getFirstFrame
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|firstFrame_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|firstFrameBuilder_
return|;
block|}
specifier|private
name|long
name|updateCount_
decl_stmt|;
comment|/**        *<code>optional uint64 update_count = 6;</code>        *        *<pre>        * -1 for normal result sets, else this response contains a dummy result set        *</pre>        */
specifier|public
name|long
name|getUpdateCount
parameter_list|()
block|{
return|return
name|updateCount_
return|;
block|}
comment|/**        *<code>optional uint64 update_count = 6;</code>        *        *<pre>        * -1 for normal result sets, else this response contains a dummy result set        *</pre>        */
specifier|public
name|Builder
name|setUpdateCount
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|updateCount_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 update_count = 6;</code>        *        *<pre>        * -1 for normal result sets, else this response contains a dummy result set        *</pre>        */
specifier|public
name|Builder
name|clearUpdateCount
parameter_list|()
block|{
name|updateCount_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 7;</code>        *        *<pre>        * with no signature nor other data.        *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ResultSetResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:ResultSetResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ResultSetResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ResultSetResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|ResultSetResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|ResultSetResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ResultSetResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ResultSetResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ExecuteResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:ExecuteResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
name|getResultsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|getResults
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
name|int
name|getResultsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
argument_list|>
name|getResultsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
name|getResultsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional bool missing_statement = 2;</code>      *      *<pre>      * Did the request fail because of no-cached statement      *</pre>      */
name|boolean
name|getMissingStatement
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ExecuteResponse}    *    *<pre>    * Response to PrepareAndExecuteRequest    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|ExecuteResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:ExecuteResponse)
name|ExecuteResponseOrBuilder
block|{
comment|// Use ExecuteResponse.newBuilder() to construct.
specifier|private
name|ExecuteResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ExecuteResponse
parameter_list|()
block|{
name|results_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|missingStatement_
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|ExecuteResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|results_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|results_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|missingStatement_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|results_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|results_
argument_list|)
expr_stmt|;
block|}
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ExecuteResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ExecuteResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|RESULTS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
name|results_
decl_stmt|;
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
name|getResultsList
parameter_list|()
block|{
return|return
name|results_
return|;
block|}
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
argument_list|>
name|getResultsOrBuilderList
parameter_list|()
block|{
return|return
name|results_
return|;
block|}
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
specifier|public
name|int
name|getResultsCount
parameter_list|()
block|{
return|return
name|results_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|getResults
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|results_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .ResultSetResponse results = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
name|getResultsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|results_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MISSING_STATEMENT_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|missingStatement_
decl_stmt|;
comment|/**      *<code>optional bool missing_statement = 2;</code>      *      *<pre>      * Did the request fail because of no-cached statement      *</pre>      */
specifier|public
name|boolean
name|getMissingStatement
parameter_list|()
block|{
return|return
name|missingStatement_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|results_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|results_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|missingStatement_
operator|!=
literal|false
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|missingStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|results_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|results_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|missingStatement_
operator|!=
literal|false
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|missingStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ExecuteResponse}      *      *<pre>      * Response to PrepareAndExecuteRequest      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:ExecuteResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ExecuteResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ExecuteResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.ExecuteResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getResultsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|results_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|missingStatement_
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ExecuteResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|results_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|results_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|results_
operator|=
name|results_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|results_
operator|=
name|resultsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|missingStatement_
operator|=
name|missingStatement_
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|results_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|results_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|results_
operator|=
name|other
operator|.
name|results_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|results_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|results_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|resultsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|resultsBuilder_
operator|=
literal|null
expr_stmt|;
name|results_
operator|=
name|other
operator|.
name|results_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|resultsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getResultsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|results_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|getMissingStatement
argument_list|()
operator|!=
literal|false
condition|)
block|{
name|setMissingStatement
argument_list|(
name|other
operator|.
name|getMissingStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
name|results_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureResultsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|results_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
argument_list|(
name|results_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
argument_list|>
name|resultsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
name|getResultsList
parameter_list|()
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|results_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|resultsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|int
name|getResultsCount
parameter_list|()
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|results_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|resultsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|getResults
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|results_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|resultsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|setResults
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|value
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|setResults
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|addResults
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|value
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|addResults
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
name|value
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|addResults
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|addResults
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|addAllResults
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|results_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|clearResults
parameter_list|()
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|results_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|Builder
name|removeResults
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResultsIsMutable
argument_list|()
expr_stmt|;
name|results_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resultsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
name|getResultsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getResultsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
name|getResultsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|results_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|resultsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
argument_list|>
name|getResultsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|resultsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|resultsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|results_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
name|addResultsBuilder
parameter_list|()
block|{
return|return
name|getResultsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
name|addResultsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getResultsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ResultSetResponse results = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
argument_list|>
name|getResultsBuilderList
parameter_list|()
block|{
return|return
name|getResultsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
argument_list|>
name|getResultsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|resultsBuilder_
operator|==
literal|null
condition|)
block|{
name|resultsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponseOrBuilder
argument_list|>
argument_list|(
name|results_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|results_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|resultsBuilder_
return|;
block|}
specifier|private
name|boolean
name|missingStatement_
decl_stmt|;
comment|/**        *<code>optional bool missing_statement = 2;</code>        *        *<pre>        * Did the request fail because of no-cached statement        *</pre>        */
specifier|public
name|boolean
name|getMissingStatement
parameter_list|()
block|{
return|return
name|missingStatement_
return|;
block|}
comment|/**        *<code>optional bool missing_statement = 2;</code>        *        *<pre>        * Did the request fail because of no-cached statement        *</pre>        */
specifier|public
name|Builder
name|setMissingStatement
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|missingStatement_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool missing_statement = 2;</code>        *        *<pre>        * Did the request fail because of no-cached statement        *</pre>        */
specifier|public
name|Builder
name|clearMissingStatement
parameter_list|()
block|{
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ExecuteResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:ExecuteResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExecuteResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ExecuteResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|ExecuteResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|ExecuteResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExecuteResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExecuteResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|PrepareResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:PrepareResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .StatementHandle statement = 1;</code>      */
name|boolean
name|hasStatement
parameter_list|()
function_decl|;
comment|/**      *<code>optional .StatementHandle statement = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|getStatement
parameter_list|()
function_decl|;
comment|/**      *<code>optional .StatementHandle statement = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandleOrBuilder
name|getStatementOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code PrepareResponse}    *    *<pre>    * Response to PrepareRequest    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|PrepareResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:PrepareResponse)
name|PrepareResponseOrBuilder
block|{
comment|// Use PrepareResponse.newBuilder() to construct.
specifier|private
name|PrepareResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|PrepareResponse
parameter_list|()
block|{
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|PrepareResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|statement_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|statement_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|statement_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|statement_
argument_list|)
expr_stmt|;
name|statement_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_PrepareResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_PrepareResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STATEMENT_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|statement_
decl_stmt|;
comment|/**      *<code>optional .StatementHandle statement = 1;</code>      */
specifier|public
name|boolean
name|hasStatement
parameter_list|()
block|{
return|return
name|statement_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .StatementHandle statement = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|getStatement
parameter_list|()
block|{
return|return
name|statement_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|statement_
return|;
block|}
comment|/**      *<code>optional .StatementHandle statement = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandleOrBuilder
name|getStatementOrBuilder
parameter_list|()
block|{
return|return
name|getStatement
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|statement_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|statement_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code PrepareResponse}      *      *<pre>      * Response to PrepareRequest      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:PrepareResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_PrepareResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_PrepareResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.PrepareResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
name|statement_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|statement_
operator|=
literal|null
expr_stmt|;
name|statementBuilder_
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_PrepareResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|statement_
operator|=
name|statement_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|statement_
operator|=
name|statementBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasStatement
argument_list|()
condition|)
block|{
name|mergeStatement
argument_list|(
name|other
operator|.
name|getStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|statement_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandleOrBuilder
argument_list|>
name|statementBuilder_
decl_stmt|;
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|boolean
name|hasStatement
parameter_list|()
block|{
return|return
name|statementBuilder_
operator|!=
literal|null
operator|||
name|statement_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|getStatement
parameter_list|()
block|{
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|statement_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|statement_
return|;
block|}
else|else
block|{
return|return
name|statementBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|Builder
name|setStatement
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|value
parameter_list|)
block|{
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|statement_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|statementBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|Builder
name|setStatement
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
name|statement_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|statementBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|Builder
name|mergeStatement
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
name|value
parameter_list|)
block|{
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|statement_
operator|!=
literal|null
condition|)
block|{
name|statement_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|newBuilder
argument_list|(
name|statement_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|statement_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|statementBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|Builder
name|clearStatement
parameter_list|()
block|{
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
name|statement_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|statement_
operator|=
literal|null
expr_stmt|;
name|statementBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|Builder
name|getStatementBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getStatementFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandleOrBuilder
name|getStatementOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|statementBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|statementBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|statement_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|statement_
return|;
block|}
block|}
comment|/**        *<code>optional .StatementHandle statement = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandleOrBuilder
argument_list|>
name|getStatementFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|statementBuilder_
operator|==
literal|null
condition|)
block|{
name|statementBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandle
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|StatementHandleOrBuilder
argument_list|>
argument_list|(
name|getStatement
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|statement_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|statementBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:PrepareResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:PrepareResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrepareResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|PrepareResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|PrepareResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|PrepareResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrepareResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrepareResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|FetchResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:FetchResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .Frame frame = 1;</code>      */
name|boolean
name|hasFrame
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Frame frame = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|getFrame
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Frame frame = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
name|getFrameOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool missing_statement = 2;</code>      *      *<pre>      * Did the request fail because of no-cached statement      *</pre>      */
name|boolean
name|getMissingStatement
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool missing_results = 3;</code>      *      *<pre>      * Did the request fail because of a cached-statement w/o ResultSet      *</pre>      */
name|boolean
name|getMissingResults
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 4;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code FetchResponse}    *    *<pre>    * Response to FetchRequest    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|FetchResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:FetchResponse)
name|FetchResponseOrBuilder
block|{
comment|// Use FetchResponse.newBuilder() to construct.
specifier|private
name|FetchResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FetchResponse
parameter_list|()
block|{
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|missingResults_
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|FetchResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|frame_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|frame_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|frame_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|frame_
argument_list|)
expr_stmt|;
name|frame_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|16
case|:
block|{
name|missingStatement_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|missingResults_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_FetchResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_FetchResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|FRAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|frame_
decl_stmt|;
comment|/**      *<code>optional .Frame frame = 1;</code>      */
specifier|public
name|boolean
name|hasFrame
parameter_list|()
block|{
return|return
name|frame_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .Frame frame = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|getFrame
parameter_list|()
block|{
return|return
name|frame_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|frame_
return|;
block|}
comment|/**      *<code>optional .Frame frame = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
name|getFrameOrBuilder
parameter_list|()
block|{
return|return
name|getFrame
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MISSING_STATEMENT_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|missingStatement_
decl_stmt|;
comment|/**      *<code>optional bool missing_statement = 2;</code>      *      *<pre>      * Did the request fail because of no-cached statement      *</pre>      */
specifier|public
name|boolean
name|getMissingStatement
parameter_list|()
block|{
return|return
name|missingStatement_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MISSING_RESULTS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|boolean
name|missingResults_
decl_stmt|;
comment|/**      *<code>optional bool missing_results = 3;</code>      *      *<pre>      * Did the request fail because of a cached-statement w/o ResultSet      *</pre>      */
specifier|public
name|boolean
name|getMissingResults
parameter_list|()
block|{
return|return
name|missingResults_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 4;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|frame_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getFrame
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|missingStatement_
operator|!=
literal|false
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|missingStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|missingResults_
operator|!=
literal|false
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|3
argument_list|,
name|missingResults_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|frame_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getFrame
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|missingStatement_
operator|!=
literal|false
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|missingStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|missingResults_
operator|!=
literal|false
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|3
argument_list|,
name|missingResults_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code FetchResponse}      *      *<pre>      * Response to FetchRequest      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:FetchResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_FetchResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_FetchResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.FetchResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
name|frame_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|frame_
operator|=
literal|null
expr_stmt|;
name|frameBuilder_
operator|=
literal|null
expr_stmt|;
block|}
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|missingResults_
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_FetchResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|frame_
operator|=
name|frame_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|frame_
operator|=
name|frameBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|missingStatement_
operator|=
name|missingStatement_
expr_stmt|;
name|result
operator|.
name|missingResults_
operator|=
name|missingResults_
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasFrame
argument_list|()
condition|)
block|{
name|mergeFrame
argument_list|(
name|other
operator|.
name|getFrame
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getMissingStatement
argument_list|()
operator|!=
literal|false
condition|)
block|{
name|setMissingStatement
argument_list|(
name|other
operator|.
name|getMissingStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getMissingResults
argument_list|()
operator|!=
literal|false
condition|)
block|{
name|setMissingResults
argument_list|(
name|other
operator|.
name|getMissingResults
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|frame_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
argument_list|>
name|frameBuilder_
decl_stmt|;
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|boolean
name|hasFrame
parameter_list|()
block|{
return|return
name|frameBuilder_
operator|!=
literal|null
operator|||
name|frame_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|getFrame
parameter_list|()
block|{
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|frame_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|frame_
return|;
block|}
else|else
block|{
return|return
name|frameBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|Builder
name|setFrame
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|value
parameter_list|)
block|{
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|frame_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|frameBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|Builder
name|setFrame
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
name|frame_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|frameBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|Builder
name|mergeFrame
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
name|value
parameter_list|)
block|{
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|frame_
operator|!=
literal|null
condition|)
block|{
name|frame_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|newBuilder
argument_list|(
name|frame_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|frame_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|frameBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|Builder
name|clearFrame
parameter_list|()
block|{
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
name|frame_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|frame_
operator|=
literal|null
expr_stmt|;
name|frameBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
name|getFrameBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getFrameFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
name|getFrameOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|frameBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|frameBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|frame_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|frame_
return|;
block|}
block|}
comment|/**        *<code>optional .Frame frame = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
argument_list|>
name|getFrameFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|frameBuilder_
operator|==
literal|null
condition|)
block|{
name|frameBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Frame
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|FrameOrBuilder
argument_list|>
argument_list|(
name|getFrame
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|frame_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|frameBuilder_
return|;
block|}
specifier|private
name|boolean
name|missingStatement_
decl_stmt|;
comment|/**        *<code>optional bool missing_statement = 2;</code>        *        *<pre>        * Did the request fail because of no-cached statement        *</pre>        */
specifier|public
name|boolean
name|getMissingStatement
parameter_list|()
block|{
return|return
name|missingStatement_
return|;
block|}
comment|/**        *<code>optional bool missing_statement = 2;</code>        *        *<pre>        * Did the request fail because of no-cached statement        *</pre>        */
specifier|public
name|Builder
name|setMissingStatement
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|missingStatement_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool missing_statement = 2;</code>        *        *<pre>        * Did the request fail because of no-cached statement        *</pre>        */
specifier|public
name|Builder
name|clearMissingStatement
parameter_list|()
block|{
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|missingResults_
decl_stmt|;
comment|/**        *<code>optional bool missing_results = 3;</code>        *        *<pre>        * Did the request fail because of a cached-statement w/o ResultSet        *</pre>        */
specifier|public
name|boolean
name|getMissingResults
parameter_list|()
block|{
return|return
name|missingResults_
return|;
block|}
comment|/**        *<code>optional bool missing_results = 3;</code>        *        *<pre>        * Did the request fail because of a cached-statement w/o ResultSet        *</pre>        */
specifier|public
name|Builder
name|setMissingResults
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|missingResults_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool missing_results = 3;</code>        *        *<pre>        * Did the request fail because of a cached-statement w/o ResultSet        *</pre>        */
specifier|public
name|Builder
name|clearMissingResults
parameter_list|()
block|{
name|missingResults_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 4;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:FetchResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:FetchResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FetchResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FetchResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|FetchResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|FetchResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FetchResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FetchResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|CreateStatementResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:CreateStatementResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string connection_id = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getConnectionId
parameter_list|()
function_decl|;
comment|/**      *<code>optional string connection_id = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getConnectionIdBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 statement_id = 2;</code>      */
name|int
name|getStatementId
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code CreateStatementResponse}    *    *<pre>    * Response to CreateStatementRequest    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|CreateStatementResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:CreateStatementResponse)
name|CreateStatementResponseOrBuilder
block|{
comment|// Use CreateStatementResponse.newBuilder() to construct.
specifier|private
name|CreateStatementResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CreateStatementResponse
parameter_list|()
block|{
name|connectionId_
operator|=
literal|""
expr_stmt|;
name|statementId_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|CreateStatementResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
name|connectionId_
operator|=
name|s
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|statementId_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CreateStatementResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CreateStatementResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CONNECTION_ID_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|connectionId_
decl_stmt|;
comment|/**      *<code>optional string connection_id = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getConnectionId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|connectionId_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string connection_id = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getConnectionIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|connectionId_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STATEMENT_ID_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|statementId_
decl_stmt|;
comment|/**      *<code>optional uint32 statement_id = 2;</code>      */
specifier|public
name|int
name|getStatementId
parameter_list|()
block|{
return|return
name|statementId_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|!
name|getConnectionIdBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|connectionId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|statementId_
operator|!=
literal|0
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|2
argument_list|,
name|statementId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|!
name|getConnectionIdBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|connectionId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|statementId_
operator|!=
literal|0
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|2
argument_list|,
name|statementId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code CreateStatementResponse}      *      *<pre>      * Response to CreateStatementRequest      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:CreateStatementResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CreateStatementResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CreateStatementResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.CreateStatementResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|connectionId_
operator|=
literal|""
expr_stmt|;
name|statementId_
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CreateStatementResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|result
operator|.
name|connectionId_
operator|=
name|connectionId_
expr_stmt|;
name|result
operator|.
name|statementId_
operator|=
name|statementId_
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|getConnectionId
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|connectionId_
operator|=
name|other
operator|.
name|connectionId_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getStatementId
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|setStatementId
argument_list|(
name|other
operator|.
name|getStatementId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|connectionId_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getConnectionId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|connectionId_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getConnectionIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|connectionId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|connectionId_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|Builder
name|setConnectionId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|connectionId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|Builder
name|clearConnectionId
parameter_list|()
block|{
name|connectionId_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getConnectionId
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string connection_id = 1;</code>        */
specifier|public
name|Builder
name|setConnectionIdBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|connectionId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|statementId_
decl_stmt|;
comment|/**        *<code>optional uint32 statement_id = 2;</code>        */
specifier|public
name|int
name|getStatementId
parameter_list|()
block|{
return|return
name|statementId_
return|;
block|}
comment|/**        *<code>optional uint32 statement_id = 2;</code>        */
specifier|public
name|Builder
name|setStatementId
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|statementId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 statement_id = 2;</code>        */
specifier|public
name|Builder
name|clearStatementId
parameter_list|()
block|{
name|statementId_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:CreateStatementResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:CreateStatementResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CreateStatementResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|CreateStatementResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|CreateStatementResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|CreateStatementResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CreateStatementResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CreateStatementResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|CloseStatementResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:CloseStatementResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code CloseStatementResponse}    *    *<pre>    * Response to CloseStatementRequest    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|CloseStatementResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:CloseStatementResponse)
name|CloseStatementResponseOrBuilder
block|{
comment|// Use CloseStatementResponse.newBuilder() to construct.
specifier|private
name|CloseStatementResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CloseStatementResponse
parameter_list|()
block|{
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|CloseStatementResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseStatementResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseStatementResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code CloseStatementResponse}      *      *<pre>      * Response to CloseStatementRequest      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:CloseStatementResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseStatementResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseStatementResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.CloseStatementResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseStatementResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:CloseStatementResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:CloseStatementResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CloseStatementResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|CloseStatementResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|CloseStatementResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|CloseStatementResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CloseStatementResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CloseStatementResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|OpenConnectionResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:OpenConnectionResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code OpenConnectionResponse}    *    *<pre>    * Response to OpenConnectionRequest {    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|OpenConnectionResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:OpenConnectionResponse)
name|OpenConnectionResponseOrBuilder
block|{
comment|// Use OpenConnectionResponse.newBuilder() to construct.
specifier|private
name|OpenConnectionResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|OpenConnectionResponse
parameter_list|()
block|{
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|OpenConnectionResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_OpenConnectionResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_OpenConnectionResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code OpenConnectionResponse}      *      *<pre>      * Response to OpenConnectionRequest {      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:OpenConnectionResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_OpenConnectionResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_OpenConnectionResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.OpenConnectionResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_OpenConnectionResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:OpenConnectionResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:OpenConnectionResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OpenConnectionResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|OpenConnectionResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|OpenConnectionResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|OpenConnectionResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OpenConnectionResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OpenConnectionResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|CloseConnectionResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:CloseConnectionResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code CloseConnectionResponse}    *    *<pre>    * Response to CloseConnectionRequest {    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|CloseConnectionResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:CloseConnectionResponse)
name|CloseConnectionResponseOrBuilder
block|{
comment|// Use CloseConnectionResponse.newBuilder() to construct.
specifier|private
name|CloseConnectionResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CloseConnectionResponse
parameter_list|()
block|{
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|CloseConnectionResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseConnectionResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseConnectionResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code CloseConnectionResponse}      *      *<pre>      * Response to CloseConnectionRequest {      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:CloseConnectionResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseConnectionResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseConnectionResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.CloseConnectionResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_CloseConnectionResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:CloseConnectionResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:CloseConnectionResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CloseConnectionResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|CloseConnectionResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|CloseConnectionResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|CloseConnectionResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CloseConnectionResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CloseConnectionResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ConnectionSyncResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:ConnectionSyncResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .ConnectionProperties conn_props = 1;</code>      */
name|boolean
name|hasConnProps
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ConnectionProperties conn_props = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|getConnProps
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ConnectionProperties conn_props = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionPropertiesOrBuilder
name|getConnPropsOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ConnectionSyncResponse}    *    *<pre>    * Response to ConnectionSyncRequest    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|ConnectionSyncResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:ConnectionSyncResponse)
name|ConnectionSyncResponseOrBuilder
block|{
comment|// Use ConnectionSyncResponse.newBuilder() to construct.
specifier|private
name|ConnectionSyncResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ConnectionSyncResponse
parameter_list|()
block|{
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|ConnectionSyncResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|connProps_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|connProps_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|connProps_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|connProps_
argument_list|)
expr_stmt|;
name|connProps_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ConnectionSyncResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ConnectionSyncResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CONN_PROPS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|connProps_
decl_stmt|;
comment|/**      *<code>optional .ConnectionProperties conn_props = 1;</code>      */
specifier|public
name|boolean
name|hasConnProps
parameter_list|()
block|{
return|return
name|connProps_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .ConnectionProperties conn_props = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|getConnProps
parameter_list|()
block|{
return|return
name|connProps_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|connProps_
return|;
block|}
comment|/**      *<code>optional .ConnectionProperties conn_props = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionPropertiesOrBuilder
name|getConnPropsOrBuilder
parameter_list|()
block|{
return|return
name|getConnProps
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|connProps_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getConnProps
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|connProps_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getConnProps
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ConnectionSyncResponse}      *      *<pre>      * Response to ConnectionSyncRequest      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:ConnectionSyncResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ConnectionSyncResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ConnectionSyncResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.ConnectionSyncResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
name|connProps_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|connProps_
operator|=
literal|null
expr_stmt|;
name|connPropsBuilder_
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ConnectionSyncResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|connProps_
operator|=
name|connProps_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|connProps_
operator|=
name|connPropsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasConnProps
argument_list|()
condition|)
block|{
name|mergeConnProps
argument_list|(
name|other
operator|.
name|getConnProps
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|connProps_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionPropertiesOrBuilder
argument_list|>
name|connPropsBuilder_
decl_stmt|;
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|boolean
name|hasConnProps
parameter_list|()
block|{
return|return
name|connPropsBuilder_
operator|!=
literal|null
operator|||
name|connProps_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|getConnProps
parameter_list|()
block|{
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|connProps_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|connProps_
return|;
block|}
else|else
block|{
return|return
name|connPropsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|Builder
name|setConnProps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|value
parameter_list|)
block|{
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|connProps_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|connPropsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|Builder
name|setConnProps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
name|connProps_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|connPropsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|Builder
name|mergeConnProps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
name|value
parameter_list|)
block|{
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|connProps_
operator|!=
literal|null
condition|)
block|{
name|connProps_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|newBuilder
argument_list|(
name|connProps_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|connProps_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|connPropsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|Builder
name|clearConnProps
parameter_list|()
block|{
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
name|connProps_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|connProps_
operator|=
literal|null
expr_stmt|;
name|connPropsBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|Builder
name|getConnPropsBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getConnPropsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionPropertiesOrBuilder
name|getConnPropsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|connPropsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|connPropsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|connProps_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|connProps_
return|;
block|}
block|}
comment|/**        *<code>optional .ConnectionProperties conn_props = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionPropertiesOrBuilder
argument_list|>
name|getConnPropsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|connPropsBuilder_
operator|==
literal|null
condition|)
block|{
name|connPropsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionProperties
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|ConnectionPropertiesOrBuilder
argument_list|>
argument_list|(
name|getConnProps
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|connProps_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|connPropsBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ConnectionSyncResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:ConnectionSyncResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ConnectionSyncResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ConnectionSyncResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|ConnectionSyncResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|ConnectionSyncResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ConnectionSyncResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ConnectionSyncResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|DatabasePropertyElementOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:DatabasePropertyElement)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .DatabaseProperty key = 1;</code>      */
name|boolean
name|hasKey
parameter_list|()
function_decl|;
comment|/**      *<code>optional .DatabaseProperty key = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|getKey
parameter_list|()
function_decl|;
comment|/**      *<code>optional .DatabaseProperty key = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabasePropertyOrBuilder
name|getKeyOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .TypedValue value = 2;</code>      */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional .TypedValue value = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|getValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional .TypedValue value = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValueOrBuilder
name|getValueOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code DatabasePropertyElement}    */
specifier|public
specifier|static
specifier|final
class|class
name|DatabasePropertyElement
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:DatabasePropertyElement)
name|DatabasePropertyElementOrBuilder
block|{
comment|// Use DatabasePropertyElement.newBuilder() to construct.
specifier|private
name|DatabasePropertyElement
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DatabasePropertyElement
parameter_list|()
block|{
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|DatabasePropertyElement
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|key_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|key_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|key_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|key_
argument_list|)
expr_stmt|;
name|key_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|value_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|value_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|value_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|value_
argument_list|)
expr_stmt|;
name|value_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyElement_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyElement_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|KEY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|key_
decl_stmt|;
comment|/**      *<code>optional .DatabaseProperty key = 1;</code>      */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
name|key_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .DatabaseProperty key = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|getKey
parameter_list|()
block|{
return|return
name|key_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|key_
return|;
block|}
comment|/**      *<code>optional .DatabaseProperty key = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabasePropertyOrBuilder
name|getKeyOrBuilder
parameter_list|()
block|{
return|return
name|getKey
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|value_
decl_stmt|;
comment|/**      *<code>optional .TypedValue value = 2;</code>      */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
name|value_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .TypedValue value = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|getValue
parameter_list|()
block|{
return|return
name|value_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|value_
return|;
block|}
comment|/**      *<code>optional .TypedValue value = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValueOrBuilder
name|getValueOrBuilder
parameter_list|()
block|{
return|return
name|getValue
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|key_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|key_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code DatabasePropertyElement}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:DatabasePropertyElement)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyElement_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyElement_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.DatabasePropertyElement.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
name|key_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|key_
operator|=
literal|null
expr_stmt|;
name|keyBuilder_
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|value_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|value_
operator|=
literal|null
expr_stmt|;
name|valueBuilder_
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyElement_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|key_
operator|=
name|key_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|key_
operator|=
name|keyBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|value_
operator|=
name|valueBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasKey
argument_list|()
condition|)
block|{
name|mergeKey
argument_list|(
name|other
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasValue
argument_list|()
condition|)
block|{
name|mergeValue
argument_list|(
name|other
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|key_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabasePropertyOrBuilder
argument_list|>
name|keyBuilder_
decl_stmt|;
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
name|keyBuilder_
operator|!=
literal|null
operator|||
name|key_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|getKey
parameter_list|()
block|{
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|key_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|key_
return|;
block|}
else|else
block|{
return|return
name|keyBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|value
parameter_list|)
block|{
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|keyBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
name|key_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|keyBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|Builder
name|mergeKey
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
name|value
parameter_list|)
block|{
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|key_
operator|!=
literal|null
condition|)
block|{
name|key_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|newBuilder
argument_list|(
name|key_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|key_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|keyBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|Builder
name|clearKey
parameter_list|()
block|{
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
name|key_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|key_
operator|=
literal|null
expr_stmt|;
name|keyBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|Builder
name|getKeyBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getKeyFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabasePropertyOrBuilder
name|getKeyOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|keyBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|keyBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|key_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|key_
return|;
block|}
block|}
comment|/**        *<code>optional .DatabaseProperty key = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabasePropertyOrBuilder
argument_list|>
name|getKeyFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|keyBuilder_
operator|==
literal|null
condition|)
block|{
name|keyBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabaseProperty
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|DatabasePropertyOrBuilder
argument_list|>
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|key_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|keyBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|value_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValueOrBuilder
argument_list|>
name|valueBuilder_
decl_stmt|;
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
name|valueBuilder_
operator|!=
literal|null
operator|||
name|value_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|getValue
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|value_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|value_
return|;
block|}
else|else
block|{
return|return
name|valueBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|value
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|value_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|Builder
name|mergeValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
name|value
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value_
operator|!=
literal|null
condition|)
block|{
name|value_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|newBuilder
argument_list|(
name|value_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|value_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|value_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|value_
operator|=
literal|null
expr_stmt|;
name|valueBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|Builder
name|getValueBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getValueFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValueOrBuilder
name|getValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|valueBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|value_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|value_
return|;
block|}
block|}
comment|/**        *<code>optional .TypedValue value = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValueOrBuilder
argument_list|>
name|getValueFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|valueBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValue
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|TypedValueOrBuilder
argument_list|>
argument_list|(
name|getValue
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|value_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|valueBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:DatabasePropertyElement)
block|}
comment|// @@protoc_insertion_point(class_scope:DatabasePropertyElement)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DatabasePropertyElement
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|DatabasePropertyElement
argument_list|>
argument_list|()
block|{
specifier|public
name|DatabasePropertyElement
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|DatabasePropertyElement
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DatabasePropertyElement
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DatabasePropertyElement
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|DatabasePropertyResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:DatabasePropertyResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
name|getPropsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|getProps
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
name|int
name|getPropsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
argument_list|>
name|getPropsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
name|getPropsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code DatabasePropertyResponse}    *    *<pre>    * Response for Meta#getDatabaseProperties()    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|DatabasePropertyResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:DatabasePropertyResponse)
name|DatabasePropertyResponseOrBuilder
block|{
comment|// Use DatabasePropertyResponse.newBuilder() to construct.
specifier|private
name|DatabasePropertyResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DatabasePropertyResponse
parameter_list|()
block|{
name|props_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|DatabasePropertyResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|props_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|props_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|props_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|props_
argument_list|)
expr_stmt|;
block|}
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PROPS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
name|props_
decl_stmt|;
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
name|getPropsList
parameter_list|()
block|{
return|return
name|props_
return|;
block|}
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
argument_list|>
name|getPropsOrBuilderList
parameter_list|()
block|{
return|return
name|props_
return|;
block|}
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
specifier|public
name|int
name|getPropsCount
parameter_list|()
block|{
return|return
name|props_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|getProps
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|props_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .DatabasePropertyElement props = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
name|getPropsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|props_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|props_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|props_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|props_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|props_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code DatabasePropertyResponse}      *      *<pre>      * Response for Meta#getDatabaseProperties()      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:DatabasePropertyResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.DatabasePropertyResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getPropsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|props_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_DatabasePropertyResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|props_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|props_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|props_
operator|=
name|props_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|props_
operator|=
name|propsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|props_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|props_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|props_
operator|=
name|other
operator|.
name|props_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|props_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|props_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|propsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|propsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|propsBuilder_
operator|=
literal|null
expr_stmt|;
name|props_
operator|=
name|other
operator|.
name|props_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|propsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getPropsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|props_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
name|props_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensurePropsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|props_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
argument_list|(
name|props_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
argument_list|>
name|propsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
name|getPropsList
parameter_list|()
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|props_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|propsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|int
name|getPropsCount
parameter_list|()
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|props_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|propsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|getProps
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|props_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|propsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|setProps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|value
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|setProps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|addProps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|value
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|addProps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
name|value
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|addProps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|addProps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|addAllProps
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|props_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|clearProps
parameter_list|()
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|props_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|Builder
name|removeProps
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePropsIsMutable
argument_list|()
expr_stmt|;
name|props_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|propsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
name|getPropsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getPropsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
name|getPropsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|props_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|propsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
argument_list|>
name|getPropsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|propsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|propsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|props_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
name|addPropsBuilder
parameter_list|()
block|{
return|return
name|getPropsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
name|addPropsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getPropsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .DatabasePropertyElement props = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
argument_list|>
name|getPropsBuilderList
parameter_list|()
block|{
return|return
name|getPropsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
argument_list|>
name|getPropsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|propsBuilder_
operator|==
literal|null
condition|)
block|{
name|propsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElement
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyElementOrBuilder
argument_list|>
argument_list|(
name|props_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|props_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|propsBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:DatabasePropertyResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:DatabasePropertyResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DatabasePropertyResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|DatabasePropertyResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|DatabasePropertyResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|DatabasePropertyResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DatabasePropertyResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DatabasePropertyResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ErrorResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:ErrorResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getExceptionsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
name|int
name|getExceptionsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getExceptions
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExceptionsBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional string error_message = 2;</code>      *      *<pre>      * human readable description      *</pre>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getErrorMessage
parameter_list|()
function_decl|;
comment|/**      *<code>optional string error_message = 2;</code>      *      *<pre>      * human readable description      *</pre>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getErrorMessageBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Severity severity = 3;</code>      */
name|int
name|getSeverityValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Severity severity = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
name|getSeverity
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 error_code = 4;</code>      *      *<pre>      * numeric identifier for error      *</pre>      */
name|int
name|getErrorCode
parameter_list|()
function_decl|;
comment|/**      *<code>optional string sql_state = 5;</code>      *      *<pre>      * five-character standard-defined value      *</pre>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getSqlState
parameter_list|()
function_decl|;
comment|/**      *<code>optional string sql_state = 5;</code>      *      *<pre>      * five-character standard-defined value      *</pre>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSqlStateBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 6;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ErrorResponse}    *    *<pre>    * Send contextual information about some error over the wire from the server.    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|ErrorResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:ErrorResponse)
name|ErrorResponseOrBuilder
block|{
comment|// Use ErrorResponse.newBuilder() to construct.
specifier|private
name|ErrorResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ErrorResponse
parameter_list|()
block|{
name|exceptions_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|errorMessage_
operator|=
literal|""
expr_stmt|;
name|severity_
operator|=
literal|0
expr_stmt|;
name|errorCode_
operator|=
literal|0
expr_stmt|;
name|sqlState_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|ErrorResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|exceptions_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|exceptions_
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
name|errorMessage_
operator|=
name|s
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|severity_
operator|=
name|rawValue
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|errorCode_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
name|sqlState_
operator|=
name|s
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|exceptions_
operator|=
name|exceptions_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
block|}
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ErrorResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ErrorResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|EXCEPTIONS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|exceptions_
decl_stmt|;
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getExceptionsList
parameter_list|()
block|{
return|return
name|exceptions_
return|;
block|}
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
specifier|public
name|int
name|getExceptionsCount
parameter_list|()
block|{
return|return
name|exceptions_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExceptions
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|exceptions_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated string exceptions = 1;</code>      *      *<pre>      * exception stacktraces, many for linked exceptions.      *</pre>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExceptionsBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|exceptions_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ERROR_MESSAGE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|errorMessage_
decl_stmt|;
comment|/**      *<code>optional string error_message = 2;</code>      *      *<pre>      * human readable description      *</pre>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getErrorMessage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|errorMessage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|errorMessage_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string error_message = 2;</code>      *      *<pre>      * human readable description      *</pre>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getErrorMessageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|errorMessage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|errorMessage_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SEVERITY_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|severity_
decl_stmt|;
comment|/**      *<code>optional .Severity severity = 3;</code>      */
specifier|public
name|int
name|getSeverityValue
parameter_list|()
block|{
return|return
name|severity_
return|;
block|}
comment|/**      *<code>optional .Severity severity = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
name|getSeverity
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
operator|.
name|valueOf
argument_list|(
name|severity_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
operator|.
name|UNRECOGNIZED
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ERROR_CODE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|int
name|errorCode_
decl_stmt|;
comment|/**      *<code>optional uint32 error_code = 4;</code>      *      *<pre>      * numeric identifier for error      *</pre>      */
specifier|public
name|int
name|getErrorCode
parameter_list|()
block|{
return|return
name|errorCode_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SQL_STATE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|sqlState_
decl_stmt|;
comment|/**      *<code>optional string sql_state = 5;</code>      *      *<pre>      * five-character standard-defined value      *</pre>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSqlState
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sqlState_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|sqlState_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string sql_state = 5;</code>      *      *<pre>      * five-character standard-defined value      *</pre>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSqlStateBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sqlState_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|sqlState_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 6;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|exceptions_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|exceptions_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|getErrorMessageBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|errorMessage_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|severity_
operator|!=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
operator|.
name|UNKNOWN_SEVERITY
operator|.
name|getNumber
argument_list|()
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|3
argument_list|,
name|severity_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|errorCode_
operator|!=
literal|0
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|4
argument_list|,
name|errorCode_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|getSqlStateBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|5
argument_list|,
name|sqlState_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|exceptions_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|computeStringSizeNoTag
argument_list|(
name|exceptions_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getExceptionsList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|getErrorMessageBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|errorMessage_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|severity_
operator|!=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
operator|.
name|UNKNOWN_SEVERITY
operator|.
name|getNumber
argument_list|()
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|3
argument_list|,
name|severity_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|errorCode_
operator|!=
literal|0
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|4
argument_list|,
name|errorCode_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|getSqlStateBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|computeStringSize
argument_list|(
literal|5
argument_list|,
name|sqlState_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ErrorResponse}      *      *<pre>      * Send contextual information about some error over the wire from the server.      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:ErrorResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ErrorResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ErrorResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.ErrorResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|exceptions_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|errorMessage_
operator|=
literal|""
expr_stmt|;
name|severity_
operator|=
literal|0
expr_stmt|;
name|errorCode_
operator|=
literal|0
expr_stmt|;
name|sqlState_
operator|=
literal|""
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_ErrorResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|exceptions_
operator|=
name|exceptions_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|exceptions_
operator|=
name|exceptions_
expr_stmt|;
name|result
operator|.
name|errorMessage_
operator|=
name|errorMessage_
expr_stmt|;
name|result
operator|.
name|severity_
operator|=
name|severity_
expr_stmt|;
name|result
operator|.
name|errorCode_
operator|=
name|errorCode_
expr_stmt|;
name|result
operator|.
name|sqlState_
operator|=
name|sqlState_
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|exceptions_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|exceptions_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|exceptions_
operator|=
name|other
operator|.
name|exceptions_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureExceptionsIsMutable
argument_list|()
expr_stmt|;
name|exceptions_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|exceptions_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|getErrorMessage
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|errorMessage_
operator|=
name|other
operator|.
name|errorMessage_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|severity_
operator|!=
literal|0
condition|)
block|{
name|setSeverityValue
argument_list|(
name|other
operator|.
name|getSeverityValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getErrorCode
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|setErrorCode
argument_list|(
name|other
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|getSqlState
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sqlState_
operator|=
name|other
operator|.
name|sqlState_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|exceptions_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureExceptionsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|exceptions_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|exceptions_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getExceptionsList
parameter_list|()
block|{
return|return
name|exceptions_
operator|.
name|getUnmodifiableView
argument_list|()
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|int
name|getExceptionsCount
parameter_list|()
block|{
return|return
name|exceptions_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExceptions
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|exceptions_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExceptionsBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|exceptions_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|Builder
name|setExceptions
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExceptionsIsMutable
argument_list|()
expr_stmt|;
name|exceptions_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|Builder
name|addExceptions
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExceptionsIsMutable
argument_list|()
expr_stmt|;
name|exceptions_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|Builder
name|addAllExceptions
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureExceptionsIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|exceptions_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|Builder
name|clearExceptions
parameter_list|()
block|{
name|exceptions_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string exceptions = 1;</code>        *        *<pre>        * exception stacktraces, many for linked exceptions.        *</pre>        */
specifier|public
name|Builder
name|addExceptionsBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|ensureExceptionsIsMutable
argument_list|()
expr_stmt|;
name|exceptions_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|errorMessage_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string error_message = 2;</code>        *        *<pre>        * human readable description        *</pre>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getErrorMessage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|errorMessage_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|errorMessage_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string error_message = 2;</code>        *        *<pre>        * human readable description        *</pre>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getErrorMessageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|errorMessage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|errorMessage_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string error_message = 2;</code>        *        *<pre>        * human readable description        *</pre>        */
specifier|public
name|Builder
name|setErrorMessage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|errorMessage_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string error_message = 2;</code>        *        *<pre>        * human readable description        *</pre>        */
specifier|public
name|Builder
name|clearErrorMessage
parameter_list|()
block|{
name|errorMessage_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getErrorMessage
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string error_message = 2;</code>        *        *<pre>        * human readable description        *</pre>        */
specifier|public
name|Builder
name|setErrorMessageBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|errorMessage_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|severity_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>optional .Severity severity = 3;</code>        */
specifier|public
name|int
name|getSeverityValue
parameter_list|()
block|{
return|return
name|severity_
return|;
block|}
comment|/**        *<code>optional .Severity severity = 3;</code>        */
specifier|public
name|Builder
name|setSeverityValue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|severity_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Severity severity = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
name|getSeverity
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
operator|.
name|valueOf
argument_list|(
name|severity_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
operator|.
name|UNRECOGNIZED
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .Severity severity = 3;</code>        */
specifier|public
name|Builder
name|setSeverity
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|Severity
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|severity_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Severity severity = 3;</code>        */
specifier|public
name|Builder
name|clearSeverity
parameter_list|()
block|{
name|severity_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|errorCode_
decl_stmt|;
comment|/**        *<code>optional uint32 error_code = 4;</code>        *        *<pre>        * numeric identifier for error        *</pre>        */
specifier|public
name|int
name|getErrorCode
parameter_list|()
block|{
return|return
name|errorCode_
return|;
block|}
comment|/**        *<code>optional uint32 error_code = 4;</code>        *        *<pre>        * numeric identifier for error        *</pre>        */
specifier|public
name|Builder
name|setErrorCode
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|errorCode_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 error_code = 4;</code>        *        *<pre>        * numeric identifier for error        *</pre>        */
specifier|public
name|Builder
name|clearErrorCode
parameter_list|()
block|{
name|errorCode_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|sqlState_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string sql_state = 5;</code>        *        *<pre>        * five-character standard-defined value        *</pre>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSqlState
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sqlState_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|sqlState_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string sql_state = 5;</code>        *        *<pre>        * five-character standard-defined value        *</pre>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSqlStateBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sqlState_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|sqlState_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string sql_state = 5;</code>        *        *<pre>        * five-character standard-defined value        *</pre>        */
specifier|public
name|Builder
name|setSqlState
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|sqlState_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string sql_state = 5;</code>        *        *<pre>        * five-character standard-defined value        *</pre>        */
specifier|public
name|Builder
name|clearSqlState
parameter_list|()
block|{
name|sqlState_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSqlState
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string sql_state = 5;</code>        *        *<pre>        * five-character standard-defined value        *</pre>        */
specifier|public
name|Builder
name|setSqlStateBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|sqlState_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 6;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ErrorResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:ErrorResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ErrorResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ErrorResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|ErrorResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|ErrorResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ErrorResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ErrorResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|SyncResultsResponseOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:SyncResultsResponse)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional bool missing_statement = 1;</code>      *      *<pre>      * Server doesn't have the statement with the ID from the request      *</pre>      */
name|boolean
name|getMissingStatement
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool more_results = 2;</code>      *      *<pre>      * Should the client fetch() to get more results      *</pre>      */
name|boolean
name|getMoreResults
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|boolean
name|hasMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
function_decl|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code SyncResultsResponse}    */
specifier|public
specifier|static
specifier|final
class|class
name|SyncResultsResponse
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:SyncResultsResponse)
name|SyncResultsResponseOrBuilder
block|{
comment|// Use SyncResultsResponse.newBuilder() to construct.
specifier|private
name|SyncResultsResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SyncResultsResponse
parameter_list|()
block|{
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|moreResults_
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|SyncResultsResponse
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|missingStatement_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|moreResults_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|=
name|metadata_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|metadata_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|metadata_
argument_list|)
expr_stmt|;
name|metadata_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_SyncResultsResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_SyncResultsResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MISSING_STATEMENT_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|boolean
name|missingStatement_
decl_stmt|;
comment|/**      *<code>optional bool missing_statement = 1;</code>      *      *<pre>      * Server doesn't have the statement with the ID from the request      *</pre>      */
specifier|public
name|boolean
name|getMissingStatement
parameter_list|()
block|{
return|return
name|missingStatement_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MORE_RESULTS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|moreResults_
decl_stmt|;
comment|/**      *<code>optional bool more_results = 2;</code>      *      *<pre>      * Should the client fetch() to get more results      *</pre>      */
specifier|public
name|boolean
name|getMoreResults
parameter_list|()
block|{
return|return
name|moreResults_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METADATA_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
decl_stmt|;
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
comment|/**      *<code>optional .RpcMetadata metadata = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
return|return
name|getMetadata
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|missingStatement_
operator|!=
literal|false
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|1
argument_list|,
name|missingStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|moreResults_
operator|!=
literal|false
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|moreResults_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|missingStatement_
operator|!=
literal|false
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|1
argument_list|,
name|missingStatement_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|moreResults_
operator|!=
literal|false
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|moreResults_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code SyncResultsResponse}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:SyncResultsResponse)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_SyncResultsResponse_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_SyncResultsResponse_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.SyncResultsResponse.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|moreResults_
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_SyncResultsResponse_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|result
operator|.
name|missingStatement_
operator|=
name|missingStatement_
expr_stmt|;
name|result
operator|.
name|moreResults_
operator|=
name|moreResults_
expr_stmt|;
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadata_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|metadata_
operator|=
name|metadataBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|getMissingStatement
argument_list|()
operator|!=
literal|false
condition|)
block|{
name|setMissingStatement
argument_list|(
name|other
operator|.
name|getMissingStatement
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|getMoreResults
argument_list|()
operator|!=
literal|false
condition|)
block|{
name|setMoreResults
argument_list|(
name|other
operator|.
name|getMoreResults
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetadata
argument_list|()
condition|)
block|{
name|mergeMetadata
argument_list|(
name|other
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|missingStatement_
decl_stmt|;
comment|/**        *<code>optional bool missing_statement = 1;</code>        *        *<pre>        * Server doesn't have the statement with the ID from the request        *</pre>        */
specifier|public
name|boolean
name|getMissingStatement
parameter_list|()
block|{
return|return
name|missingStatement_
return|;
block|}
comment|/**        *<code>optional bool missing_statement = 1;</code>        *        *<pre>        * Server doesn't have the statement with the ID from the request        *</pre>        */
specifier|public
name|Builder
name|setMissingStatement
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|missingStatement_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool missing_statement = 1;</code>        *        *<pre>        * Server doesn't have the statement with the ID from the request        *</pre>        */
specifier|public
name|Builder
name|clearMissingStatement
parameter_list|()
block|{
name|missingStatement_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|moreResults_
decl_stmt|;
comment|/**        *<code>optional bool more_results = 2;</code>        *        *<pre>        * Should the client fetch() to get more results        *</pre>        */
specifier|public
name|boolean
name|getMoreResults
parameter_list|()
block|{
return|return
name|moreResults_
return|;
block|}
comment|/**        *<code>optional bool more_results = 2;</code>        *        *<pre>        * Should the client fetch() to get more results        *</pre>        */
specifier|public
name|Builder
name|setMoreResults
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|moreResults_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool more_results = 2;</code>        *        *<pre>        * Should the client fetch() to get more results        *</pre>        */
specifier|public
name|Builder
name|clearMoreResults
parameter_list|()
block|{
name|moreResults_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|metadata_
init|=
literal|null
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|metadataBuilder_
decl_stmt|;
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|boolean
name|hasMetadata
parameter_list|()
block|{
return|return
name|metadataBuilder_
operator|!=
literal|null
operator|||
name|metadata_
operator|!=
literal|null
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
else|else
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|metadata_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|setMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|mergeMetadata
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|value
parameter_list|)
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|metadata_
operator|!=
literal|null
condition|)
block|{
name|metadata_
operator|=
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|newBuilder
argument_list|(
name|metadata_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadataBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|Builder
name|clearMetadata
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|metadata_
operator|=
literal|null
expr_stmt|;
name|metadataBuilder_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
name|getMetadataBuilder
parameter_list|()
block|{
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMetadataFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
name|getMetadataOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|metadataBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|metadata_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|metadata_
return|;
block|}
block|}
comment|/**        *<code>optional .RpcMetadata metadata = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
name|getMetadataFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|metadataBuilder_
operator|==
literal|null
condition|)
block|{
name|metadataBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
argument_list|>
argument_list|(
name|getMetadata
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|metadata_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|metadataBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:SyncResultsResponse)
block|}
comment|// @@protoc_insertion_point(class_scope:SyncResultsResponse)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SyncResultsResponse
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|SyncResultsResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|SyncResultsResponse
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|SyncResultsResponse
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SyncResultsResponse
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SyncResultsResponse
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|SyncResultsResponse
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|RpcMetadataOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:RpcMetadata)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string server_address = 1;</code>      *      *<pre>      * The host:port of the server      *</pre>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getServerAddress
parameter_list|()
function_decl|;
comment|/**      *<code>optional string server_address = 1;</code>      *      *<pre>      * The host:port of the server      *</pre>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getServerAddressBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code RpcMetadata}    *    *<pre>    * Generic metadata for the server to return with each response.    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|RpcMetadata
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
comment|// @@protoc_insertion_point(message_implements:RpcMetadata)
name|RpcMetadataOrBuilder
block|{
comment|// Use RpcMetadata.newBuilder() to construct.
specifier|private
name|RpcMetadata
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|RpcMetadata
parameter_list|()
block|{
name|serverAddress_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|RpcMetadata
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
name|serverAddress_
operator|=
name|s
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_RpcMetadata_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_RpcMetadata_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SERVER_ADDRESS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|serverAddress_
decl_stmt|;
comment|/**      *<code>optional string server_address = 1;</code>      *      *<pre>      * The host:port of the server      *</pre>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getServerAddress
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serverAddress_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|serverAddress_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string server_address = 1;</code>      *      *<pre>      * The host:port of the server      *</pre>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getServerAddressBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serverAddress_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|serverAddress_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|!
name|getServerAddressBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|serverAddress_
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|!
name|getServerAddressBytes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|serverAddress_
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code RpcMetadata}      *      *<pre>      * Generic metadata for the server to return with each response.      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:RpcMetadata)
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadataOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_RpcMetadata_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_RpcMetadata_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.calcite.avatica.proto.Responses.RpcMetadata.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|serverAddress_
operator|=
literal|""
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|internal_static_RpcMetadata_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|result
operator|.
name|serverAddress_
operator|=
name|serverAddress_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|getServerAddress
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|serverAddress_
operator|=
name|other
operator|.
name|serverAddress_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|serverAddress_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string server_address = 1;</code>        *        *<pre>        * The host:port of the server        *</pre>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getServerAddress
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serverAddress_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|serverAddress_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string server_address = 1;</code>        *        *<pre>        * The host:port of the server        *</pre>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getServerAddressBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serverAddress_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|serverAddress_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string server_address = 1;</code>        *        *<pre>        * The host:port of the server        *</pre>        */
specifier|public
name|Builder
name|setServerAddress
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|serverAddress_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string server_address = 1;</code>        *        *<pre>        * The host:port of the server        *</pre>        */
specifier|public
name|Builder
name|clearServerAddress
parameter_list|()
block|{
name|serverAddress_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getServerAddress
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string server_address = 1;</code>        *        *<pre>        * The host:port of the server        *</pre>        */
specifier|public
name|Builder
name|setServerAddressBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|serverAddress_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:RpcMetadata)
block|}
comment|// @@protoc_insertion_point(class_scope:RpcMetadata)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RpcMetadata
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RpcMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|RpcMetadata
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
try|try
block|{
return|return
operator|new
name|RpcMetadata
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
condition|)
block|{
throw|throw
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
operator|)
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RpcMetadata
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RpcMetadata
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|RpcMetadata
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ResultSetResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ResultSetResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ExecuteResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ExecuteResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_PrepareResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_PrepareResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_FetchResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_FetchResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_CreateStatementResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_CreateStatementResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_CloseStatementResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_CloseStatementResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_OpenConnectionResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_OpenConnectionResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_CloseConnectionResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_CloseConnectionResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ConnectionSyncResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ConnectionSyncResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_DatabasePropertyElement_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_DatabasePropertyElement_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_DatabasePropertyResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_DatabasePropertyResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ErrorResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ErrorResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_SyncResultsResponse_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_SyncResultsResponse_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_RpcMetadata_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_RpcMetadata_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n\017responses.proto\032\014common.proto\"\311\001\n\021Resu"
operator|+
literal|"ltSetResponse\022\025\n\rconnection_id\030\001 \001(\t\022\024\n\014"
operator|+
literal|"statement_id\030\002 \001(\r\022\025\n\rown_statement\030\003 \001("
operator|+
literal|"\010\022\035\n\tsignature\030\004 \001(\0132\n.Signature\022\033\n\013firs"
operator|+
literal|"t_frame\030\005 \001(\0132\006.Frame\022\024\n\014update_count\030\006 "
operator|+
literal|"\001(\004\022\036\n\010metadata\030\007 \001(\0132\014.RpcMetadata\"q\n\017E"
operator|+
literal|"xecuteResponse\022#\n\007results\030\001 \003(\0132\022.Result"
operator|+
literal|"SetResponse\022\031\n\021missing_statement\030\002 \001(\010\022\036"
operator|+
literal|"\n\010metadata\030\003 \001(\0132\014.RpcMetadata\"V\n\017Prepar"
operator|+
literal|"eResponse\022#\n\tstatement\030\001 \001(\0132\020.Statement"
block|,
literal|"Handle\022\036\n\010metadata\030\002 \001(\0132\014.RpcMetadata\"z"
operator|+
literal|"\n\rFetchResponse\022\025\n\005frame\030\001 \001(\0132\006.Frame\022\031"
operator|+
literal|"\n\021missing_statement\030\002 \001(\010\022\027\n\017missing_res"
operator|+
literal|"ults\030\003 \001(\010\022\036\n\010metadata\030\004 \001(\0132\014.RpcMetada"
operator|+
literal|"ta\"f\n\027CreateStatementResponse\022\025\n\rconnect"
operator|+
literal|"ion_id\030\001 \001(\t\022\024\n\014statement_id\030\002 \001(\r\022\036\n\010me"
operator|+
literal|"tadata\030\003 \001(\0132\014.RpcMetadata\"8\n\026CloseState"
operator|+
literal|"mentResponse\022\036\n\010metadata\030\001 \001(\0132\014.RpcMeta"
operator|+
literal|"data\"8\n\026OpenConnectionResponse\022\036\n\010metada"
operator|+
literal|"ta\030\001 \001(\0132\014.RpcMetadata\"9\n\027CloseConnectio"
block|,
literal|"nResponse\022\036\n\010metadata\030\001 \001(\0132\014.RpcMetadat"
operator|+
literal|"a\"c\n\026ConnectionSyncResponse\022)\n\nconn_prop"
operator|+
literal|"s\030\001 \001(\0132\025.ConnectionProperties\022\036\n\010metada"
operator|+
literal|"ta\030\002 \001(\0132\014.RpcMetadata\"u\n\027DatabaseProper"
operator|+
literal|"tyElement\022\036\n\003key\030\001 \001(\0132\021.DatabasePropert"
operator|+
literal|"y\022\032\n\005value\030\002 \001(\0132\013.TypedValue\022\036\n\010metadat"
operator|+
literal|"a\030\003 \001(\0132\014.RpcMetadata\"c\n\030DatabasePropert"
operator|+
literal|"yResponse\022\'\n\005props\030\001 \003(\0132\030.DatabasePrope"
operator|+
literal|"rtyElement\022\036\n\010metadata\030\002 \001(\0132\014.RpcMetada"
operator|+
literal|"ta\"\236\001\n\rErrorResponse\022\022\n\nexceptions\030\001 \003(\t"
block|,
literal|"\022\025\n\rerror_message\030\002 \001(\t\022\033\n\010severity\030\003 \001("
operator|+
literal|"\0162\t.Severity\022\022\n\nerror_code\030\004 \001(\r\022\021\n\tsql_"
operator|+
literal|"state\030\005 \001(\t\022\036\n\010metadata\030\006 \001(\0132\014.RpcMetad"
operator|+
literal|"ata\"f\n\023SyncResultsResponse\022\031\n\021missing_st"
operator|+
literal|"atement\030\001 \001(\010\022\024\n\014more_results\030\002 \001(\010\022\036\n\010m"
operator|+
literal|"etadata\030\003 \001(\0132\014.RpcMetadata\"%\n\013RpcMetada"
operator|+
literal|"ta\022\026\n\016server_address\030\001 \001(\tB\"\n org.apache"
operator|+
literal|".calcite.avatica.protob\006proto3"
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
name|assigner
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
argument_list|()
block|{
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|assignDescriptors
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|root
parameter_list|)
block|{
name|descriptor
operator|=
name|root
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|getDescriptor
argument_list|()
block|,         }
argument_list|,
name|assigner
argument_list|)
expr_stmt|;
name|internal_static_ResultSetResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_ResultSetResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ResultSetResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ConnectionId"
block|,
literal|"StatementId"
block|,
literal|"OwnStatement"
block|,
literal|"Signature"
block|,
literal|"FirstFrame"
block|,
literal|"UpdateCount"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ExecuteResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_ExecuteResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ExecuteResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Results"
block|,
literal|"MissingStatement"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_PrepareResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_PrepareResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_PrepareResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Statement"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_FetchResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|internal_static_FetchResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_FetchResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Frame"
block|,
literal|"MissingStatement"
block|,
literal|"MissingResults"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_CreateStatementResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|internal_static_CreateStatementResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_CreateStatementResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ConnectionId"
block|,
literal|"StatementId"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_CloseStatementResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|internal_static_CloseStatementResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_CloseStatementResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_OpenConnectionResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|internal_static_OpenConnectionResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_OpenConnectionResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_CloseConnectionResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|internal_static_CloseConnectionResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_CloseConnectionResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ConnectionSyncResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|internal_static_ConnectionSyncResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ConnectionSyncResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ConnProps"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_DatabasePropertyElement_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|internal_static_DatabasePropertyElement_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_DatabasePropertyElement_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Key"
block|,
literal|"Value"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_DatabasePropertyResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|internal_static_DatabasePropertyResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_DatabasePropertyResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Props"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ErrorResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|internal_static_ErrorResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ErrorResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Exceptions"
block|,
literal|"ErrorMessage"
block|,
literal|"Severity"
block|,
literal|"ErrorCode"
block|,
literal|"SqlState"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_SyncResultsResponse_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|internal_static_SyncResultsResponse_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_SyncResultsResponse_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"MissingStatement"
block|,
literal|"MoreResults"
block|,
literal|"Metadata"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_RpcMetadata_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|13
argument_list|)
expr_stmt|;
name|internal_static_RpcMetadata_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_RpcMetadata_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ServerAddress"
block|, }
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|getDescriptor
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

