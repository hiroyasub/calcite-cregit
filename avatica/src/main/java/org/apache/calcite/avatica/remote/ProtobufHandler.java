begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Timer
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Dispatches serialized protocol buffer messages to the provided {@link Service}  * by converting them to the POJO Request. Returns back the serialized protocol  * buffer response.  */
end_comment

begin_class
specifier|public
class|class
name|ProtobufHandler
extends|extends
name|AbstractHandler
argument_list|<
name|byte
index|[]
argument_list|>
block|{
specifier|private
specifier|final
name|ProtobufTranslation
name|translation
decl_stmt|;
specifier|private
specifier|final
name|MetricsSystem
name|metrics
decl_stmt|;
specifier|private
specifier|final
name|Timer
name|serializationTimer
decl_stmt|;
specifier|public
name|ProtobufHandler
parameter_list|(
name|Service
name|service
parameter_list|,
name|ProtobufTranslation
name|translation
parameter_list|,
name|MetricsSystem
name|metrics
parameter_list|)
block|{
name|super
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|this
operator|.
name|translation
operator|=
name|translation
expr_stmt|;
name|this
operator|.
name|metrics
operator|=
name|metrics
expr_stmt|;
name|this
operator|.
name|serializationTimer
operator|=
name|this
operator|.
name|metrics
operator|.
name|getTimer
argument_list|(
name|MetricsHelper
operator|.
name|concat
argument_list|(
name|ProtobufHandler
operator|.
name|class
argument_list|,
name|HANDLER_SERIALIZATION_METRICS_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerResponse
argument_list|<
name|byte
index|[]
argument_list|>
name|apply
parameter_list|(
name|byte
index|[]
name|requestBytes
parameter_list|)
block|{
return|return
name|super
operator|.
name|apply
argument_list|(
name|requestBytes
argument_list|)
return|;
block|}
annotation|@
name|Override
name|Service
operator|.
name|Request
name|decode
parameter_list|(
name|byte
index|[]
name|serializedRequest
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
specifier|final
name|Context
name|ctx
init|=
name|serializationTimer
operator|.
name|start
argument_list|()
init|)
block|{
return|return
name|translation
operator|.
name|parseRequest
argument_list|(
name|serializedRequest
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
name|byte
index|[]
name|encode
parameter_list|(
name|Response
name|response
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
specifier|final
name|Context
name|ctx
init|=
name|serializationTimer
operator|.
name|start
argument_list|()
init|)
block|{
return|return
name|translation
operator|.
name|serializeResponse
argument_list|(
name|response
argument_list|)
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End ProtobufHandler.java
end_comment

end_unit

