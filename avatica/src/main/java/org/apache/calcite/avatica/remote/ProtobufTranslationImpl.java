begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Common
operator|.
name|WireMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|CatalogsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|CloseConnectionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|CloseStatementRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|ColumnsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|ConnectionSyncRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|CreateStatementRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|DatabasePropertyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|ExecuteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|FetchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|OpenConnectionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|PrepareAndExecuteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|PrepareRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|SchemasRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|TableTypesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|TablesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Requests
operator|.
name|TypeInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseConnectionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CloseStatementResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ConnectionSyncResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|CreateStatementResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|DatabasePropertyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ErrorResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ExecuteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|FetchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|OpenConnectionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|PrepareResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|proto
operator|.
name|Responses
operator|.
name|ResultSetResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|remote
operator|.
name|Service
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link ProtobufTranslationImpl} that translates  * protobuf requests to POJO requests.  */
end_comment

begin_class
specifier|public
class|class
name|ProtobufTranslationImpl
implements|implements
name|ProtobufTranslation
block|{
comment|// Extremely ugly mapping of PB class name into a means to convert it to the POJO
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|RequestTranslator
argument_list|>
name|REQUEST_PARSERS
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ResponseTranslator
argument_list|>
name|RESPONSE_PARSERS
decl_stmt|;
static|static
block|{
name|HashMap
argument_list|<
name|String
argument_list|,
name|RequestTranslator
argument_list|>
name|reqParsers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|CatalogsRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|CatalogsRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CatalogsRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|OpenConnectionRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|OpenConnectionRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|OpenConnectionRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|CloseConnectionRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|CloseConnectionRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CloseConnectionRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|CloseStatementRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|CloseStatementRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CloseStatementRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|ColumnsRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|ColumnsRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ColumnsRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|ConnectionSyncRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|ConnectionSyncRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ConnectionSyncRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|CreateStatementRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|CreateStatementRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CreateStatementRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|DatabasePropertyRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|DatabasePropertyRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|DatabasePropertyRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|FetchRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|FetchRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|FetchRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|PrepareAndExecuteRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|PrepareAndExecuteRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|PrepareAndExecuteRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|PrepareRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|PrepareRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|PrepareRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|SchemasRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|SchemasRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|SchemasRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|TablesRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|TablesRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|TablesRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|TableTypesRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|TableTypesRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|TableTypesRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|TypeInfoRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|TypeInfoRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|TypeInfoRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqParsers
operator|.
name|put
argument_list|(
name|ExecuteRequest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|RequestTranslator
argument_list|(
name|ExecuteRequest
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ExecuteRequest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|REQUEST_PARSERS
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|reqParsers
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|ResponseTranslator
argument_list|>
name|respParsers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|OpenConnectionResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|OpenConnectionResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|OpenConnectionResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|CloseConnectionResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|CloseConnectionResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CloseConnectionResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|CloseStatementResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|CloseStatementResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CloseStatementResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|ConnectionSyncResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|ConnectionSyncResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ConnectionSyncResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|CreateStatementResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|CreateStatementResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|CreateStatementResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|DatabasePropertyResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|DatabasePropertyResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|DatabasePropertyResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|ExecuteResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|ExecuteResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ExecuteResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|FetchResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|FetchResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|FetchResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|PrepareResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|PrepareResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|PrepareResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|ResultSetResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|ResultSetResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ResultSetResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|respParsers
operator|.
name|put
argument_list|(
name|ErrorResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|ResponseTranslator
argument_list|(
name|ErrorResponse
operator|.
name|parser
argument_list|()
argument_list|,
operator|new
name|Service
operator|.
name|ErrorResponse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RESPONSE_PARSERS
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|respParsers
argument_list|)
expr_stmt|;
block|}
comment|/**    * Fetches the concrete message's Parser implementation.    *    * @param className The protocol buffer class name    * @return The Parser for the class    * @throws IllegalArgumentException If the argument is null or if a Parser for the given    *     class name is not found.    */
specifier|public
specifier|static
name|RequestTranslator
name|getParserForRequest
parameter_list|(
name|String
name|className
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|className
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Cannot fetch parser for null class name"
argument_list|)
throw|;
block|}
name|RequestTranslator
name|translator
init|=
name|REQUEST_PARSERS
operator|.
name|get
argument_list|(
name|className
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|translator
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Cannot find parser for "
operator|+
name|className
argument_list|)
throw|;
block|}
return|return
name|translator
return|;
block|}
comment|/**    * Fetches the concrete message's Parser implementation.    *    * @param className The protocol buffer class name    * @return The Parser for the class    * @throws IllegalArgumentException If the argument is null or if a Parser for the given    *     class name is not found.    */
specifier|public
specifier|static
name|ResponseTranslator
name|getParserForResponse
parameter_list|(
name|String
name|className
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|className
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Cannot fetch parser for null class name"
argument_list|)
throw|;
block|}
name|ResponseTranslator
name|translator
init|=
name|RESPONSE_PARSERS
operator|.
name|get
argument_list|(
name|className
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|translator
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Cannot find parser for "
operator|+
name|className
argument_list|)
throw|;
block|}
return|return
name|translator
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|serializeResponse
parameter_list|(
name|Response
name|response
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Message
name|responseMsg
init|=
name|response
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|serializeMessage
argument_list|(
name|out
argument_list|,
name|responseMsg
argument_list|)
expr_stmt|;
return|return
name|out
operator|.
name|toByteArray
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|serializeRequest
parameter_list|(
name|Request
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Message
name|requestMsg
init|=
name|request
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|serializeMessage
argument_list|(
name|out
argument_list|,
name|requestMsg
argument_list|)
expr_stmt|;
return|return
name|out
operator|.
name|toByteArray
argument_list|()
return|;
block|}
name|void
name|serializeMessage
parameter_list|(
name|OutputStream
name|out
parameter_list|,
name|Message
name|msg
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|msg
operator|.
name|writeTo
argument_list|(
name|baos
argument_list|)
expr_stmt|;
comment|// TODO Using ByteString is copying the bytes of the message which sucks. Could try to
comment|// lift the ZeroCopy implementation from HBase.
name|WireMessage
name|wireMsg
init|=
name|WireMessage
operator|.
name|newBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|msg
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|setWrappedMessage
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|wireMsg
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Request
name|parseRequest
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|InvalidProtocolBufferException
block|{
name|WireMessage
name|wireMsg
init|=
name|WireMessage
operator|.
name|parseFrom
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|String
name|serializedMessageClassName
init|=
name|wireMsg
operator|.
name|getName
argument_list|()
decl_stmt|;
name|RequestTranslator
name|translator
init|=
name|getParserForRequest
argument_list|(
name|serializedMessageClassName
argument_list|)
decl_stmt|;
return|return
name|translator
operator|.
name|transform
argument_list|(
name|wireMsg
operator|.
name|getWrappedMessage
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|parseResponse
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|InvalidProtocolBufferException
block|{
name|WireMessage
name|wireMsg
init|=
name|WireMessage
operator|.
name|parseFrom
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|String
name|serializedMessageClassName
init|=
name|wireMsg
operator|.
name|getName
argument_list|()
decl_stmt|;
name|ResponseTranslator
name|translator
init|=
name|getParserForResponse
argument_list|(
name|serializedMessageClassName
argument_list|)
decl_stmt|;
return|return
name|translator
operator|.
name|transform
argument_list|(
name|wireMsg
operator|.
name|getWrappedMessage
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End ProtobufTranslationImpl.java
end_comment

end_unit

