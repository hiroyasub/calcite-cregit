begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|dropwizard3
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Gauge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Meter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Dropwizard Metrics implementation of {@link MetricsSystem}.  */
end_comment

begin_class
specifier|public
class|class
name|DropwizardMetricsSystem
implements|implements
name|MetricsSystem
block|{
specifier|private
specifier|final
name|MetricRegistry
name|registry
decl_stmt|;
specifier|public
name|DropwizardMetricsSystem
parameter_list|(
name|MetricRegistry
name|registry
parameter_list|)
block|{
name|this
operator|.
name|registry
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|registry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Timer
name|getTimer
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|DropwizardTimer
argument_list|(
name|registry
operator|.
name|timer
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Histogram
name|getHistogram
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|DropwizardHistogram
argument_list|(
name|registry
operator|.
name|histogram
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Meter
name|getMeter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|DropwizardMeter
argument_list|(
name|registry
operator|.
name|meter
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Counter
name|getCounter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|DropwizardCounter
argument_list|(
name|registry
operator|.
name|counter
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|register
parameter_list|(
name|String
name|name
parameter_list|,
name|Gauge
argument_list|<
name|T
argument_list|>
name|gauge
parameter_list|)
block|{
name|registry
operator|.
name|register
argument_list|(
name|name
argument_list|,
operator|new
name|DropwizardGauge
argument_list|<
name|T
argument_list|>
argument_list|(
name|gauge
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End DropwizardMetricsSystem.java
end_comment

end_unit

