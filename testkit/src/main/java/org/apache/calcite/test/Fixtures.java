begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|parser
operator|.
name|SqlParserFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|parser
operator|.
name|SqlParserTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|test
operator|.
name|SqlOperatorFixture
import|;
end_import

begin_comment
comment|/** Fluent test fixtures for typical Calcite tests (parser, validator,  * sql-to-rel and rel-rules) that can easily be used in dependent projects. */
end_comment

begin_class
specifier|public
class|class
name|Fixtures
block|{
specifier|private
name|Fixtures
parameter_list|()
block|{
block|}
comment|/** Creates a fixture for parser tests. */
specifier|public
specifier|static
name|SqlParserFixture
name|forParser
parameter_list|()
block|{
return|return
operator|new
name|SqlParserTest
argument_list|()
operator|.
name|fixture
argument_list|()
return|;
block|}
comment|/** Creates a fixture for validation tests. */
specifier|public
specifier|static
name|SqlValidatorFixture
name|forValidator
parameter_list|()
block|{
return|return
name|SqlValidatorTestCase
operator|.
name|FIXTURE
return|;
block|}
comment|/** Creates a fixture for SQL-to-Rel tests. */
specifier|public
specifier|static
name|SqlToRelFixture
name|forSqlToRel
parameter_list|()
block|{
return|return
name|SqlToRelFixture
operator|.
name|DEFAULT
return|;
block|}
comment|/** Creates a fixture for rule tests. */
specifier|public
specifier|static
name|RelOptFixture
name|forRules
parameter_list|()
block|{
return|return
name|RelOptFixture
operator|.
name|DEFAULT
return|;
block|}
comment|/** Creates a fixture for operator tests. */
specifier|public
specifier|static
name|SqlOperatorFixture
name|forOperators
parameter_list|(
name|boolean
name|execute
parameter_list|)
block|{
return|return
name|execute
condition|?
name|SqlOperatorFixtureImpl
operator|.
name|DEFAULT
operator|.
name|withTester
argument_list|(
name|t
lambda|->
name|SqlOperatorTest
operator|.
name|TESTER
argument_list|)
else|:
name|SqlOperatorFixtureImpl
operator|.
name|DEFAULT
return|;
block|}
comment|/** Creates a fixture for metadata tests. */
specifier|public
specifier|static
name|RelMetadataFixture
name|forMetadata
parameter_list|()
block|{
return|return
name|RelMetadataFixture
operator|.
name|DEFAULT
return|;
block|}
block|}
end_class

end_unit

