begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|model
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonSubTypes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonTypeInfo
import|;
end_import

begin_comment
comment|/**  * Schema schema element.  *  * @see JsonRoot Description of schema elements  */
end_comment

begin_class
annotation|@
name|JsonTypeInfo
argument_list|(
name|use
operator|=
name|JsonTypeInfo
operator|.
name|Id
operator|.
name|NAME
argument_list|,
name|property
operator|=
literal|"type"
argument_list|,
name|defaultImpl
operator|=
name|JsonMapSchema
operator|.
name|class
argument_list|)
annotation|@
name|JsonSubTypes
argument_list|(
block|{
annotation|@
name|JsonSubTypes
operator|.
name|Type
argument_list|(
name|value
operator|=
name|JsonMapSchema
operator|.
name|class
argument_list|,
name|name
operator|=
literal|"map"
argument_list|)
block|,
annotation|@
name|JsonSubTypes
operator|.
name|Type
argument_list|(
name|value
operator|=
name|JsonJdbcSchema
operator|.
name|class
argument_list|,
name|name
operator|=
literal|"jdbc"
argument_list|)
block|,
annotation|@
name|JsonSubTypes
operator|.
name|Type
argument_list|(
name|value
operator|=
name|JsonCustomSchema
operator|.
name|class
argument_list|,
name|name
operator|=
literal|"custom"
argument_list|)
block|}
argument_list|)
specifier|public
specifier|abstract
class|class
name|JsonSchema
block|{
specifier|public
name|String
name|name
decl_stmt|;
specifier|public
specifier|abstract
name|void
name|accept
parameter_list|(
name|ModelHandler
name|handler
parameter_list|)
function_decl|;
block|}
end_class

begin_comment
comment|// End JsonSchema.java
end_comment

end_unit

