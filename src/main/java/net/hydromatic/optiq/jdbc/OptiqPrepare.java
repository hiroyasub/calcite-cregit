begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|Enumerator
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|RawEnumerable
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|expressions
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|impl
operator|.
name|java
operator|.
name|JavaTypeFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * API for a service that prepares statements for execution.  *  * @author jhyde  */
end_comment

begin_interface
specifier|public
interface|interface
name|OptiqPrepare
block|{
name|PrepareResult
name|prepare2
parameter_list|(
name|Statement
name|statement
parameter_list|,
name|Expression
name|expression
parameter_list|,
name|Type
name|elementType
parameter_list|)
function_decl|;
name|PrepareResult
name|prepare
parameter_list|(
name|Statement
name|statement
parameter_list|,
name|String
name|sql
parameter_list|,
name|Expression
name|expression
parameter_list|,
name|Type
name|elementType
parameter_list|)
function_decl|;
interface|interface
name|Statement
block|{
name|JavaTypeFactory
name|getTypeFactory
parameter_list|()
function_decl|;
name|Schema
name|getRootSchema
parameter_list|()
function_decl|;
block|}
specifier|public
specifier|static
class|class
name|PrepareResult
block|{
specifier|public
specifier|final
name|String
name|sql
decl_stmt|;
comment|// for debug
specifier|public
specifier|final
name|List
argument_list|<
name|Parameter
argument_list|>
name|parameterList
decl_stmt|;
specifier|public
specifier|final
name|List
argument_list|<
name|ColumnMetaData
argument_list|>
name|columnList
decl_stmt|;
specifier|public
specifier|final
name|RawEnumerable
argument_list|<
name|Object
index|[]
argument_list|>
name|enumerable
decl_stmt|;
specifier|public
name|PrepareResult
parameter_list|(
name|String
name|sql
parameter_list|,
name|List
argument_list|<
name|Parameter
argument_list|>
name|parameterList
parameter_list|,
name|List
argument_list|<
name|ColumnMetaData
argument_list|>
name|columnList
parameter_list|,
name|RawEnumerable
argument_list|<
name|Object
index|[]
argument_list|>
name|enumerable
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|sql
operator|=
name|sql
expr_stmt|;
name|this
operator|.
name|parameterList
operator|=
name|parameterList
expr_stmt|;
name|this
operator|.
name|columnList
operator|=
name|columnList
expr_stmt|;
name|this
operator|.
name|enumerable
operator|=
name|enumerable
expr_stmt|;
block|}
specifier|public
name|Enumerator
argument_list|<
name|Object
index|[]
argument_list|>
name|execute
parameter_list|()
block|{
return|return
name|enumerable
operator|.
name|enumerator
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ColumnMetaData
block|{
specifier|public
specifier|final
name|int
name|ordinal
decl_stmt|;
comment|// 0-based
specifier|public
specifier|final
name|boolean
name|autoIncrement
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|caseSensitive
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|searchable
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|currency
decl_stmt|;
specifier|public
specifier|final
name|int
name|nullable
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|signed
decl_stmt|;
specifier|public
specifier|final
name|int
name|displaySize
decl_stmt|;
specifier|public
specifier|final
name|String
name|label
decl_stmt|;
specifier|public
specifier|final
name|String
name|columnName
decl_stmt|;
specifier|public
specifier|final
name|String
name|schemaName
decl_stmt|;
specifier|public
specifier|final
name|int
name|precision
decl_stmt|;
specifier|public
specifier|final
name|int
name|scale
decl_stmt|;
specifier|public
specifier|final
name|String
name|tableName
decl_stmt|;
specifier|public
specifier|final
name|String
name|catalogName
decl_stmt|;
specifier|public
specifier|final
name|int
name|type
decl_stmt|;
specifier|public
specifier|final
name|String
name|typeName
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|readOnly
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|writable
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|definitelyWritable
decl_stmt|;
specifier|public
specifier|final
name|String
name|columnClassName
decl_stmt|;
specifier|public
name|ColumnMetaData
parameter_list|(
name|int
name|ordinal
parameter_list|,
name|boolean
name|autoIncrement
parameter_list|,
name|boolean
name|caseSensitive
parameter_list|,
name|boolean
name|searchable
parameter_list|,
name|boolean
name|currency
parameter_list|,
name|int
name|nullable
parameter_list|,
name|boolean
name|signed
parameter_list|,
name|int
name|displaySize
parameter_list|,
name|String
name|label
parameter_list|,
name|String
name|columnName
parameter_list|,
name|String
name|schemaName
parameter_list|,
name|int
name|precision
parameter_list|,
name|int
name|scale
parameter_list|,
name|String
name|tableName
parameter_list|,
name|String
name|catalogName
parameter_list|,
name|int
name|type
parameter_list|,
name|String
name|typeName
parameter_list|,
name|boolean
name|readOnly
parameter_list|,
name|boolean
name|writable
parameter_list|,
name|boolean
name|definitelyWritable
parameter_list|,
name|String
name|columnClassName
parameter_list|)
block|{
name|this
operator|.
name|ordinal
operator|=
name|ordinal
expr_stmt|;
name|this
operator|.
name|autoIncrement
operator|=
name|autoIncrement
expr_stmt|;
name|this
operator|.
name|caseSensitive
operator|=
name|caseSensitive
expr_stmt|;
name|this
operator|.
name|searchable
operator|=
name|searchable
expr_stmt|;
name|this
operator|.
name|currency
operator|=
name|currency
expr_stmt|;
name|this
operator|.
name|nullable
operator|=
name|nullable
expr_stmt|;
name|this
operator|.
name|signed
operator|=
name|signed
expr_stmt|;
name|this
operator|.
name|displaySize
operator|=
name|displaySize
expr_stmt|;
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
name|this
operator|.
name|columnName
operator|=
name|columnName
expr_stmt|;
name|this
operator|.
name|schemaName
operator|=
name|schemaName
expr_stmt|;
name|this
operator|.
name|precision
operator|=
name|precision
expr_stmt|;
name|this
operator|.
name|scale
operator|=
name|scale
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|catalogName
operator|=
name|catalogName
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|typeName
operator|=
name|typeName
expr_stmt|;
name|this
operator|.
name|readOnly
operator|=
name|readOnly
expr_stmt|;
name|this
operator|.
name|writable
operator|=
name|writable
expr_stmt|;
name|this
operator|.
name|definitelyWritable
operator|=
name|definitelyWritable
expr_stmt|;
name|this
operator|.
name|columnClassName
operator|=
name|columnClassName
expr_stmt|;
block|}
block|}
comment|/**      * Metadata for a parameter. Plus a slot to hold its value.      */
specifier|public
specifier|static
class|class
name|Parameter
block|{
specifier|public
specifier|final
name|boolean
name|signed
decl_stmt|;
specifier|public
specifier|final
name|int
name|precision
decl_stmt|;
specifier|public
specifier|final
name|int
name|scale
decl_stmt|;
specifier|public
specifier|final
name|int
name|parameterType
decl_stmt|;
specifier|public
specifier|final
name|String
name|typeName
decl_stmt|;
specifier|public
specifier|final
name|String
name|className
decl_stmt|;
specifier|public
specifier|final
name|String
name|name
decl_stmt|;
name|Object
name|value
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Object
name|DUMMY_VALUE
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
specifier|public
name|Parameter
parameter_list|(
name|boolean
name|signed
parameter_list|,
name|int
name|precision
parameter_list|,
name|int
name|scale
parameter_list|,
name|int
name|parameterType
parameter_list|,
name|String
name|typeName
parameter_list|,
name|String
name|className
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|signed
operator|=
name|signed
expr_stmt|;
name|this
operator|.
name|precision
operator|=
name|precision
expr_stmt|;
name|this
operator|.
name|scale
operator|=
name|scale
expr_stmt|;
name|this
operator|.
name|parameterType
operator|=
name|parameterType
expr_stmt|;
name|this
operator|.
name|typeName
operator|=
name|typeName
expr_stmt|;
name|this
operator|.
name|className
operator|=
name|className
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|setByte
parameter_list|(
name|byte
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|char
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setShort
parameter_list|(
name|short
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setInt
parameter_list|(
name|int
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|long
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|byte
index|[]
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBoolean
parameter_list|(
name|boolean
name|o
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|o
operator|=
name|DUMMY_VALUE
expr_stmt|;
block|}
name|this
operator|.
name|value
operator|=
name|o
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSet
parameter_list|()
block|{
return|return
name|value
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|setRowId
parameter_list|(
name|RowId
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNString
parameter_list|(
name|String
name|value
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNCharacterStream
parameter_list|(
name|Reader
name|value
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|NClob
name|value
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setSQLXML
parameter_list|(
name|SQLXML
name|xmlObject
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|InputStream
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|InputStream
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|Reader
name|reader
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNCharacterStream
parameter_list|(
name|Reader
name|value
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|Reader
name|reader
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|InputStream
name|inputStream
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|Reader
name|reader
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setUnicodeStream
parameter_list|(
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|Timestamp
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|Time
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setFloat
parameter_list|(
name|float
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setDouble
parameter_list|(
name|double
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBigDecimal
parameter_list|(
name|BigDecimal
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setString
parameter_list|(
name|String
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBytes
parameter_list|(
name|byte
index|[]
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|Date
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|Date
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|x
parameter_list|,
name|int
name|targetSqlType
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNull
parameter_list|(
name|int
name|sqlType
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|Time
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setRef
parameter_list|(
name|Ref
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|Blob
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|Clob
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setArray
parameter_list|(
name|Array
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|Timestamp
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setNull
parameter_list|(
name|int
name|sqlType
parameter_list|,
name|String
name|typeName
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setURL
parameter_list|(
name|URL
name|x
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|x
parameter_list|,
name|int
name|targetSqlType
parameter_list|,
name|int
name|scaleOrLength
parameter_list|)
block|{
block|}
block|}
block|}
end_interface

begin_comment
comment|// End OptiqPrepare.java
end_comment

end_unit

