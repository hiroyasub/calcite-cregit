begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|Enumerator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|RoundingMode
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link ResultSet}  * for the Optiq engine.  */
end_comment

begin_class
specifier|public
class|class
name|OptiqResultSet
implements|implements
name|ResultSet
block|{
specifier|private
specifier|final
name|OptiqStatement
name|statement
decl_stmt|;
specifier|private
name|Enumerator
argument_list|<
name|Object
argument_list|>
name|enumerator
decl_stmt|;
specifier|private
name|boolean
name|wasNull
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Accessor
argument_list|>
name|accessorList
init|=
operator|new
name|ArrayList
argument_list|<
name|Accessor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Accessor
argument_list|>
name|accessorMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Accessor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|columnNameMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|row
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|boolean
name|afterLast
decl_stmt|;
specifier|private
name|int
name|fetchDirection
decl_stmt|;
specifier|private
name|int
name|fetchSize
decl_stmt|;
specifier|private
name|int
name|type
decl_stmt|;
specifier|private
name|int
name|concurrency
decl_stmt|;
specifier|private
name|int
name|holdability
decl_stmt|;
specifier|private
name|boolean
name|closed
decl_stmt|;
specifier|private
name|OptiqPrepare
operator|.
name|PrepareResult
name|prepareResult
decl_stmt|;
name|OptiqResultSet
parameter_list|(
name|OptiqStatement
name|statement
parameter_list|,
name|OptiqPrepare
operator|.
name|PrepareResult
name|prepareResult
parameter_list|)
block|{
name|this
operator|.
name|statement
operator|=
name|statement
expr_stmt|;
name|this
operator|.
name|prepareResult
operator|=
name|prepareResult
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|statement
operator|.
name|resultSetType
expr_stmt|;
name|this
operator|.
name|concurrency
operator|=
name|statement
operator|.
name|resultSetConcurrency
expr_stmt|;
name|this
operator|.
name|holdability
operator|=
name|statement
operator|.
name|resultSetHoldability
expr_stmt|;
name|this
operator|.
name|fetchSize
operator|=
name|statement
operator|.
name|getFetchSize
argument_list|()
expr_stmt|;
name|this
operator|.
name|fetchDirection
operator|=
name|statement
operator|.
name|getFetchDirection
argument_list|()
expr_stmt|;
for|for
control|(
name|OptiqResultSetMetaData
operator|.
name|ColumnMetaData
name|columnMetaData
range|:
name|prepareResult
operator|.
name|resultSetMetaData
operator|.
name|columnMetaDataList
control|)
block|{
name|Accessor
name|accessor
init|=
name|createAccessor
argument_list|(
name|columnMetaData
argument_list|)
decl_stmt|;
name|accessorList
operator|.
name|add
argument_list|(
name|accessor
argument_list|)
expr_stmt|;
name|accessorMap
operator|.
name|put
argument_list|(
name|columnMetaData
operator|.
name|label
argument_list|,
name|accessor
argument_list|)
expr_stmt|;
name|columnNameMap
operator|.
name|put
argument_list|(
name|columnMetaData
operator|.
name|label
argument_list|,
name|columnNameMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Accessor
name|createAccessor
parameter_list|(
name|OptiqResultSetMetaData
operator|.
name|ColumnMetaData
name|columnMetaData
parameter_list|)
block|{
comment|// Create an accessor appropriate to the underlying type; the accessor
comment|// can convert to any type in the same family.
switch|switch
condition|(
name|columnMetaData
operator|.
name|type
condition|)
block|{
case|case
name|Types
operator|.
name|TINYINT
case|:
return|return
operator|new
name|ByteAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|SMALLINT
case|:
return|return
operator|new
name|ShortAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|INTEGER
case|:
return|return
operator|new
name|IntAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|BIGINT
case|:
return|return
operator|new
name|LongAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|BOOLEAN
case|:
return|return
operator|new
name|BooleanAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|FLOAT
case|:
return|return
operator|new
name|FloatAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|DOUBLE
case|:
return|return
operator|new
name|DoubleAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|CHAR
case|:
case|case
name|Types
operator|.
name|VARCHAR
case|:
return|return
operator|new
name|StringAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
case|case
name|Types
operator|.
name|BINARY
case|:
case|case
name|Types
operator|.
name|VARBINARY
case|:
return|return
operator|new
name|BinaryAccessor
argument_list|(
name|columnMetaData
operator|.
name|ordinal
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"unknown type "
operator|+
name|columnMetaData
operator|.
name|type
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Accessor
name|getAccessor
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
return|return
name|accessorList
operator|.
name|get
argument_list|(
name|columnIndex
argument_list|)
return|;
block|}
specifier|private
name|Accessor
name|getAccessor
parameter_list|(
name|String
name|columnLabel
parameter_list|)
block|{
return|return
name|accessorMap
operator|.
name|get
argument_list|(
name|columnLabel
argument_list|)
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|closed
operator|=
literal|true
expr_stmt|;
block|}
comment|// not JDBC
name|void
name|cancel
parameter_list|()
block|{
comment|// TODO:
block|}
comment|/**      * Executes this result set. (Not a JDBC method.)      *      *<p>Note that execute cannot occur in the      * constructor, because the constructor occurs while the statement is      * locked, to make sure that execute/cancel don't happen at the same      * time.</p>      */
name|void
name|execute
parameter_list|()
block|{
name|enumerator
operator|=
name|prepareResult
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|next
parameter_list|()
throws|throws
name|SQLException
block|{
if|if
condition|(
name|enumerator
operator|.
name|moveNext
argument_list|()
condition|)
block|{
operator|++
name|row
expr_stmt|;
return|return
literal|true
return|;
block|}
else|else
block|{
name|afterLast
operator|=
literal|true
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|boolean
name|wasNull
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|wasNull
return|;
block|}
specifier|public
name|String
name|getString
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getBoolean
argument_list|()
return|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getByte
argument_list|()
return|;
block|}
specifier|public
name|short
name|getShort
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getShort
argument_list|()
return|;
block|}
specifier|public
name|int
name|getInt
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getInt
argument_list|()
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getLong
argument_list|()
return|;
block|}
specifier|public
name|float
name|getFloat
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getFloat
argument_list|()
return|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|int
name|scale
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getBigDecimal
argument_list|(
name|scale
argument_list|)
return|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getBytes
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getDate
argument_list|()
return|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getTime
argument_list|()
return|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getTimestamp
argument_list|()
return|;
block|}
specifier|public
name|InputStream
name|getAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getAsciiStream
argument_list|()
return|;
block|}
specifier|public
name|InputStream
name|getUnicodeStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getUnicodeStream
argument_list|()
return|;
block|}
specifier|public
name|InputStream
name|getBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getBinaryStream
argument_list|()
return|;
block|}
specifier|public
name|String
name|getString
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getBoolean
argument_list|()
return|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getByte
argument_list|()
return|;
block|}
specifier|public
name|short
name|getShort
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getShort
argument_list|()
return|;
block|}
specifier|public
name|int
name|getInt
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getInt
argument_list|()
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getLong
argument_list|()
return|;
block|}
specifier|public
name|float
name|getFloat
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getFloat
argument_list|()
return|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|int
name|scale
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getBigDecimal
argument_list|(
name|scale
argument_list|)
return|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getBytes
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getDate
argument_list|()
return|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getTime
argument_list|()
return|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getTimestamp
argument_list|()
return|;
block|}
specifier|public
name|InputStream
name|getAsciiStream
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getAsciiStream
argument_list|()
return|;
block|}
specifier|public
name|InputStream
name|getUnicodeStream
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getUnicodeStream
argument_list|()
return|;
block|}
specifier|public
name|InputStream
name|getBinaryStream
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getBinaryStream
argument_list|()
return|;
block|}
specifier|public
name|SQLWarning
name|getWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|clearWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getCursorName
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|ResultSetMetaData
name|getMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|prepareResult
operator|.
name|resultSetMetaData
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getObject
argument_list|()
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getObject
argument_list|()
return|;
block|}
specifier|public
name|int
name|findColumn
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|columnNameMap
operator|.
name|get
argument_list|(
name|columnLabel
argument_list|)
return|;
block|}
specifier|public
name|Reader
name|getCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getCharacterStream
argument_list|()
return|;
block|}
specifier|public
name|Reader
name|getCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getCharacterStream
argument_list|()
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getBigDecimal
argument_list|()
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getBigDecimal
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isBeforeFirst
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|row
operator|<
literal|0
return|;
block|}
specifier|public
name|boolean
name|isAfterLast
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|afterLast
return|;
block|}
specifier|public
name|boolean
name|isFirst
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|row
operator|==
literal|0
return|;
block|}
specifier|public
name|boolean
name|isLast
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|beforeFirst
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|afterLast
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|first
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|last
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getRow
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|row
return|;
block|}
specifier|public
name|boolean
name|absolute
parameter_list|(
name|int
name|row
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|relative
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|previous
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|setFetchDirection
parameter_list|(
name|int
name|direction
parameter_list|)
throws|throws
name|SQLException
block|{
name|this
operator|.
name|fetchDirection
operator|=
name|direction
expr_stmt|;
block|}
specifier|public
name|int
name|getFetchDirection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|fetchDirection
return|;
block|}
specifier|public
name|void
name|setFetchSize
parameter_list|(
name|int
name|fetchSize
parameter_list|)
throws|throws
name|SQLException
block|{
name|this
operator|.
name|fetchSize
operator|=
name|fetchSize
expr_stmt|;
block|}
specifier|public
name|int
name|getFetchSize
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|fetchSize
return|;
block|}
specifier|public
name|int
name|getType
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|type
return|;
block|}
specifier|public
name|int
name|getConcurrency
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|concurrency
return|;
block|}
specifier|public
name|boolean
name|rowUpdated
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|rowInserted
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|rowDeleted
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|updateNull
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBoolean
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|boolean
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateByte
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|byte
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateShort
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|short
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateInt
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|int
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateLong
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|long
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateFloat
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|float
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateDouble
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|double
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBigDecimal
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|BigDecimal
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateString
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|String
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBytes
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|byte
index|[]
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateDate
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Date
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateTime
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Time
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateTimestamp
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Timestamp
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|scaleOrLength
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Object
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNull
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBoolean
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|boolean
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateByte
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|byte
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateShort
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|short
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateInt
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|int
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateLong
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|long
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateFloat
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|float
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateDouble
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|double
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBigDecimal
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|BigDecimal
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateString
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|String
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBytes
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|byte
index|[]
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateDate
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Date
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateTime
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Time
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateTimestamp
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Timestamp
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|scaleOrLength
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Object
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|insertRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|deleteRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|refreshRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|cancelRowUpdates
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|moveToInsertRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|moveToCurrentRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|Statement
name|getStatement
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|statement
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|map
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getObject
argument_list|(
name|map
argument_list|)
return|;
block|}
specifier|public
name|Ref
name|getRef
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getRef
argument_list|()
return|;
block|}
specifier|public
name|Blob
name|getBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getBlob
argument_list|()
return|;
block|}
specifier|public
name|Clob
name|getClob
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getClob
argument_list|()
return|;
block|}
specifier|public
name|Array
name|getArray
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getArray
argument_list|()
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|map
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getObject
argument_list|(
name|map
argument_list|)
return|;
block|}
specifier|public
name|Ref
name|getRef
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getRef
argument_list|()
return|;
block|}
specifier|public
name|Blob
name|getBlob
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getBlob
argument_list|()
return|;
block|}
specifier|public
name|Clob
name|getClob
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getClob
argument_list|()
return|;
block|}
specifier|public
name|Array
name|getArray
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getArray
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getDate
argument_list|(
name|cal
argument_list|)
return|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getDate
argument_list|(
name|cal
argument_list|)
return|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getTime
argument_list|(
name|cal
argument_list|)
return|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getTime
argument_list|(
name|cal
argument_list|)
return|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getTimestamp
argument_list|(
name|cal
argument_list|)
return|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getTimestamp
argument_list|(
name|cal
argument_list|)
return|;
block|}
specifier|public
name|URL
name|getURL
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getURL
argument_list|()
return|;
block|}
specifier|public
name|URL
name|getURL
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getURL
argument_list|()
return|;
block|}
specifier|public
name|void
name|updateRef
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Ref
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateRef
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Ref
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Blob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Blob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Clob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Clob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateArray
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Array
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateArray
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Array
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|RowId
name|getRowId
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|RowId
name|getRowId
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateRowId
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|RowId
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateRowId
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|RowId
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getHoldability
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|holdability
return|;
block|}
specifier|public
name|boolean
name|isClosed
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|closed
return|;
block|}
specifier|public
name|void
name|updateNString
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|String
name|nString
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNString
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|String
name|nString
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|NClob
name|nClob
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|NClob
name|nClob
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|NClob
name|getNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getNClob
argument_list|()
return|;
block|}
specifier|public
name|NClob
name|getNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getNClob
argument_list|()
return|;
block|}
specifier|public
name|SQLXML
name|getSQLXML
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getSQLXML
argument_list|()
return|;
block|}
specifier|public
name|SQLXML
name|getSQLXML
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getSQLXML
argument_list|()
return|;
block|}
specifier|public
name|void
name|updateSQLXML
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|SQLXML
name|xmlObject
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateSQLXML
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|SQLXML
name|xmlObject
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getNString
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getNString
argument_list|()
return|;
block|}
specifier|public
name|String
name|getNString
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getNString
argument_list|()
return|;
block|}
specifier|public
name|Reader
name|getNCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getNCharacterStream
argument_list|()
return|;
block|}
specifier|public
name|Reader
name|getNCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getNCharacterStream
argument_list|()
return|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getObject
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getObject
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getObject
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getAccessor
argument_list|(
name|columnLabel
argument_list|)
operator|.
name|getObject
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
if|if
condition|(
name|iface
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
condition|)
block|{
return|return
name|iface
operator|.
name|cast
argument_list|(
name|this
argument_list|)
return|;
block|}
throw|throw
name|statement
operator|.
name|connection
operator|.
name|helper
operator|.
name|createException
argument_list|(
literal|"does not implement '"
operator|+
name|iface
operator|+
literal|"'"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|iface
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
return|;
block|}
class|class
name|Accessor
block|{
specifier|private
specifier|final
name|int
name|field
decl_stmt|;
specifier|public
name|Accessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
block|}
specifier|public
name|String
name|getString
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"String"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"boolean"
argument_list|)
throw|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"byte"
argument_list|)
throw|;
block|}
specifier|public
name|short
name|getShort
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"short"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getInt
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"int"
argument_list|)
throw|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"long"
argument_list|)
throw|;
block|}
specifier|public
name|float
name|getFloat
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"float"
argument_list|)
throw|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"double"
argument_list|)
throw|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"BigDecimal"
argument_list|)
throw|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"BigDecimal with scale"
argument_list|)
throw|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"byte[]"
argument_list|)
throw|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Date"
argument_list|)
throw|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Time"
argument_list|)
throw|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Timestamp"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getAsciiStream
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"InputStream (ascii)"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getUnicodeStream
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"InputStream (unicode)"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getBinaryStream
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"InputStream (binary)"
argument_list|)
throw|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|()
block|{
return|return
operator|(
operator|(
name|Object
index|[]
operator|)
name|enumerator
operator|.
name|current
argument_list|()
operator|)
index|[
name|field
index|]
return|;
block|}
specifier|public
name|Reader
name|getCharacterStream
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Reader"
argument_list|)
throw|;
block|}
specifier|private
name|RuntimeException
name|cannotConvert
parameter_list|(
name|String
name|targetType
parameter_list|)
block|{
return|return
operator|new
name|RuntimeException
argument_list|(
literal|"cannot convert to "
operator|+
name|targetType
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|isNull
parameter_list|()
block|{
return|return
name|getObject
argument_list|()
operator|==
literal|null
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|map
parameter_list|)
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Object (with map)"
argument_list|)
throw|;
block|}
specifier|public
name|Ref
name|getRef
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Ref"
argument_list|)
throw|;
block|}
specifier|public
name|Blob
name|getBlob
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Blob"
argument_list|)
throw|;
block|}
specifier|public
name|Clob
name|getClob
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Clob"
argument_list|)
throw|;
block|}
specifier|public
name|Array
name|getArray
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Array"
argument_list|)
throw|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|Calendar
name|cal
parameter_list|)
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Date (with Calendar)"
argument_list|)
throw|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|Calendar
name|cal
parameter_list|)
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Time (with Calendar)"
argument_list|)
throw|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|Calendar
name|cal
parameter_list|)
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Timestamp (with Calendar)"
argument_list|)
throw|;
block|}
specifier|public
name|URL
name|getURL
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"URL"
argument_list|)
throw|;
block|}
specifier|public
name|NClob
name|getNClob
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"NClob"
argument_list|)
throw|;
block|}
specifier|public
name|SQLXML
name|getSQLXML
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"SQLXML"
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getNString
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"NString"
argument_list|)
throw|;
block|}
specifier|public
name|Reader
name|getNCharacterStream
parameter_list|()
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"NCharacterStream"
argument_list|)
throw|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getObject
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
throw|throw
name|cannotConvert
argument_list|(
literal|"Object (with type)"
argument_list|)
throw|;
block|}
block|}
comment|/**      * Accessor of exact numeric values. The subclass must implement the      * {@link #getLong()} method.      */
specifier|private
specifier|abstract
class|class
name|ExactNumericAccessor
extends|extends
name|Accessor
block|{
specifier|public
name|ExactNumericAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
specifier|final
name|long
name|v
init|=
name|getLong
argument_list|()
decl_stmt|;
return|return
name|v
operator|==
literal|0
operator|&&
name|wasNull
condition|?
literal|null
else|:
name|BigDecimal
operator|.
name|valueOf
argument_list|(
name|v
argument_list|)
operator|.
name|setScale
argument_list|(
name|scale
argument_list|,
name|RoundingMode
operator|.
name|DOWN
argument_list|)
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|()
block|{
specifier|final
name|long
name|val
init|=
name|getLong
argument_list|()
decl_stmt|;
return|return
name|val
operator|==
literal|0
operator|&&
name|wasNull
condition|?
literal|null
else|:
name|BigDecimal
operator|.
name|valueOf
argument_list|(
name|val
argument_list|)
return|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|()
block|{
return|return
name|getLong
argument_list|()
return|;
block|}
specifier|public
name|float
name|getFloat
parameter_list|()
block|{
return|return
name|getLong
argument_list|()
return|;
block|}
specifier|public
specifier|abstract
name|long
name|getLong
parameter_list|()
function_decl|;
specifier|public
name|int
name|getInt
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|getLong
argument_list|()
return|;
block|}
specifier|public
name|short
name|getShort
parameter_list|()
block|{
return|return
operator|(
name|short
operator|)
name|getLong
argument_list|()
return|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|()
block|{
return|return
operator|(
name|byte
operator|)
name|getLong
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|()
block|{
return|return
name|getLong
argument_list|()
operator|!=
literal|0d
return|;
block|}
specifier|public
name|String
name|getString
parameter_list|()
block|{
specifier|final
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
return|return
name|o
operator|==
literal|null
condition|?
literal|null
else|:
name|String
operator|.
name|valueOf
argument_list|(
name|o
argument_list|)
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link Boolean};      * corresponds to {@link Types#BOOLEAN}.      */
specifier|private
class|class
name|BooleanAccessor
extends|extends
name|ExactNumericAccessor
block|{
specifier|public
name|BooleanAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|false
return|;
block|}
return|return
operator|(
name|Boolean
operator|)
name|o
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
return|return
name|getBoolean
argument_list|()
condition|?
literal|1
else|:
literal|0
return|;
block|}
specifier|public
name|String
name|getString
parameter_list|()
block|{
specifier|final
name|boolean
name|b
init|=
name|getBoolean
argument_list|()
decl_stmt|;
return|return
name|wasNull
condition|?
literal|null
else|:
name|Boolean
operator|.
name|toString
argument_list|(
name|b
argument_list|)
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link Byte};      * corresponds to {@link Types#TINYINT}.      */
specifier|private
class|class
name|ByteAccessor
extends|extends
name|ExactNumericAccessor
block|{
specifier|public
name|ByteAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
operator|(
name|Byte
operator|)
name|o
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
return|return
name|getByte
argument_list|()
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link Short};      * corresponds to {@link Types#SMALLINT}.      */
specifier|private
class|class
name|ShortAccessor
extends|extends
name|ExactNumericAccessor
block|{
specifier|public
name|ShortAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|short
name|getShort
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
operator|(
name|Short
operator|)
name|o
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
return|return
name|getShort
argument_list|()
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is an {@link Integer};      * corresponds to {@link Types#INTEGER}.      */
specifier|private
class|class
name|IntAccessor
extends|extends
name|ExactNumericAccessor
block|{
specifier|public
name|IntAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getInt
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
operator|(
name|Integer
operator|)
name|o
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
return|return
name|getInt
argument_list|()
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link Long};      * corresponds to {@link Types#BIGINT}.      */
specifier|private
class|class
name|LongAccessor
extends|extends
name|ExactNumericAccessor
block|{
specifier|public
name|LongAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
operator|(
name|Long
operator|)
name|o
return|;
block|}
block|}
comment|/**      * Accessor of values that are {@link Double} or null.      */
specifier|private
specifier|abstract
class|class
name|ApproximateNumericAccessor
extends|extends
name|Accessor
block|{
specifier|public
name|ApproximateNumericAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
specifier|final
name|double
name|v
init|=
name|getDouble
argument_list|()
decl_stmt|;
return|return
name|v
operator|==
literal|0d
operator|&&
name|wasNull
condition|?
literal|null
else|:
name|BigDecimal
operator|.
name|valueOf
argument_list|(
name|v
argument_list|)
operator|.
name|setScale
argument_list|(
name|scale
argument_list|,
name|RoundingMode
operator|.
name|DOWN
argument_list|)
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|()
block|{
specifier|final
name|double
name|v
init|=
name|getDouble
argument_list|()
decl_stmt|;
return|return
name|v
operator|==
literal|0
operator|&&
name|wasNull
condition|?
literal|null
else|:
name|BigDecimal
operator|.
name|valueOf
argument_list|(
name|v
argument_list|)
return|;
block|}
specifier|public
specifier|abstract
name|double
name|getDouble
parameter_list|()
function_decl|;
specifier|public
name|float
name|getFloat
parameter_list|()
block|{
return|return
operator|(
name|float
operator|)
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|()
block|{
return|return
operator|(
name|long
operator|)
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|int
name|getInt
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|short
name|getShort
parameter_list|()
block|{
return|return
operator|(
name|short
operator|)
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|()
block|{
return|return
operator|(
name|byte
operator|)
name|getDouble
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|()
block|{
return|return
name|getDouble
argument_list|()
operator|!=
literal|0
return|;
block|}
specifier|public
name|String
name|getString
parameter_list|()
block|{
specifier|final
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
return|return
name|o
operator|==
literal|null
condition|?
literal|null
else|:
name|String
operator|.
name|valueOf
argument_list|(
name|o
argument_list|)
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link Float};      * corresponds to {@link Types#FLOAT}.      */
specifier|private
class|class
name|FloatAccessor
extends|extends
name|ApproximateNumericAccessor
block|{
specifier|public
name|FloatAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|float
name|getFloat
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
operator|(
name|Float
operator|)
name|o
return|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|()
block|{
return|return
name|getFloat
argument_list|()
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link Float};      * corresponds to {@link Types#FLOAT}.      */
specifier|private
class|class
name|DoubleAccessor
extends|extends
name|ApproximateNumericAccessor
block|{
specifier|public
name|DoubleAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|()
block|{
name|Object
name|o
init|=
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
operator|(
name|Double
operator|)
name|o
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is a {@link String};      * corresponds to {@link Types#CHAR} and {@link Types#VARCHAR}.      */
specifier|private
class|class
name|StringAccessor
extends|extends
name|Accessor
block|{
specifier|public
name|StringAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getString
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|getObject
argument_list|()
return|;
block|}
block|}
comment|/**      * Accessor that assumes that the underlying value is an array of      * {@code byte} values;      * corresponds to {@link Types#BINARY} and {@link Types#VARBINARY}.      */
specifier|private
class|class
name|BinaryAccessor
extends|extends
name|Accessor
block|{
specifier|public
name|BinaryAccessor
parameter_list|(
name|int
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|()
block|{
return|return
operator|(
name|byte
index|[]
operator|)
name|getObject
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getString
parameter_list|()
block|{
return|return
name|ByteString
operator|.
name|toString
argument_list|(
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End OptiqResultSet.java
end_comment

end_unit

