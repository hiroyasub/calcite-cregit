begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|jdbc
package|;
end_package

begin_comment
comment|/**  * Driver version information.  *  *<p>Each driver implementation must provide an instance of this class, in  * order to implement {@link Driver#createDriverVersion()}.  * Typically, drivers create a subclass in a with a constructor that provides  * all of the arguments for the base class. The instance is held in a separate  * file, so that that version information can be generated.</p>  */
end_comment

begin_class
specifier|public
class|class
name|DriverVersion
block|{
specifier|public
specifier|final
name|int
name|majorVersion
decl_stmt|;
specifier|public
specifier|final
name|int
name|minorVersion
decl_stmt|;
specifier|public
specifier|final
name|String
name|name
decl_stmt|;
specifier|public
specifier|final
name|String
name|versionString
decl_stmt|;
specifier|public
specifier|final
name|String
name|productName
decl_stmt|;
specifier|public
specifier|final
name|String
name|productVersion
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|jdbcCompliant
decl_stmt|;
specifier|public
specifier|final
name|int
name|databaseMajorVersion
decl_stmt|;
specifier|public
specifier|final
name|int
name|databaseMinorVersion
decl_stmt|;
comment|/** Creates a DriverVersion. */
specifier|public
name|DriverVersion
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|versionString
parameter_list|,
name|String
name|productName
parameter_list|,
name|String
name|productVersion
parameter_list|,
name|boolean
name|jdbcCompliant
parameter_list|,
name|int
name|majorVersion
parameter_list|,
name|int
name|minorVersion
parameter_list|,
name|int
name|databaseMajorVersion
parameter_list|,
name|int
name|databaseMinorVersion
parameter_list|)
block|{
name|this
operator|.
name|majorVersion
operator|=
name|majorVersion
expr_stmt|;
name|this
operator|.
name|minorVersion
operator|=
name|minorVersion
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|versionString
operator|=
name|versionString
expr_stmt|;
name|this
operator|.
name|productName
operator|=
name|productName
expr_stmt|;
name|this
operator|.
name|productVersion
operator|=
name|productVersion
expr_stmt|;
name|this
operator|.
name|jdbcCompliant
operator|=
name|jdbcCompliant
expr_stmt|;
name|this
operator|.
name|databaseMajorVersion
operator|=
name|databaseMajorVersion
expr_stmt|;
name|this
operator|.
name|databaseMinorVersion
operator|=
name|databaseMinorVersion
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End DriverVersion.java
end_comment

end_unit

