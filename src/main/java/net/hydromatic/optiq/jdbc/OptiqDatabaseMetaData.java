begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|runtime
operator|.
name|AbstractIterResultSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|runtime
operator|.
name|IteratorResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link java.sql.DatabaseMetaData}  * for the Optiq engine.  *  *<p>This class has sub-classes which implement JDBC 3.0 and JDBC 4.0 APIs;  * it is instantiated using {@link Factory#newDatabaseMetaData}.</p>  *  * @author jhyde  */
end_comment

begin_class
class|class
name|OptiqDatabaseMetaData
implements|implements
name|DatabaseMetaData
block|{
specifier|private
specifier|final
name|OptiqConnectionImpl
name|connection
decl_stmt|;
specifier|private
specifier|final
name|Meta
name|meta
decl_stmt|;
name|OptiqDatabaseMetaData
parameter_list|(
name|OptiqConnectionImpl
name|connection
parameter_list|)
block|{
name|this
operator|.
name|connection
operator|=
name|connection
expr_stmt|;
name|this
operator|.
name|meta
operator|=
operator|new
name|Meta
argument_list|(
name|connection
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|allProceduresAreCallable
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|allTablesAreSelectable
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getURL
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|isReadOnly
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|nullsAreSortedHigh
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|nullsAreSortedLow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|nullsAreSortedAtStart
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|nullsAreSortedAtEnd
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getDatabaseProductName
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|version
operator|.
name|productName
return|;
block|}
specifier|public
name|String
name|getDatabaseProductVersion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|version
operator|.
name|productVersion
return|;
block|}
specifier|public
name|String
name|getDriverName
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|version
operator|.
name|name
return|;
block|}
specifier|public
name|String
name|getDriverVersion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|version
operator|.
name|versionString
return|;
block|}
specifier|public
name|int
name|getDriverMajorVersion
parameter_list|()
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|getMajorVersion
argument_list|()
return|;
block|}
specifier|public
name|int
name|getDriverMinorVersion
parameter_list|()
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|getMinorVersion
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|usesLocalFiles
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|usesLocalFilePerTable
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsMixedCaseIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|storesUpperCaseIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|storesLowerCaseIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|storesMixedCaseIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|supportsMixedCaseQuotedIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|storesUpperCaseQuotedIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|storesLowerCaseQuotedIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|storesMixedCaseQuotedIdentifiers
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getIdentifierQuoteString
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|"\""
return|;
block|}
specifier|public
name|String
name|getSQLKeywords
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getNumericFunctions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getStringFunctions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getSystemFunctions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getTimeDateFunctions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getSearchStringEscape
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getExtraNameCharacters
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|""
return|;
block|}
specifier|public
name|boolean
name|supportsAlterTableWithAddColumn
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsAlterTableWithDropColumn
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsColumnAliasing
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|nullPlusNonNullIsNull
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsConvert
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsConvert
parameter_list|(
name|int
name|fromType
parameter_list|,
name|int
name|toType
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsTableCorrelationNames
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsDifferentTableCorrelationNames
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsExpressionsInOrderBy
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsOrderByUnrelated
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsGroupBy
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsGroupByUnrelated
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsGroupByBeyondSelect
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsLikeEscapeClause
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsMultipleResultSets
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsMultipleTransactions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsNonNullableColumns
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsMinimumSQLGrammar
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCoreSQLGrammar
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsExtendedSQLGrammar
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsANSI92EntryLevelSQL
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsANSI92IntermediateSQL
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsANSI92FullSQL
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsIntegrityEnhancementFacility
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsOuterJoins
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsFullOuterJoins
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsLimitedOuterJoins
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getSchemaTerm
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getProcedureTerm
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getCatalogTerm
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|isCatalogAtStart
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getCatalogSeparator
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSchemasInDataManipulation
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSchemasInProcedureCalls
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSchemasInTableDefinitions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSchemasInIndexDefinitions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSchemasInPrivilegeDefinitions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCatalogsInDataManipulation
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCatalogsInProcedureCalls
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCatalogsInTableDefinitions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCatalogsInIndexDefinitions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCatalogsInPrivilegeDefinitions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsPositionedDelete
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsPositionedUpdate
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSelectForUpdate
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsStoredProcedures
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSubqueriesInComparisons
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSubqueriesInExists
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSubqueriesInIns
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsSubqueriesInQuantifieds
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsCorrelatedSubqueries
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsUnion
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsUnionAll
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsOpenCursorsAcrossCommit
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsOpenCursorsAcrossRollback
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsOpenStatementsAcrossCommit
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsOpenStatementsAcrossRollback
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getMaxBinaryLiteralLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxCharLiteralLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxColumnNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxColumnsInGroupBy
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxColumnsInIndex
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getMaxColumnsInOrderBy
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxColumnsInSelect
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxColumnsInTable
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxConnections
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxCursorNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getMaxIndexLength
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getMaxSchemaNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxProcedureNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxCatalogNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxRowSize
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|doesMaxRowSizeIncludeBlobs
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getMaxStatementLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxStatements
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxTableNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxTablesInSelect
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxUserNameLength
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getDefaultTransactionIsolation
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsTransactions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsTransactionIsolationLevel
parameter_list|(
name|int
name|level
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsDataDefinitionAndDataManipulationTransactions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsDataManipulationTransactionsOnly
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|dataDefinitionCausesTransactionCommit
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|dataDefinitionIgnoredInTransactions
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|ResultSet
name|getProcedures
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|procedureNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getProcedureColumns
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|procedureNamePattern
parameter_list|,
name|String
name|columnNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getTables
parameter_list|(
name|String
name|catalog
parameter_list|,
specifier|final
name|String
name|schemaPattern
parameter_list|,
name|String
name|tableNamePattern
parameter_list|,
name|String
index|[]
name|types
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|meta
operator|.
name|getTables
argument_list|(
name|catalog
argument_list|,
name|schemaPattern
argument_list|,
name|tableNamePattern
argument_list|,
name|types
argument_list|)
return|;
block|}
specifier|public
name|ResultSet
name|getSchemas
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getCatalogs
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getTableTypes
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getColumns
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|tableNamePattern
parameter_list|,
name|String
name|columnNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|meta
operator|.
name|getColumns
argument_list|(
name|catalog
argument_list|,
name|schemaPattern
argument_list|,
name|tableNamePattern
argument_list|,
name|columnNamePattern
argument_list|)
return|;
block|}
specifier|public
name|ResultSet
name|getColumnPrivileges
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|columnNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getTablePrivileges
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|tableNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getBestRowIdentifier
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|,
name|int
name|scope
parameter_list|,
name|boolean
name|nullable
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getVersionColumns
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getPrimaryKeys
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getImportedKeys
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getExportedKeys
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getCrossReference
parameter_list|(
name|String
name|parentCatalog
parameter_list|,
name|String
name|parentSchema
parameter_list|,
name|String
name|parentTable
parameter_list|,
name|String
name|foreignCatalog
parameter_list|,
name|String
name|foreignSchema
parameter_list|,
name|String
name|foreignTable
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getTypeInfo
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getIndexInfo
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|,
name|boolean
name|unique
parameter_list|,
name|boolean
name|approximate
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|supportsResultSetType
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|type
operator|==
name|ResultSet
operator|.
name|TYPE_FORWARD_ONLY
return|;
block|}
specifier|public
name|boolean
name|supportsResultSetConcurrency
parameter_list|(
name|int
name|type
parameter_list|,
name|int
name|concurrency
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|type
operator|==
name|ResultSet
operator|.
name|TYPE_FORWARD_ONLY
operator|&&
name|concurrency
operator|==
name|ResultSet
operator|.
name|CONCUR_READ_ONLY
return|;
block|}
specifier|public
name|boolean
name|ownUpdatesAreVisible
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|ownDeletesAreVisible
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|ownInsertsAreVisible
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|othersUpdatesAreVisible
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|othersDeletesAreVisible
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|othersInsertsAreVisible
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|updatesAreDetected
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|deletesAreDetected
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|insertsAreDetected
parameter_list|(
name|int
name|type
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsBatchUpdates
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|ResultSet
name|getUDTs
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|typeNamePattern
parameter_list|,
name|int
index|[]
name|types
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|Connection
name|getConnection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
return|;
block|}
specifier|public
name|boolean
name|supportsSavepoints
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsNamedParameters
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsMultipleOpenResults
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsGetGeneratedKeys
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|ResultSet
name|getSuperTypes
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|typeNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getSuperTables
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|tableNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getAttributes
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|typeNamePattern
parameter_list|,
name|String
name|attributeNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|supportsResultSetHoldability
parameter_list|(
name|int
name|holdability
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|int
name|getResultSetHoldability
parameter_list|()
block|{
return|return
name|ResultSet
operator|.
name|HOLD_CURSORS_OVER_COMMIT
return|;
block|}
specifier|public
name|int
name|getDatabaseMajorVersion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|version
operator|.
name|databaseMajorVersion
return|;
block|}
specifier|public
name|int
name|getDatabaseMinorVersion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|driver
operator|.
name|version
operator|.
name|databaseMinorVersion
return|;
block|}
specifier|public
name|int
name|getJDBCMajorVersion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|factory
operator|.
name|getJdbcMajorVersion
argument_list|()
return|;
block|}
specifier|public
name|int
name|getJDBCMinorVersion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|connection
operator|.
name|factory
operator|.
name|getJdbcMinorVersion
argument_list|()
return|;
block|}
specifier|public
name|int
name|getSQLStateType
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|locatorsUpdateCopy
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|supportsStatementPooling
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|RowIdLifetime
name|getRowIdLifetime
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|ResultSet
name|getSchemas
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|supportsStoredFunctionsUsingCallSyntax
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|autoCommitFailureClosesAllResultSets
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
specifier|public
name|ResultSet
name|getClientInfoProperties
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getFunctions
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|functionNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getFunctionColumns
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|functionNamePattern
parameter_list|,
name|String
name|columnNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|ResultSet
name|getPseudoColumns
parameter_list|(
name|String
name|catalog
parameter_list|,
name|String
name|schemaPattern
parameter_list|,
name|String
name|tableNamePattern
parameter_list|,
name|String
name|columnNamePattern
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|createEmptyResultSet
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|generatedKeyAlwaysReturned
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
name|connection
operator|.
name|helper
operator|.
name|todo
argument_list|()
throw|;
block|}
comment|// implement Wrapper
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
if|if
condition|(
name|iface
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
condition|)
block|{
return|return
name|iface
operator|.
name|cast
argument_list|(
name|this
argument_list|)
return|;
block|}
throw|throw
name|connection
operator|.
name|helper
operator|.
name|createException
argument_list|(
literal|"does not implement '"
operator|+
name|iface
operator|+
literal|"'"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|iface
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
return|;
block|}
comment|// Helpers
specifier|private
specifier|static
name|IteratorResultSet
name|createEmptyResultSet
parameter_list|()
block|{
return|return
name|IteratorResultSet
operator|.
name|create
argument_list|(
name|Collections
operator|.
name|EMPTY_LIST
operator|.
name|iterator
argument_list|()
argument_list|,
operator|new
name|AbstractIterResultSet
operator|.
name|FieldGetter
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End OptiqDatabaseMetaData.java
end_comment

end_unit

