begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link ResultSetMetaData}  * for the OPTIQ engine.  */
end_comment

begin_class
class|class
name|OptiqResultSetMetaData
implements|implements
name|ResultSetMetaData
block|{
specifier|final
name|OptiqStatement
name|statement
decl_stmt|;
specifier|final
name|Object
name|query
decl_stmt|;
specifier|final
name|List
argument_list|<
name|ColumnMetaData
argument_list|>
name|columnMetaDataList
decl_stmt|;
name|OptiqResultSetMetaData
parameter_list|(
name|OptiqStatement
name|statement
parameter_list|,
name|Object
name|query
parameter_list|,
name|List
argument_list|<
name|ColumnMetaData
argument_list|>
name|columnMetaDataList
parameter_list|)
block|{
name|this
operator|.
name|statement
operator|=
name|statement
expr_stmt|;
name|this
operator|.
name|query
operator|=
name|query
expr_stmt|;
name|this
operator|.
name|columnMetaDataList
operator|=
name|columnMetaDataList
expr_stmt|;
block|}
comment|// implement ResultSetMetaData
specifier|public
name|int
name|getColumnCount
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|columnMetaDataList
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isAutoIncrement
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|autoIncrement
return|;
block|}
specifier|private
name|ColumnMetaData
name|getColumnMetaData
parameter_list|(
name|int
name|column
parameter_list|)
block|{
return|return
name|columnMetaDataList
operator|.
name|get
argument_list|(
name|column
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isCaseSensitive
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|caseSensitive
return|;
block|}
specifier|public
name|boolean
name|isSearchable
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|searchable
return|;
block|}
specifier|public
name|boolean
name|isCurrency
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|currency
return|;
block|}
specifier|public
name|int
name|isNullable
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|nullable
return|;
block|}
specifier|public
name|boolean
name|isSigned
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|signed
return|;
block|}
specifier|public
name|int
name|getColumnDisplaySize
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|displaySize
return|;
block|}
specifier|public
name|String
name|getColumnLabel
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|label
return|;
block|}
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|columnName
return|;
block|}
specifier|public
name|String
name|getSchemaName
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|schemaName
return|;
block|}
specifier|public
name|int
name|getPrecision
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|precision
return|;
block|}
specifier|public
name|int
name|getScale
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|scale
return|;
block|}
specifier|public
name|String
name|getTableName
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|tableName
return|;
block|}
specifier|public
name|String
name|getCatalogName
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|catalogName
return|;
block|}
specifier|public
name|int
name|getColumnType
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|type
return|;
block|}
specifier|public
name|String
name|getColumnTypeName
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|typeName
return|;
block|}
specifier|public
name|boolean
name|isReadOnly
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|readOnly
return|;
block|}
specifier|public
name|boolean
name|isWritable
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|writable
return|;
block|}
specifier|public
name|boolean
name|isDefinitelyWritable
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|definitelyWritable
return|;
block|}
specifier|public
name|String
name|getColumnClassName
parameter_list|(
name|int
name|column
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnMetaData
argument_list|(
name|column
argument_list|)
operator|.
name|columnClassName
return|;
block|}
comment|// implement Wrapper
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
if|if
condition|(
name|iface
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
condition|)
block|{
return|return
name|iface
operator|.
name|cast
argument_list|(
name|this
argument_list|)
return|;
block|}
throw|throw
name|OptiqConnectionImpl
operator|.
name|HELPER
operator|.
name|createException
argument_list|(
literal|"does not implement '"
operator|+
name|iface
operator|+
literal|"'"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|iface
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
return|;
block|}
class|class
name|ColumnMetaData
block|{
specifier|final
name|boolean
name|autoIncrement
decl_stmt|;
specifier|final
name|boolean
name|caseSensitive
decl_stmt|;
specifier|final
name|boolean
name|searchable
decl_stmt|;
specifier|final
name|boolean
name|currency
decl_stmt|;
specifier|final
name|int
name|nullable
decl_stmt|;
specifier|final
name|boolean
name|signed
decl_stmt|;
specifier|final
name|int
name|displaySize
decl_stmt|;
specifier|final
name|String
name|label
decl_stmt|;
specifier|final
name|String
name|columnName
decl_stmt|;
specifier|final
name|String
name|schemaName
decl_stmt|;
specifier|final
name|int
name|precision
decl_stmt|;
specifier|final
name|int
name|scale
decl_stmt|;
specifier|final
name|String
name|tableName
decl_stmt|;
specifier|final
name|String
name|catalogName
decl_stmt|;
specifier|final
name|int
name|type
decl_stmt|;
specifier|final
name|String
name|typeName
decl_stmt|;
specifier|final
name|boolean
name|readOnly
decl_stmt|;
specifier|final
name|boolean
name|writable
decl_stmt|;
specifier|final
name|boolean
name|definitelyWritable
decl_stmt|;
specifier|final
name|String
name|columnClassName
decl_stmt|;
specifier|public
name|ColumnMetaData
parameter_list|(
name|boolean
name|autoIncrement
parameter_list|,
name|boolean
name|caseSensitive
parameter_list|,
name|boolean
name|searchable
parameter_list|,
name|boolean
name|currency
parameter_list|,
name|int
name|nullable
parameter_list|,
name|boolean
name|signed
parameter_list|,
name|int
name|displaySize
parameter_list|,
name|String
name|label
parameter_list|,
name|String
name|columnName
parameter_list|,
name|String
name|schemaName
parameter_list|,
name|int
name|precision
parameter_list|,
name|int
name|scale
parameter_list|,
name|String
name|tableName
parameter_list|,
name|String
name|catalogName
parameter_list|,
name|int
name|type
parameter_list|,
name|String
name|typeName
parameter_list|,
name|boolean
name|readOnly
parameter_list|,
name|boolean
name|writable
parameter_list|,
name|boolean
name|definitelyWritable
parameter_list|,
name|String
name|columnClassName
parameter_list|)
block|{
name|this
operator|.
name|autoIncrement
operator|=
name|autoIncrement
expr_stmt|;
name|this
operator|.
name|caseSensitive
operator|=
name|caseSensitive
expr_stmt|;
name|this
operator|.
name|searchable
operator|=
name|searchable
expr_stmt|;
name|this
operator|.
name|currency
operator|=
name|currency
expr_stmt|;
name|this
operator|.
name|nullable
operator|=
name|nullable
expr_stmt|;
name|this
operator|.
name|signed
operator|=
name|signed
expr_stmt|;
name|this
operator|.
name|displaySize
operator|=
name|displaySize
expr_stmt|;
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
name|this
operator|.
name|columnName
operator|=
name|columnName
expr_stmt|;
name|this
operator|.
name|schemaName
operator|=
name|schemaName
expr_stmt|;
name|this
operator|.
name|precision
operator|=
name|precision
expr_stmt|;
name|this
operator|.
name|scale
operator|=
name|scale
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|catalogName
operator|=
name|catalogName
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|typeName
operator|=
name|typeName
expr_stmt|;
name|this
operator|.
name|readOnly
operator|=
name|readOnly
expr_stmt|;
name|this
operator|.
name|writable
operator|=
name|writable
expr_stmt|;
name|this
operator|.
name|definitelyWritable
operator|=
name|definitelyWritable
expr_stmt|;
name|this
operator|.
name|columnClassName
operator|=
name|columnClassName
expr_stmt|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End OptiqResultSetMetaData.java
end_comment

end_unit

