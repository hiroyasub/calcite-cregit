begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|impl
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|QueryProvider
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|Queryable
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|sql
operator|.
name|SqlDialect
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link DataContext} for a {@link JdbcQueryProvider}.  *  * @author jhyde  */
end_comment

begin_class
specifier|public
class|class
name|JdbcDataContext
implements|implements
name|DataContext
block|{
specifier|final
name|DataSource
name|dataSource
decl_stmt|;
specifier|final
name|QueryProvider
name|queryProvider
decl_stmt|;
specifier|final
name|SqlDialect
name|dialect
decl_stmt|;
comment|/** Creates a JdbcDataContext. */
specifier|public
name|JdbcDataContext
parameter_list|(
name|QueryProvider
name|queryProvider
parameter_list|,
name|DataSource
name|dataSource
parameter_list|,
name|SqlDialect
name|dialect
parameter_list|)
block|{
name|this
operator|.
name|dataSource
operator|=
name|dataSource
expr_stmt|;
name|this
operator|.
name|queryProvider
operator|=
name|queryProvider
expr_stmt|;
name|this
operator|.
name|dialect
operator|=
name|dialect
expr_stmt|;
block|}
comment|/** Creates JdbcDataContext using an implicit SQL dialect. */
specifier|public
name|JdbcDataContext
parameter_list|(
name|DataSource
name|dataSource
parameter_list|,
name|QueryProvider
name|queryProvider
parameter_list|)
block|{
name|this
argument_list|(
name|queryProvider
argument_list|,
name|dataSource
argument_list|,
name|JdbcUtils
operator|.
name|DialectPool
operator|.
name|INSTANCE
operator|.
name|get
argument_list|(
name|dataSource
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Queryable
name|getTable
parameter_list|(
name|String
name|name
parameter_list|,
name|Type
name|elementType
parameter_list|)
block|{
return|return
operator|new
name|JdbcTableQueryable
argument_list|(
name|elementType
argument_list|,
name|this
argument_list|,
name|name
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Queryable
argument_list|<
name|T
argument_list|>
name|getTable
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|elementType
parameter_list|)
block|{
return|return
name|getTable
argument_list|(
name|name
argument_list|,
operator|(
name|Type
operator|)
name|elementType
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End JdbcDataContext.java
end_comment

end_unit

