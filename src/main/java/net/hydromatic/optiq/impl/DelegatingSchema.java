begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|expressions
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|Member
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link net.hydromatic.optiq.Schema} that delegates to an  * underlying schema.  *  * @author jhyde  */
end_comment

begin_class
specifier|public
class|class
name|DelegatingSchema
implements|implements
name|Schema
block|{
specifier|protected
specifier|final
name|Schema
name|schema
decl_stmt|;
comment|/**      * Creates a DelegatingSchema.      *      * @param schema Underlying schema      */
specifier|public
name|DelegatingSchema
parameter_list|(
name|Schema
name|schema
parameter_list|)
block|{
name|this
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Member
argument_list|>
name|getMembers
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|schema
operator|.
name|getMembers
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|Expression
name|getMemberExpression
parameter_list|(
name|Expression
name|schemaExpression
parameter_list|,
name|Member
name|member
parameter_list|,
name|List
argument_list|<
name|Expression
argument_list|>
name|arguments
parameter_list|)
block|{
return|return
name|schema
operator|.
name|getMemberExpression
argument_list|(
name|schemaExpression
argument_list|,
name|member
argument_list|,
name|arguments
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getSubSchemaInstance
parameter_list|(
name|Object
name|schemaInstance
parameter_list|,
name|String
name|subSchemaName
parameter_list|,
name|Schema
name|subSchema
parameter_list|)
block|{
return|return
name|schema
operator|.
name|getSubSchemaInstance
argument_list|(
name|schemaInstance
argument_list|,
literal|null
argument_list|,
name|subSchema
argument_list|)
return|;
block|}
specifier|public
name|Schema
name|getSubSchema
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|schema
operator|.
name|getSubSchema
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|Expression
name|getSubSchemaExpression
parameter_list|(
name|Expression
name|schemaExpression
parameter_list|,
name|Schema
name|schema
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
name|schema
operator|.
name|getSubSchemaExpression
argument_list|(
name|schemaExpression
argument_list|,
name|schema
argument_list|,
name|name
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End DelegatingSchema.java
end_comment

end_unit

