begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* Generated By:JavaCC: Do not edit this line. SqlParserImplConstants.java */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|sql
operator|.
name|parser
operator|.
name|impl
package|;
end_package

begin_comment
comment|/**  * Token literal values and constants.  * Generated by org.javacc.parser.OtherFilesGen#start()  */
end_comment

begin_interface
specifier|public
interface|interface
name|SqlParserImplConstants
block|{
comment|/** End of File. */
name|int
name|EOF
init|=
literal|0
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|A
init|=
literal|1
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ABS
init|=
literal|2
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ABSOLUTE
init|=
literal|3
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ACTION
init|=
literal|4
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ADA
init|=
literal|5
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ADD
init|=
literal|6
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ADMIN
init|=
literal|7
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|AFTER
init|=
literal|8
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ALL
init|=
literal|9
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ALLOCATE
init|=
literal|10
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ALLOW
init|=
literal|11
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ALWAYS
init|=
literal|12
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ALTER
init|=
literal|13
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|AND
init|=
literal|14
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ANY
init|=
literal|15
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ARE
init|=
literal|16
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ARRAY
init|=
literal|17
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|AS
init|=
literal|18
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ASC
init|=
literal|19
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ASENSITIVE
init|=
literal|20
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ASSERTION
init|=
literal|21
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ASSIGNMENT
init|=
literal|22
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ASYMMETRIC
init|=
literal|23
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|AT
init|=
literal|24
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ATOMIC
init|=
literal|25
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ATTRIBUTE
init|=
literal|26
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ATTRIBUTES
init|=
literal|27
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|AUTHORIZATION
init|=
literal|28
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|AVG
init|=
literal|29
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BEFORE
init|=
literal|30
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BEGIN
init|=
literal|31
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BERNOULLI
init|=
literal|32
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BETWEEN
init|=
literal|33
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BIGINT
init|=
literal|34
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BINARY
init|=
literal|35
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BIT
init|=
literal|36
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BLOB
init|=
literal|37
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BOOLEAN
init|=
literal|38
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BOTH
init|=
literal|39
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BREADTH
init|=
literal|40
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BY
init|=
literal|41
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|C
init|=
literal|42
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CALL
init|=
literal|43
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CALLED
init|=
literal|44
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CARDINALITY
init|=
literal|45
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CASCADE
init|=
literal|46
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CASCADED
init|=
literal|47
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CASE
init|=
literal|48
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CAST
init|=
literal|49
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CATALOG
init|=
literal|50
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CATALOG_NAME
init|=
literal|51
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CEIL
init|=
literal|52
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CEILING
init|=
literal|53
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHAIN
init|=
literal|54
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHAR
init|=
literal|55
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHAR_LENGTH
init|=
literal|56
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTER
init|=
literal|57
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTER_LENGTH
init|=
literal|58
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTER_SET_CATALOG
init|=
literal|59
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTER_SET_NAME
init|=
literal|60
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTER_SET_SCHEMA
init|=
literal|61
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTERISTICS
init|=
literal|62
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARACTERS
init|=
literal|63
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHECK
init|=
literal|64
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CLASS_ORIGIN
init|=
literal|65
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CLOB
init|=
literal|66
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CLOSE
init|=
literal|67
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COALESCE
init|=
literal|68
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COBOL
init|=
literal|69
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLATE
init|=
literal|70
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLATION
init|=
literal|71
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLATION_CATALOG
init|=
literal|72
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLATION_NAME
init|=
literal|73
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLATION_SCHEMA
init|=
literal|74
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLECT
init|=
literal|75
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLUMN
init|=
literal|76
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLUMN_NAME
init|=
literal|77
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COMMAND_FUNCTION
init|=
literal|78
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COMMAND_FUNCTION_CODE
init|=
literal|79
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COMMIT
init|=
literal|80
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COMMITTED
init|=
literal|81
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONDITION
init|=
literal|82
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONDITION_NUMBER
init|=
literal|83
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONNECT
init|=
literal|84
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONNECTION
init|=
literal|85
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONNECTION_NAME
init|=
literal|86
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONSTRAINT
init|=
literal|87
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONSTRAINT_CATALOG
init|=
literal|88
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONSTRAINT_NAME
init|=
literal|89
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONSTRAINT_SCHEMA
init|=
literal|90
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONSTRAINTS
init|=
literal|91
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONSTRUCTOR
init|=
literal|92
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONTAINS
init|=
literal|93
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONVERT
init|=
literal|94
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONTINUE
init|=
literal|95
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CORR
init|=
literal|96
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CORRESPONDING
init|=
literal|97
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COUNT
init|=
literal|98
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COVAR_POP
init|=
literal|99
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COVAR_SAMP
init|=
literal|100
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CREATE
init|=
literal|101
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CROSS
init|=
literal|102
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CUBE
init|=
literal|103
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CUME_DIST
init|=
literal|104
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT
init|=
literal|105
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_CATALOG
init|=
literal|106
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_DATE
init|=
literal|107
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_DEFAULT_TRANSFORM_GROUP
init|=
literal|108
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_PATH
init|=
literal|109
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_ROLE
init|=
literal|110
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_SCHEMA
init|=
literal|111
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_TIME
init|=
literal|112
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_TIMESTAMP
init|=
literal|113
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_TRANSFORM_GROUP_FOR_TYPE
init|=
literal|114
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURRENT_USER
init|=
literal|115
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURSOR
init|=
literal|116
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CURSOR_NAME
init|=
literal|117
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CYCLE
init|=
literal|118
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DATA
init|=
literal|119
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DATE
init|=
literal|120
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DATETIME_INTERVAL_CODE
init|=
literal|121
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DATETIME_INTERVAL_PRECISION
init|=
literal|122
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DAY
init|=
literal|123
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEALLOCATE
init|=
literal|124
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEC
init|=
literal|125
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DECIMAL
init|=
literal|126
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DECLARE
init|=
literal|127
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEFAULT_KW
init|=
literal|128
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEFAULTS
init|=
literal|129
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEFERRABLE
init|=
literal|130
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEFERRED
init|=
literal|131
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEFINED
init|=
literal|132
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEFINER
init|=
literal|133
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEGREE
init|=
literal|134
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DELETE
init|=
literal|135
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DENSE_RANK
init|=
literal|136
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEPTH
init|=
literal|137
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DEREF
init|=
literal|138
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DERIVED
init|=
literal|139
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DESCRIBE
init|=
literal|140
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DESC
init|=
literal|141
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DESCRIPTION
init|=
literal|142
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DESCRIPTOR
init|=
literal|143
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DETERMINISTIC
init|=
literal|144
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DIAGNOSTICS
init|=
literal|145
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DISALLOW
init|=
literal|146
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DISCONNECT
init|=
literal|147
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DISPATCH
init|=
literal|148
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DISTINCT
init|=
literal|149
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DOMAIN
init|=
literal|150
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DOUBLE
init|=
literal|151
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DROP
init|=
literal|152
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DYNAMIC
init|=
literal|153
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DYNAMIC_FUNCTION
init|=
literal|154
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DYNAMIC_FUNCTION_CODE
init|=
literal|155
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EACH
init|=
literal|156
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ELEMENT
init|=
literal|157
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ELSE
init|=
literal|158
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|END
init|=
literal|159
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|END_EXEC
init|=
literal|160
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EQUALS
init|=
literal|161
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ESCAPE
init|=
literal|162
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EVERY
init|=
literal|163
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXCEPT
init|=
literal|164
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXCEPTION
init|=
literal|165
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXCLUDE
init|=
literal|166
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXCLUDING
init|=
literal|167
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXEC
init|=
literal|168
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXECUTE
init|=
literal|169
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXISTS
init|=
literal|170
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXP
init|=
literal|171
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXPLAIN
init|=
literal|172
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXTERNAL
init|=
literal|173
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXTRACT
init|=
literal|174
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FALSE
init|=
literal|175
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FETCH
init|=
literal|176
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FILTER
init|=
literal|177
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FINAL
init|=
literal|178
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FIRST
init|=
literal|179
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FIRST_VALUE
init|=
literal|180
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FLOAT
init|=
literal|181
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FLOOR
init|=
literal|182
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FOLLOWING
init|=
literal|183
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FOR
init|=
literal|184
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FOREIGN
init|=
literal|185
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FORTRAN
init|=
literal|186
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FOUND
init|=
literal|187
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FREE
init|=
literal|188
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FROM
init|=
literal|189
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FULL
init|=
literal|190
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FUNCTION
init|=
literal|191
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FUSION
init|=
literal|192
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|G
init|=
literal|193
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GENERAL
init|=
literal|194
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GENERATED
init|=
literal|195
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GET
init|=
literal|196
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GLOBAL
init|=
literal|197
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GO
init|=
literal|198
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GOTO
init|=
literal|199
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GRANT
init|=
literal|200
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GRANTED
init|=
literal|201
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GROUP
init|=
literal|202
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GROUPING
init|=
literal|203
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|HAVING
init|=
literal|204
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|HIERARCHY
init|=
literal|205
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|HOLD
init|=
literal|206
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|HOUR
init|=
literal|207
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IDENTITY
init|=
literal|208
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IMMEDIATE
init|=
literal|209
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IMPLEMENTATION
init|=
literal|210
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IMPORT
init|=
literal|211
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IN
init|=
literal|212
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INDICATOR
init|=
literal|213
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INCLUDING
init|=
literal|214
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INCREMENT
init|=
literal|215
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INITIALLY
init|=
literal|216
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INNER
init|=
literal|217
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INOUT
init|=
literal|218
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INPUT
init|=
literal|219
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INSENSITIVE
init|=
literal|220
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INSERT
init|=
literal|221
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INSTANCE
init|=
literal|222
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INSTANTIABLE
init|=
literal|223
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INT
init|=
literal|224
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INTEGER
init|=
literal|225
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INTERSECT
init|=
literal|226
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INTERSECTION
init|=
literal|227
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INTERVAL
init|=
literal|228
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INTO
init|=
literal|229
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|INVOKER
init|=
literal|230
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IS
init|=
literal|231
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ISOLATION
init|=
literal|232
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|JAVA
init|=
literal|233
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|JOIN
init|=
literal|234
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|K
init|=
literal|235
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|KEY
init|=
literal|236
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|KEY_MEMBER
init|=
literal|237
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|KEY_TYPE
init|=
literal|238
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LABEL
init|=
literal|239
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LANGUAGE
init|=
literal|240
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LARGE
init|=
literal|241
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LAST
init|=
literal|242
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LAST_VALUE
init|=
literal|243
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LATERAL
init|=
literal|244
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LEADING
init|=
literal|245
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LEFT
init|=
literal|246
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LENGTH
init|=
literal|247
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LEVEL
init|=
literal|248
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LIBRARY
init|=
literal|249
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LIKE
init|=
literal|250
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LIMIT
init|=
literal|251
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LN
init|=
literal|252
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LOCAL
init|=
literal|253
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LOCALTIME
init|=
literal|254
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LOCALTIMESTAMP
init|=
literal|255
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LOCATOR
init|=
literal|256
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LOWER
init|=
literal|257
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|M
init|=
literal|258
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MAP
init|=
literal|259
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MATCH
init|=
literal|260
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MATCHED
init|=
literal|261
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MAX
init|=
literal|262
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MAXVALUE
init|=
literal|263
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MEMBER
init|=
literal|264
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MERGE
init|=
literal|265
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MESSAGE_LENGTH
init|=
literal|266
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MESSAGE_OCTET_LENGTH
init|=
literal|267
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MESSAGE_TEXT
init|=
literal|268
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|METHOD
init|=
literal|269
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MIN
init|=
literal|270
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MINUTE
init|=
literal|271
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MINVALUE
init|=
literal|272
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MOD
init|=
literal|273
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MODIFIES
init|=
literal|274
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MODULE
init|=
literal|275
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MONTH
init|=
literal|276
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MORE_KW
init|=
literal|277
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MULTISET
init|=
literal|278
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MUMPS
init|=
literal|279
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NAME
init|=
literal|280
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NAMES
init|=
literal|281
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NATIONAL
init|=
literal|282
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NATURAL
init|=
literal|283
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NCHAR
init|=
literal|284
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NCLOB
init|=
literal|285
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NESTING
init|=
literal|286
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NEW
init|=
literal|287
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NEXT
init|=
literal|288
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NO
init|=
literal|289
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NONE
init|=
literal|290
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NORMALIZE
init|=
literal|291
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NORMALIZED
init|=
literal|292
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NOT
init|=
literal|293
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NULL
init|=
literal|294
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NULLABLE
init|=
literal|295
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NULLIF
init|=
literal|296
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NULLS
init|=
literal|297
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NUMBER
init|=
literal|298
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NUMERIC
init|=
literal|299
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OBJECT
init|=
literal|300
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OCTET_LENGTH
init|=
literal|301
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OCTETS
init|=
literal|302
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OF
init|=
literal|303
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OLD
init|=
literal|304
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ON
init|=
literal|305
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ONLY
init|=
literal|306
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OPEN
init|=
literal|307
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OPTION
init|=
literal|308
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OPTIONS
init|=
literal|309
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OR
init|=
literal|310
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ORDER
init|=
literal|311
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ORDERING
init|=
literal|312
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ORDINALITY
init|=
literal|313
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OTHERS
init|=
literal|314
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OUT
init|=
literal|315
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OUTER
init|=
literal|316
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OUTPUT
init|=
literal|317
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OVER
init|=
literal|318
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OVERLAPS
init|=
literal|319
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OVERLAY
init|=
literal|320
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|OVERRIDING
init|=
literal|321
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PAD
init|=
literal|322
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER
init|=
literal|323
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER_MODE
init|=
literal|324
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER_NAME
init|=
literal|325
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER_ORDINAL_POSITION
init|=
literal|326
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER_SPECIFIC_CATALOG
init|=
literal|327
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER_SPECIFIC_NAME
init|=
literal|328
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARAMETER_SPECIFIC_SCHEMA
init|=
literal|329
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARTIAL
init|=
literal|330
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PARTITION
init|=
literal|331
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PASCAL
init|=
literal|332
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PASSTHROUGH
init|=
literal|333
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PATH
init|=
literal|334
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PERCENT_RANK
init|=
literal|335
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PERCENTILE_CONT
init|=
literal|336
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PERCENTILE_DISC
init|=
literal|337
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PLACING
init|=
literal|338
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PLAN
init|=
literal|339
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PLI
init|=
literal|340
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|POSITION
init|=
literal|341
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|POWER
init|=
literal|342
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PRECEDING
init|=
literal|343
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PRECISION
init|=
literal|344
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PREPARE
init|=
literal|345
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PRESERVE
init|=
literal|346
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PRIMARY
init|=
literal|347
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PRIOR
init|=
literal|348
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PRIVILEGES
init|=
literal|349
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PROCEDURE
init|=
literal|350
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PUBLIC
init|=
literal|351
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RANGE
init|=
literal|352
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RANK
init|=
literal|353
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|READ
init|=
literal|354
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|READS
init|=
literal|355
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REAL
init|=
literal|356
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RECURSIVE
init|=
literal|357
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REF
init|=
literal|358
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REFERENCES
init|=
literal|359
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REFERENCING
init|=
literal|360
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_AVGX
init|=
literal|361
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_AVGY
init|=
literal|362
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_COUNT
init|=
literal|363
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_INTERCEPT
init|=
literal|364
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_R2
init|=
literal|365
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_SLOPE
init|=
literal|366
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_SXX
init|=
literal|367
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REGR_SXY
init|=
literal|368
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RELATIVE
init|=
literal|369
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RELEASE
init|=
literal|370
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REPEATABLE
init|=
literal|371
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RESTART
init|=
literal|372
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RESTRICT
init|=
literal|373
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RESULT
init|=
literal|374
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RETURN
init|=
literal|375
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RETURNED_CARDINALITY
init|=
literal|376
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RETURNED_LENGTH
init|=
literal|377
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RETURNED_OCTET_LENGTH
init|=
literal|378
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RETURNED_SQLSTATE
init|=
literal|379
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RETURNS
init|=
literal|380
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|REVOKE
init|=
literal|381
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RIGHT
init|=
literal|382
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROLE
init|=
literal|383
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROLLBACK
init|=
literal|384
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROLLUP
init|=
literal|385
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROUTINE
init|=
literal|386
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROUTINE_CATALOG
init|=
literal|387
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROUTINE_NAME
init|=
literal|388
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROUTINE_SCHEMA
init|=
literal|389
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROW
init|=
literal|390
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROW_COUNT
init|=
literal|391
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROW_NUMBER
init|=
literal|392
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ROWS
init|=
literal|393
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SAVEPOINT
init|=
literal|394
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCALE
init|=
literal|395
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCHEMA
init|=
literal|396
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCHEMA_NAME
init|=
literal|397
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCOPE
init|=
literal|398
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCOPE_CATALOGS
init|=
literal|399
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCOPE_NAME
init|=
literal|400
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCOPE_SCHEMA
init|=
literal|401
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SCROLL
init|=
literal|402
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SEARCH
init|=
literal|403
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SECOND
init|=
literal|404
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SECTION
init|=
literal|405
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SECURITY
init|=
literal|406
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SELECT
init|=
literal|407
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SELF
init|=
literal|408
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SENSITIVE
init|=
literal|409
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SEQUENCE
init|=
literal|410
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SERIALIZABLE
init|=
literal|411
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SERVER
init|=
literal|412
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SERVER_NAME
init|=
literal|413
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SESSION
init|=
literal|414
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SESSION_USER
init|=
literal|415
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SET
init|=
literal|416
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SETS
init|=
literal|417
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SIMILAR
init|=
literal|418
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SIMPLE
init|=
literal|419
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SIZE
init|=
literal|420
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SMALLINT
init|=
literal|421
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SOME
init|=
literal|422
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SOURCE
init|=
literal|423
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SPACE
init|=
literal|424
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SPECIFIC
init|=
literal|425
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SPECIFIC_NAME
init|=
literal|426
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SPECIFICTYPE
init|=
literal|427
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SQL
init|=
literal|428
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SQLEXCEPTION
init|=
literal|429
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SQLSTATE
init|=
literal|430
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SQLWARNING
init|=
literal|431
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SQRT
init|=
literal|432
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|START
init|=
literal|433
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STATE
init|=
literal|434
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STATEMENT
init|=
literal|435
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STATIC
init|=
literal|436
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STDDEV_POP
init|=
literal|437
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STDDEV_SAMP
init|=
literal|438
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STRUCTURE
init|=
literal|439
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STYLE
init|=
literal|440
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SUBCLASS_ORIGIN
init|=
literal|441
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SUBMULTISET
init|=
literal|442
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SUBSTRING
init|=
literal|443
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SUBSTITUTE
init|=
literal|444
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SUM
init|=
literal|445
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SYMMETRIC
init|=
literal|446
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SYSTEM
init|=
literal|447
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SYSTEM_USER
init|=
literal|448
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TABLE
init|=
literal|449
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TABLE_NAME
init|=
literal|450
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TABLESAMPLE
init|=
literal|451
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TEMPORARY
init|=
literal|452
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|THEN
init|=
literal|453
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TIES
init|=
literal|454
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TIME
init|=
literal|455
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TIMESTAMP
init|=
literal|456
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TIMEZONE_HOUR
init|=
literal|457
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TIMEZONE_MINUTE
init|=
literal|458
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TINYINT
init|=
literal|459
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TO
init|=
literal|460
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TOP_LEVEL_COUNT
init|=
literal|461
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRAILING
init|=
literal|462
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSACTION
init|=
literal|463
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSACTIONS_ACTIVE
init|=
literal|464
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSACTIONS_COMMITTED
init|=
literal|465
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSACTIONS_ROLLED_BACK
init|=
literal|466
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSFORM
init|=
literal|467
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSFORMS
init|=
literal|468
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSLATE
init|=
literal|469
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRANSLATION
init|=
literal|470
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TREAT
init|=
literal|471
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRIGGER
init|=
literal|472
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRIGGER_CATALOG
init|=
literal|473
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRIGGER_NAME
init|=
literal|474
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRIGGER_SCHEMA
init|=
literal|475
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRIM
init|=
literal|476
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TRUE
init|=
literal|477
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|TYPE
init|=
literal|478
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UESCAPE
init|=
literal|479
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNBOUNDED
init|=
literal|480
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNCOMMITTED
init|=
literal|481
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNDER
init|=
literal|482
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNION
init|=
literal|483
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNIQUE
init|=
literal|484
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNKNOWN
init|=
literal|485
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNNAMED
init|=
literal|486
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNNEST
init|=
literal|487
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UPDATE
init|=
literal|488
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UPPER
init|=
literal|489
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USAGE
init|=
literal|490
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USER
init|=
literal|491
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USER_DEFINED_TYPE_CATALOG
init|=
literal|492
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USER_DEFINED_TYPE_CODE
init|=
literal|493
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USER_DEFINED_TYPE_NAME
init|=
literal|494
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USER_DEFINED_TYPE_SCHEMA
init|=
literal|495
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|USING
init|=
literal|496
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VALUE
init|=
literal|497
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VALUES
init|=
literal|498
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VAR_POP
init|=
literal|499
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VAR_SAMP
init|=
literal|500
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VARCHAR
init|=
literal|501
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VARBINARY
init|=
literal|502
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VARYING
init|=
literal|503
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VERSION
init|=
literal|504
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|VIEW
init|=
literal|505
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WHEN
init|=
literal|506
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WHENEVER
init|=
literal|507
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WHERE
init|=
literal|508
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WIDTH_BUCKET
init|=
literal|509
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WINDOW
init|=
literal|510
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WITH
init|=
literal|511
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WITHIN
init|=
literal|512
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WITHOUT
init|=
literal|513
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WORK
init|=
literal|514
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WRAPPER
init|=
literal|515
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WRITE
init|=
literal|516
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|XML
init|=
literal|517
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|YEAR
init|=
literal|518
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|ZONE
init|=
literal|519
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNSIGNED_INTEGER_LITERAL
init|=
literal|520
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|APPROX_NUMERIC_LITERAL
init|=
literal|521
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DECIMAL_NUMERIC_LITERAL
init|=
literal|522
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EXPONENT
init|=
literal|523
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|HEXDIGIT
init|=
literal|524
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|WHITESPACE
init|=
literal|525
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BINARY_STRING_LITERAL
init|=
literal|526
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|QUOTED_STRING
init|=
literal|527
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PREFIXED_STRING_LITERAL
init|=
literal|528
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNICODE_STRING_LITERAL
init|=
literal|529
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CHARSETNAME
init|=
literal|530
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNICODE_QUOTED_ESCAPE_CHAR
init|=
literal|531
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LPAREN
init|=
literal|532
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RPAREN
init|=
literal|533
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LBRACE_D
init|=
literal|534
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LBRACE_T
init|=
literal|535
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LBRACE_TS
init|=
literal|536
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LBRACE_FN
init|=
literal|537
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LBRACE
init|=
literal|538
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RBRACE
init|=
literal|539
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LBRACKET
init|=
literal|540
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|RBRACKET
init|=
literal|541
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SEMICOLON
init|=
literal|542
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DOT
init|=
literal|543
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COMMA
init|=
literal|544
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|EQ
init|=
literal|545
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GT
init|=
literal|546
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LT
init|=
literal|547
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|HOOK
init|=
literal|548
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLON
init|=
literal|549
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LE
init|=
literal|550
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|GE
init|=
literal|551
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|NE
init|=
literal|552
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|PLUS
init|=
literal|553
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MINUS
init|=
literal|554
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|STAR
init|=
literal|555
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SLASH
init|=
literal|556
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|CONCAT
init|=
literal|557
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DOUBLE_PERIOD
init|=
literal|558
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|QUOTE
init|=
literal|559
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DOUBLE_QUOTE
init|=
literal|560
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|SINGLE_LINE_COMMENT
init|=
literal|570
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|FORMAL_COMMENT
init|=
literal|571
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|MULTI_LINE_COMMENT
init|=
literal|572
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|COLLATION_ID
init|=
literal|574
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|IDENTIFIER
init|=
literal|575
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|QUOTED_IDENTIFIER
init|=
literal|576
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|UNICODE_QUOTED_IDENTIFIER
init|=
literal|577
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|LETTER
init|=
literal|578
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|DIGIT
init|=
literal|579
decl_stmt|;
comment|/** RegularExpression Id. */
name|int
name|BEL
init|=
literal|580
decl_stmt|;
comment|/** Lexical state. */
name|int
name|DEFAULT
init|=
literal|0
decl_stmt|;
comment|/** Lexical state. */
name|int
name|IN_SINGLE_LINE_COMMENT
init|=
literal|1
decl_stmt|;
comment|/** Lexical state. */
name|int
name|IN_FORMAL_COMMENT
init|=
literal|2
decl_stmt|;
comment|/** Lexical state. */
name|int
name|IN_MULTI_LINE_COMMENT
init|=
literal|3
decl_stmt|;
comment|/** Literal token values. */
name|String
index|[]
name|tokenImage
init|=
block|{
literal|"<EOF>"
block|,
literal|"\"A\""
block|,
literal|"\"ABS\""
block|,
literal|"\"ABSOLUTE\""
block|,
literal|"\"ACTION\""
block|,
literal|"\"ADA\""
block|,
literal|"\"ADD\""
block|,
literal|"\"ADMIN\""
block|,
literal|"\"AFTER\""
block|,
literal|"\"ALL\""
block|,
literal|"\"ALLOCATE\""
block|,
literal|"\"ALLOW\""
block|,
literal|"\"ALWAYS\""
block|,
literal|"\"ALTER\""
block|,
literal|"\"AND\""
block|,
literal|"\"ANY\""
block|,
literal|"\"ARE\""
block|,
literal|"\"ARRAY\""
block|,
literal|"\"AS\""
block|,
literal|"\"ASC\""
block|,
literal|"\"ASENSITIVE\""
block|,
literal|"\"ASSERTION\""
block|,
literal|"\"ASSIGNMENT\""
block|,
literal|"\"ASYMMETRIC\""
block|,
literal|"\"AT\""
block|,
literal|"\"ATOMIC\""
block|,
literal|"\"ATTRIBUTE\""
block|,
literal|"\"ATTRIBUTES\""
block|,
literal|"\"AUTHORIZATION\""
block|,
literal|"\"AVG\""
block|,
literal|"\"BEFORE\""
block|,
literal|"\"BEGIN\""
block|,
literal|"\"BERNOULLI\""
block|,
literal|"\"BETWEEN\""
block|,
literal|"\"BIGINT\""
block|,
literal|"\"BINARY\""
block|,
literal|"\"BIT\""
block|,
literal|"\"BLOB\""
block|,
literal|"\"BOOLEAN\""
block|,
literal|"\"BOTH\""
block|,
literal|"\"BREADTH\""
block|,
literal|"\"BY\""
block|,
literal|"\"C\""
block|,
literal|"\"CALL\""
block|,
literal|"\"CALLED\""
block|,
literal|"\"CARDINALITY\""
block|,
literal|"\"CASCADE\""
block|,
literal|"\"CASCADED\""
block|,
literal|"\"CASE\""
block|,
literal|"\"CAST\""
block|,
literal|"\"CATALOG\""
block|,
literal|"\"CATALOG_NAME\""
block|,
literal|"\"CEIL\""
block|,
literal|"\"CEILING\""
block|,
literal|"\"CHAIN\""
block|,
literal|"\"CHAR\""
block|,
literal|"\"CHAR_LENGTH\""
block|,
literal|"\"CHARACTER\""
block|,
literal|"\"CHARACTER_LENGTH\""
block|,
literal|"\"CHARACTER_SET_CATALOG\""
block|,
literal|"\"CHARACTER_SET_NAME\""
block|,
literal|"\"CHARACTER_SET_SCHEMA\""
block|,
literal|"\"CHARACTERISTICTS\""
block|,
literal|"\"CHARACTERS\""
block|,
literal|"\"CHECK\""
block|,
literal|"\"CLASS_ORIGIN\""
block|,
literal|"\"CLOB\""
block|,
literal|"\"CLOSE\""
block|,
literal|"\"COALESCE\""
block|,
literal|"\"COBOL\""
block|,
literal|"\"COLLATE\""
block|,
literal|"\"COLLATION\""
block|,
literal|"\"COLLATION_CATALOG\""
block|,
literal|"\"COLLATION_NAME\""
block|,
literal|"\"COLLATION_SCHEMA\""
block|,
literal|"\"COLLECT\""
block|,
literal|"\"COLUMN\""
block|,
literal|"\"COLUMN_NAME\""
block|,
literal|"\"COMMAND_FUNCTION\""
block|,
literal|"\"COMMAND_FUNCTION_CODE\""
block|,
literal|"\"COMMIT\""
block|,
literal|"\"COMMITTED\""
block|,
literal|"\"CONDITION\""
block|,
literal|"\"CONDITION_NUMBER\""
block|,
literal|"\"CONNECT\""
block|,
literal|"\"CONNECTION\""
block|,
literal|"\"CONNECTION_NAME\""
block|,
literal|"\"CONSTRAINT\""
block|,
literal|"\"CONSTRAINT_CATALOG\""
block|,
literal|"\"CONSTRAINT_NAME\""
block|,
literal|"\"CONSTRAINT_SCHEMA\""
block|,
literal|"\"CONSTRAINTS\""
block|,
literal|"\"CONSTRUCTOR\""
block|,
literal|"\"CONTAINS\""
block|,
literal|"\"CONVERT\""
block|,
literal|"\"CONTINUE\""
block|,
literal|"\"CORR\""
block|,
literal|"\"CORRESPONDING\""
block|,
literal|"\"COUNT\""
block|,
literal|"\"COVAR_POP\""
block|,
literal|"\"COVAR_SAMP\""
block|,
literal|"\"CREATE\""
block|,
literal|"\"CROSS\""
block|,
literal|"\"CUBE\""
block|,
literal|"\"CUME_DIST\""
block|,
literal|"\"CURRENT\""
block|,
literal|"\"CURRENT_CATALOG\""
block|,
literal|"\"CURRENT_DATE\""
block|,
literal|"\"CURRENT_DEFAULT_TRANSFORM_GROUP\""
block|,
literal|"\"CURRENT_PATH\""
block|,
literal|"\"CURRENT_ROLE\""
block|,
literal|"\"CURRENT_SCHEMA\""
block|,
literal|"\"CURRENT_TIME\""
block|,
literal|"\"CURRENT_TIMESTAMP\""
block|,
literal|"\"CURRENT_TRANSFORM_GROUP_FOR_TYPE\""
block|,
literal|"\"CURRENT_USER\""
block|,
literal|"\"CURSOR\""
block|,
literal|"\"CURSOR_NAME\""
block|,
literal|"\"CYCLE\""
block|,
literal|"\"DATA\""
block|,
literal|"\"DATE\""
block|,
literal|"\"DATETIME_INTERVAL_CODE\""
block|,
literal|"\"DATETIME_INTERVAL_PRECISION\""
block|,
literal|"\"DAY\""
block|,
literal|"\"DEALLOCATE\""
block|,
literal|"\"DEC\""
block|,
literal|"\"DECIMAL\""
block|,
literal|"\"DECLARE\""
block|,
literal|"\"DEFAULT\""
block|,
literal|"\"DEFAULTS\""
block|,
literal|"\"DEFERRABLE\""
block|,
literal|"\"DEFERRED\""
block|,
literal|"\"DEFINED\""
block|,
literal|"\"DEFINER\""
block|,
literal|"\"DEGREE\""
block|,
literal|"\"DELETE\""
block|,
literal|"\"DENSE_RANK\""
block|,
literal|"\"DEPTH\""
block|,
literal|"\"DEREF\""
block|,
literal|"\"DERIVED\""
block|,
literal|"\"DESCRIBE\""
block|,
literal|"\"DESC\""
block|,
literal|"\"DESCRIPTION\""
block|,
literal|"\"DESCRIPTOR\""
block|,
literal|"\"DETERMINISTIC\""
block|,
literal|"\"DIAGNOSTICS\""
block|,
literal|"\"DISALLOW\""
block|,
literal|"\"DISCONNECT\""
block|,
literal|"\"DISPATCH\""
block|,
literal|"\"DISTINCT\""
block|,
literal|"\"DOMAIN\""
block|,
literal|"\"DOUBLE\""
block|,
literal|"\"DROP\""
block|,
literal|"\"DYNAMIC\""
block|,
literal|"\"DYNAMIC_FUNCTION\""
block|,
literal|"\"DYNAMIC_FUNCTION_CODE\""
block|,
literal|"\"EACH\""
block|,
literal|"\"ELEMENT\""
block|,
literal|"\"ELSE\""
block|,
literal|"\"END\""
block|,
literal|"\"END-EXEC\""
block|,
literal|"\"EQUALS\""
block|,
literal|"\"ESCAPE\""
block|,
literal|"\"EVERY\""
block|,
literal|"\"EXCEPT\""
block|,
literal|"\"EXCEPTION\""
block|,
literal|"\"EXCLUDE\""
block|,
literal|"\"EXCLUDING\""
block|,
literal|"\"EXEC\""
block|,
literal|"\"EXECUTE\""
block|,
literal|"\"EXISTS\""
block|,
literal|"\"EXP\""
block|,
literal|"\"EXPLAIN\""
block|,
literal|"\"EXTERNAL\""
block|,
literal|"\"EXTRACT\""
block|,
literal|"\"FALSE\""
block|,
literal|"\"FETCH\""
block|,
literal|"\"FILTER\""
block|,
literal|"\"FINAL\""
block|,
literal|"\"FIRST\""
block|,
literal|"\"FIRST_VALUE\""
block|,
literal|"\"FLOAT\""
block|,
literal|"\"FLOOR\""
block|,
literal|"\"FOLLOWING\""
block|,
literal|"\"FOR\""
block|,
literal|"\"FOREIGN\""
block|,
literal|"\"FORTRAN\""
block|,
literal|"\"FOUND\""
block|,
literal|"\"FREE\""
block|,
literal|"\"FROM\""
block|,
literal|"\"FULL\""
block|,
literal|"\"FUNCTION\""
block|,
literal|"\"FUSION\""
block|,
literal|"\"G\""
block|,
literal|"\"GENERAL\""
block|,
literal|"\"GENERATED\""
block|,
literal|"\"GET\""
block|,
literal|"\"GLOBAL\""
block|,
literal|"\"GO\""
block|,
literal|"\"GOTO\""
block|,
literal|"\"GRANT\""
block|,
literal|"\"GRANTED\""
block|,
literal|"\"GROUP\""
block|,
literal|"\"GROUPING\""
block|,
literal|"\"HAVING\""
block|,
literal|"\"HIERARCHY\""
block|,
literal|"\"HOLD\""
block|,
literal|"\"HOUR\""
block|,
literal|"\"IDENTITY\""
block|,
literal|"\"IMMEDIATE\""
block|,
literal|"\"IMPLEMENTATION\""
block|,
literal|"\"IMPORT\""
block|,
literal|"\"IN\""
block|,
literal|"\"INDICATOR\""
block|,
literal|"\"INCLUDING\""
block|,
literal|"\"INCREMENT\""
block|,
literal|"\"INITIALLY\""
block|,
literal|"\"INNER\""
block|,
literal|"\"INOUT\""
block|,
literal|"\"INPUT\""
block|,
literal|"\"INSENSITIVE\""
block|,
literal|"\"INSERT\""
block|,
literal|"\"INSTANCE\""
block|,
literal|"\"INSTANTIABLE\""
block|,
literal|"\"INT\""
block|,
literal|"\"INTEGER\""
block|,
literal|"\"INTERSECT\""
block|,
literal|"\"INTERSECTION\""
block|,
literal|"\"INTERVAL\""
block|,
literal|"\"INTO\""
block|,
literal|"\"INVOKER\""
block|,
literal|"\"IS\""
block|,
literal|"\"ISOLATION\""
block|,
literal|"\"JAVA\""
block|,
literal|"\"JOIN\""
block|,
literal|"\"K\""
block|,
literal|"\"KEY\""
block|,
literal|"\"KEY_MEMBER\""
block|,
literal|"\"KEY_TYPE\""
block|,
literal|"\"LABEL\""
block|,
literal|"\"LANGUAGE\""
block|,
literal|"\"LARGE\""
block|,
literal|"\"LAST\""
block|,
literal|"\"LAST_VALUE\""
block|,
literal|"\"LATERAL\""
block|,
literal|"\"LEADING\""
block|,
literal|"\"LEFT\""
block|,
literal|"\"LENGTH\""
block|,
literal|"\"LEVEL\""
block|,
literal|"\"LIBRARY\""
block|,
literal|"\"LIKE\""
block|,
literal|"\"LIMIT\""
block|,
literal|"\"LN\""
block|,
literal|"\"LOCAL\""
block|,
literal|"\"LOCALTIME\""
block|,
literal|"\"LOCALTIMESTAMP\""
block|,
literal|"\"LOCATOR\""
block|,
literal|"\"LOWER\""
block|,
literal|"\"M\""
block|,
literal|"\"MAP\""
block|,
literal|"\"MATCH\""
block|,
literal|"\"MATCHED\""
block|,
literal|"\"MAX\""
block|,
literal|"\"MAXVALUE\""
block|,
literal|"\"MEMBER\""
block|,
literal|"\"MERGE\""
block|,
literal|"\"MESSAGE_LENGTH\""
block|,
literal|"\"MESSAGE_OCTET_LENGTH\""
block|,
literal|"\"MESSAGE_TEXT\""
block|,
literal|"\"METHOD\""
block|,
literal|"\"MIN\""
block|,
literal|"\"MINUTE\""
block|,
literal|"\"MINVALUE\""
block|,
literal|"\"MOD\""
block|,
literal|"\"MODIFIES\""
block|,
literal|"\"MODULE\""
block|,
literal|"\"MONTH\""
block|,
literal|"\"MORE\""
block|,
literal|"\"MULTISET\""
block|,
literal|"\"MUMPS\""
block|,
literal|"\"NAME\""
block|,
literal|"\"NAMES\""
block|,
literal|"\"NATIONAL\""
block|,
literal|"\"NATURAL\""
block|,
literal|"\"NCHAR\""
block|,
literal|"\"NCLOB\""
block|,
literal|"\"NESTING\""
block|,
literal|"\"NEW\""
block|,
literal|"\"NEXT\""
block|,
literal|"\"NO\""
block|,
literal|"\"NONE\""
block|,
literal|"\"NORMALIZE\""
block|,
literal|"\"NORMALIZED\""
block|,
literal|"\"NOT\""
block|,
literal|"\"NULL\""
block|,
literal|"\"NULLABLE\""
block|,
literal|"\"NULLIF\""
block|,
literal|"\"NULLS\""
block|,
literal|"\"NUMBER\""
block|,
literal|"\"NUMERIC\""
block|,
literal|"\"OBJECT\""
block|,
literal|"\"OCTET_LENGTH\""
block|,
literal|"\"OCTETS\""
block|,
literal|"\"OF\""
block|,
literal|"\"OLD\""
block|,
literal|"\"ON\""
block|,
literal|"\"ONLY\""
block|,
literal|"\"OPEN\""
block|,
literal|"\"OPTION\""
block|,
literal|"\"OPTIONS\""
block|,
literal|"\"OR\""
block|,
literal|"\"ORDER\""
block|,
literal|"\"ORDERING\""
block|,
literal|"\"ORDINALITY\""
block|,
literal|"\"OTHERS\""
block|,
literal|"\"OUT\""
block|,
literal|"\"OUTER\""
block|,
literal|"\"OUTPUT\""
block|,
literal|"\"OVER\""
block|,
literal|"\"OVERLAPS\""
block|,
literal|"\"OVERLAY\""
block|,
literal|"\"OVERRIDING\""
block|,
literal|"\"PAD\""
block|,
literal|"\"PARAMETER\""
block|,
literal|"\"PARAMETER_MODE\""
block|,
literal|"\"PARAMETER_NAME\""
block|,
literal|"\"PARAMETER_ORDINAL_POSITION\""
block|,
literal|"\"PARAMETER_SPECIFIC_CATALOG\""
block|,
literal|"\"PARAMETER_SPECIFIC_NAME\""
block|,
literal|"\"PARAMETER_SPECIFIC_SCHEMA\""
block|,
literal|"\"PARTIAL\""
block|,
literal|"\"PARTITION\""
block|,
literal|"\"PASCAL\""
block|,
literal|"\"PASSTHROUGH\""
block|,
literal|"\"PATH\""
block|,
literal|"\"PERCENT_RANK\""
block|,
literal|"\"PERCENTILE_CONT\""
block|,
literal|"\"PERCENTILE_DISC\""
block|,
literal|"\"PLACING\""
block|,
literal|"\"PLAN\""
block|,
literal|"\"PLI\""
block|,
literal|"\"POSITION\""
block|,
literal|"\"POWER\""
block|,
literal|"\"PRECEDING\""
block|,
literal|"\"PRECISION\""
block|,
literal|"\"PREPARE\""
block|,
literal|"\"PRESERVE\""
block|,
literal|"\"PRIMARY\""
block|,
literal|"\"PRIOR\""
block|,
literal|"\"PRIVILEGES\""
block|,
literal|"\"PROCEDURE\""
block|,
literal|"\"PUBLIC\""
block|,
literal|"\"RANGE\""
block|,
literal|"\"RANK\""
block|,
literal|"\"READ\""
block|,
literal|"\"READS\""
block|,
literal|"\"REAL\""
block|,
literal|"\"RECURSIVE\""
block|,
literal|"\"REF\""
block|,
literal|"\"REFERENCES\""
block|,
literal|"\"REFERENCING\""
block|,
literal|"\"REGR_AVGX\""
block|,
literal|"\"REGR_AVGY\""
block|,
literal|"\"REGR_COUNT\""
block|,
literal|"\"REGR_INTERCEPT\""
block|,
literal|"\"REGR_R2\""
block|,
literal|"\"REGR_SLOPE\""
block|,
literal|"\"REGR_SXX\""
block|,
literal|"\"REGR_SXY\""
block|,
literal|"\"RELATIVE\""
block|,
literal|"\"RELEASE\""
block|,
literal|"\"REPEATABLE\""
block|,
literal|"\"RESTART\""
block|,
literal|"\"RESTRICT\""
block|,
literal|"\"RESULT\""
block|,
literal|"\"RETURN\""
block|,
literal|"\"RETURNED_CARDINALITY\""
block|,
literal|"\"RETURNED_LENGTH\""
block|,
literal|"\"RETURNED_OCTET_LENGTH\""
block|,
literal|"\"RETURNED_SQLSTATE\""
block|,
literal|"\"RETURNS\""
block|,
literal|"\"REVOKE\""
block|,
literal|"\"RIGHT\""
block|,
literal|"\"ROLE\""
block|,
literal|"\"ROLLBACK\""
block|,
literal|"\"ROLLUP\""
block|,
literal|"\"ROUTINE\""
block|,
literal|"\"ROUTINE_CATALOG\""
block|,
literal|"\"ROUTINE_NAME\""
block|,
literal|"\"ROUTINE_SCHEMA\""
block|,
literal|"\"ROW\""
block|,
literal|"\"ROW_COUNT\""
block|,
literal|"\"ROW_NUMBER\""
block|,
literal|"\"ROWS\""
block|,
literal|"\"SAVEPOINT\""
block|,
literal|"\"SCALE\""
block|,
literal|"\"SCHEMA\""
block|,
literal|"\"SCHEMA_NAME\""
block|,
literal|"\"SCOPE\""
block|,
literal|"\"SCOPE_CATALOGS\""
block|,
literal|"\"SCOPE_NAME\""
block|,
literal|"\"SCOPE_SCHEMA\""
block|,
literal|"\"SCROLL\""
block|,
literal|"\"SEARCH\""
block|,
literal|"\"SECOND\""
block|,
literal|"\"SECTION\""
block|,
literal|"\"SECURITY\""
block|,
literal|"\"SELECT\""
block|,
literal|"\"SELF\""
block|,
literal|"\"SENSITIVE\""
block|,
literal|"\"SEQUENCE\""
block|,
literal|"\"SERIALIZABLE\""
block|,
literal|"\"SERVER\""
block|,
literal|"\"SERVER_NAME\""
block|,
literal|"\"SESSION\""
block|,
literal|"\"SESSION_USER\""
block|,
literal|"\"SET\""
block|,
literal|"\"SETS\""
block|,
literal|"\"SIMILAR\""
block|,
literal|"\"SIMPLE\""
block|,
literal|"\"SIZE\""
block|,
literal|"\"SMALLINT\""
block|,
literal|"\"SOME\""
block|,
literal|"\"SOURCE\""
block|,
literal|"\"SPACE\""
block|,
literal|"\"SPECIFIC\""
block|,
literal|"\"SPECIFIC_NAME\""
block|,
literal|"\"SPECIFICTYPE\""
block|,
literal|"\"SQL\""
block|,
literal|"\"SQLEXCEPTION\""
block|,
literal|"\"SQLSTATE\""
block|,
literal|"\"SQLWARNING\""
block|,
literal|"\"SQRT\""
block|,
literal|"\"START\""
block|,
literal|"\"STATE\""
block|,
literal|"\"STATEMENT\""
block|,
literal|"\"STATIC\""
block|,
literal|"\"STDDEV_POP\""
block|,
literal|"\"STDDEV_SAMP\""
block|,
literal|"\"STRUCTURE\""
block|,
literal|"\"STYLE\""
block|,
literal|"\"SUBCLASS_ORIGIN\""
block|,
literal|"\"SUBMULTISET\""
block|,
literal|"\"SUBSTRING\""
block|,
literal|"\"SUBSTITUTE\""
block|,
literal|"\"SUM\""
block|,
literal|"\"SYMMETRIC\""
block|,
literal|"\"SYSTEM\""
block|,
literal|"\"SYSTEM_USER\""
block|,
literal|"\"TABLE\""
block|,
literal|"\"TABLE_NAME\""
block|,
literal|"\"TABLESAMPLE\""
block|,
literal|"\"TEMPORARY\""
block|,
literal|"\"THEN\""
block|,
literal|"\"TIES\""
block|,
literal|"\"TIME\""
block|,
literal|"\"TIMESTAMP\""
block|,
literal|"\"TIMEZONE_HOUR\""
block|,
literal|"\"TIMEZONE_MINUTE\""
block|,
literal|"\"TINYINT\""
block|,
literal|"\"TO\""
block|,
literal|"\"TOP_LEVEL_COUNT\""
block|,
literal|"\"TRAILING\""
block|,
literal|"\"TRANSACTION\""
block|,
literal|"\"TRANSACTIONS_ACTIVE\""
block|,
literal|"\"TRANSACTIONS_COMMITTED\""
block|,
literal|"\"TRANSACTIONS_ROLLED_BACK\""
block|,
literal|"\"TRANSFORM\""
block|,
literal|"\"TRANSFORMS\""
block|,
literal|"\"TRANSLATE\""
block|,
literal|"\"TRANSLATION\""
block|,
literal|"\"TREAT\""
block|,
literal|"\"TRIGGER\""
block|,
literal|"\"TRIGGER_CATALOG\""
block|,
literal|"\"TRIGGER_NAME\""
block|,
literal|"\"TRIGGER_SCHEMA\""
block|,
literal|"\"TRIM\""
block|,
literal|"\"TRUE\""
block|,
literal|"\"TYPE\""
block|,
literal|"\"UESCAPE\""
block|,
literal|"\"UNBOUNDED\""
block|,
literal|"\"UNCOMMITTED\""
block|,
literal|"\"UNDER\""
block|,
literal|"\"UNION\""
block|,
literal|"\"UNIQUE\""
block|,
literal|"\"UNKNOWN\""
block|,
literal|"\"UNNAMED\""
block|,
literal|"\"UNNEST\""
block|,
literal|"\"UPDATE\""
block|,
literal|"\"UPPER\""
block|,
literal|"\"USAGE\""
block|,
literal|"\"USER\""
block|,
literal|"\"USER_DEFINED_TYPE_CATALOG\""
block|,
literal|"\"USER_DEFINED_TYPE_CODE\""
block|,
literal|"\"USER_DEFINED_TYPE_NAME\""
block|,
literal|"\"USER_DEFINED_TYPE_SCHEMA\""
block|,
literal|"\"USING\""
block|,
literal|"\"VALUE\""
block|,
literal|"\"VALUES\""
block|,
literal|"\"VAR_POP\""
block|,
literal|"\"VAR_SAMP\""
block|,
literal|"\"VARCHAR\""
block|,
literal|"\"VARBINARY\""
block|,
literal|"\"VARYING\""
block|,
literal|"\"VERSION\""
block|,
literal|"\"VIEW\""
block|,
literal|"\"WHEN\""
block|,
literal|"\"WHENEVER\""
block|,
literal|"\"WHERE\""
block|,
literal|"\"WIDTH_BUCKET\""
block|,
literal|"\"WINDOW\""
block|,
literal|"\"WITH\""
block|,
literal|"\"WITHIN\""
block|,
literal|"\"WITHOUT\""
block|,
literal|"\"WORK\""
block|,
literal|"\"WRAPPER\""
block|,
literal|"\"WRITE\""
block|,
literal|"\"XML\""
block|,
literal|"\"YEAR\""
block|,
literal|"\"ZONE\""
block|,
literal|"<UNSIGNED_INTEGER_LITERAL>"
block|,
literal|"<APPROX_NUMERIC_LITERAL>"
block|,
literal|"<DECIMAL_NUMERIC_LITERAL>"
block|,
literal|"<EXPONENT>"
block|,
literal|"<HEXDIGIT>"
block|,
literal|"<WHITESPACE>"
block|,
literal|"<BINARY_STRING_LITERAL>"
block|,
literal|"<QUOTED_STRING>"
block|,
literal|"<PREFIXED_STRING_LITERAL>"
block|,
literal|"<UNICODE_STRING_LITERAL>"
block|,
literal|"<CHARSETNAME>"
block|,
literal|"<UNICODE_QUOTED_ESCAPE_CHAR>"
block|,
literal|"\"(\""
block|,
literal|"\")\""
block|,
literal|"<LBRACE_D>"
block|,
literal|"<LBRACE_T>"
block|,
literal|"<LBRACE_TS>"
block|,
literal|"<LBRACE_FN>"
block|,
literal|"\"{\""
block|,
literal|"\"}\""
block|,
literal|"\"[\""
block|,
literal|"\"]\""
block|,
literal|"\";\""
block|,
literal|"\".\""
block|,
literal|"\",\""
block|,
literal|"\"=\""
block|,
literal|"\">\""
block|,
literal|"\"<\""
block|,
literal|"\"?\""
block|,
literal|"\":\""
block|,
literal|"\"<=\""
block|,
literal|"\">=\""
block|,
literal|"\"<>\""
block|,
literal|"\"+\""
block|,
literal|"\"-\""
block|,
literal|"\"*\""
block|,
literal|"\"/\""
block|,
literal|"\"||\""
block|,
literal|"\"..\""
block|,
literal|"\"\\\'\""
block|,
literal|"\"\\\"\""
block|,
literal|"\" \""
block|,
literal|"\"\\t\""
block|,
literal|"\"\\n\""
block|,
literal|"\"\\r\""
block|,
literal|"\"\\f\""
block|,
literal|"<token of kind 566>"
block|,
literal|"\"//\""
block|,
literal|"\"--\""
block|,
literal|"\"/*\""
block|,
literal|"<SINGLE_LINE_COMMENT>"
block|,
literal|"\"*/\""
block|,
literal|"\"*/\""
block|,
literal|"<token of kind 573>"
block|,
literal|"<COLLATION_ID>"
block|,
literal|"<IDENTIFIER>"
block|,
literal|"<QUOTED_IDENTIFIER>"
block|,
literal|"<UNICODE_QUOTED_IDENTIFIER>"
block|,
literal|"<LETTER>"
block|,
literal|"<DIGIT>"
block|,
literal|"<BEL>"
block|,   }
decl_stmt|;
block|}
end_interface

end_unit

