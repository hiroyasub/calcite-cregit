begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|sql
operator|.
name|fun
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|reltype
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|sql
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|sql
operator|.
name|type
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *<code>Avg</code> is an aggregator which returns the average of the values  * which go into it. It has precisely one argument of numeric type  * (<code>int</code>,<code>long</code>,<code>float</code>,<code>  * double</code>), and the result is the same type.  *  * @author jhyde  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|SqlAvgAggFunction
extends|extends
name|SqlAggFunction
block|{
comment|//~ Instance fields --------------------------------------------------------
specifier|private
specifier|final
name|RelDataType
name|type
decl_stmt|;
specifier|private
specifier|final
name|Subtype
name|subtype
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**      * Creates a SqlAvgAggFunction      *      *      * @param type Data type      * @param subtype Specific function, e.g. AVG or STDDEV_POP      */
specifier|public
name|SqlAvgAggFunction
parameter_list|(
name|RelDataType
name|type
parameter_list|,
name|Subtype
name|subtype
parameter_list|)
block|{
name|super
argument_list|(
name|subtype
operator|.
name|name
argument_list|()
argument_list|,
name|SqlKind
operator|.
name|OTHER_FUNCTION
argument_list|,
name|SqlTypeStrategies
operator|.
name|rtiFirstArgType
argument_list|,
literal|null
argument_list|,
name|SqlTypeStrategies
operator|.
name|otcNumeric
argument_list|,
name|SqlFunctionCategory
operator|.
name|Numeric
argument_list|)
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|subtype
operator|=
name|subtype
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|RelDataType
index|[]
name|getParameterTypes
parameter_list|(
name|RelDataTypeFactory
name|typeFactory
parameter_list|)
block|{
return|return
operator|new
name|RelDataType
index|[]
block|{
name|type
block|}
return|;
block|}
specifier|public
name|RelDataType
name|getReturnType
parameter_list|(
name|RelDataTypeFactory
name|typeFactory
parameter_list|)
block|{
return|return
name|type
return|;
block|}
comment|/**      * Returns the specific function, e.g. AVG or STDDEV_POP.      *      * @return Subtype      */
specifier|public
name|Subtype
name|getSubtype
parameter_list|()
block|{
return|return
name|subtype
return|;
block|}
specifier|public
enum|enum
name|Subtype
block|{
name|AVG
block|,
name|STDDEV_POP
block|,
name|STDDEV_SAMP
block|,
name|VAR_POP
block|,
name|VAR_SAMP
block|}
block|}
end_class

begin_comment
comment|// End SqlAvgAggFunction.java
end_comment

end_unit

