begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|rel
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|relopt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|reltype
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|rex
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|linq4j
operator|.
name|Ord
import|;
end_import

begin_comment
comment|/**  * Relational expression which imposes a particular sort order on its input  * without otherwise changing its content.  */
end_comment

begin_class
specifier|public
class|class
name|SortRel
extends|extends
name|SingleRel
block|{
comment|//~ Instance fields --------------------------------------------------------
specifier|protected
specifier|final
name|List
argument_list|<
name|RelFieldCollation
argument_list|>
name|collations
decl_stmt|;
specifier|protected
specifier|final
name|RexNode
index|[]
name|fieldExps
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**      * Creates a sorter.      *      * @param cluster Cluster this relational expression belongs to      * @param traits Traits      * @param child input relational expression      * @param collations array of sort specifications      */
specifier|public
name|SortRel
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|child
parameter_list|,
name|List
argument_list|<
name|RelFieldCollation
argument_list|>
name|collations
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|traits
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|this
operator|.
name|collations
operator|=
name|collations
expr_stmt|;
name|fieldExps
operator|=
operator|new
name|RexNode
index|[
name|collations
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
specifier|final
name|RelDataTypeField
index|[]
name|fields
init|=
name|getRowType
argument_list|()
operator|.
name|getFields
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|collations
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|iField
init|=
name|collations
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getFieldIndex
argument_list|()
decl_stmt|;
name|fieldExps
index|[
name|i
index|]
operator|=
name|cluster
operator|.
name|getRexBuilder
argument_list|()
operator|.
name|makeInputRef
argument_list|(
name|fields
index|[
name|iField
index|]
operator|.
name|getType
argument_list|()
argument_list|,
name|iField
argument_list|)
expr_stmt|;
block|}
block|}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|SortRel
name|copy
parameter_list|(
name|RelTraitSet
name|traitSet
parameter_list|,
name|List
argument_list|<
name|RelNode
argument_list|>
name|inputs
parameter_list|)
block|{
return|return
name|copy
argument_list|(
name|traitSet
argument_list|,
name|sole
argument_list|(
name|inputs
argument_list|)
argument_list|,
name|collations
argument_list|)
return|;
block|}
specifier|public
name|SortRel
name|copy
parameter_list|(
name|RelTraitSet
name|traitSet
parameter_list|,
name|RelNode
name|newInput
parameter_list|,
name|List
argument_list|<
name|RelFieldCollation
argument_list|>
name|newCollations
parameter_list|)
block|{
assert|assert
name|traitSet
operator|.
name|comprises
argument_list|(
name|Convention
operator|.
name|NONE
argument_list|)
assert|;
return|return
operator|new
name|SortRel
argument_list|(
name|getCluster
argument_list|()
argument_list|,
name|getCluster
argument_list|()
operator|.
name|traitSetOf
argument_list|(
name|Convention
operator|.
name|NONE
argument_list|)
argument_list|,
name|newInput
argument_list|,
name|newCollations
argument_list|)
return|;
block|}
specifier|public
name|RexNode
index|[]
name|getChildExps
parameter_list|()
block|{
return|return
name|fieldExps
return|;
block|}
comment|/**      * @return array of RelFieldCollations, from most significant to least      * significant      */
specifier|public
name|List
argument_list|<
name|RelFieldCollation
argument_list|>
name|getCollations
parameter_list|()
block|{
return|return
name|collations
return|;
block|}
specifier|public
name|RelOptPlanWriter
name|explainTerms
parameter_list|(
name|RelOptPlanWriter
name|pw
parameter_list|)
block|{
name|super
operator|.
name|explainTerms
argument_list|(
name|pw
argument_list|)
expr_stmt|;
assert|assert
name|fieldExps
operator|.
name|length
operator|==
name|collations
operator|.
name|size
argument_list|()
assert|;
for|for
control|(
name|Ord
argument_list|<
name|RexNode
argument_list|>
name|ord
range|:
name|Ord
operator|.
name|zip
argument_list|(
name|fieldExps
argument_list|)
control|)
block|{
name|pw
operator|.
name|item
argument_list|(
literal|"sort"
operator|+
name|ord
operator|.
name|i
argument_list|,
name|ord
operator|.
name|e
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Ord
argument_list|<
name|RelFieldCollation
argument_list|>
name|ord
range|:
name|Ord
operator|.
name|zip
argument_list|(
name|collations
argument_list|)
control|)
block|{
name|pw
operator|.
name|item
argument_list|(
literal|"dir"
operator|+
name|ord
operator|.
name|i
argument_list|,
name|ord
operator|.
name|e
operator|.
name|shortString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|pw
return|;
block|}
block|}
end_class

begin_comment
comment|// End SortRel.java
end_comment

end_unit

