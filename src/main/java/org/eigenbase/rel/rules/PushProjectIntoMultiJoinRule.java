begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|rel
operator|.
name|rules
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|rel
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|relopt
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * PushProjectIntoMultiJoinRule implements the rule for pushing projection  * information from a {@link ProjectRel} into the {@link MultiJoinRel} that is  * input into the {@link ProjectRel}.  *  * @author Zelaine Fong  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|PushProjectIntoMultiJoinRule
extends|extends
name|RelOptRule
block|{
specifier|public
specifier|static
specifier|final
name|PushProjectIntoMultiJoinRule
name|instance
init|=
operator|new
name|PushProjectIntoMultiJoinRule
argument_list|()
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**      * Creates a PushProjectIntoMultiJoinRule.      */
specifier|private
name|PushProjectIntoMultiJoinRule
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|RelOptRuleOperand
argument_list|(
name|ProjectRel
operator|.
name|class
argument_list|,
operator|new
name|RelOptRuleOperand
argument_list|(
name|MultiJoinRel
operator|.
name|class
argument_list|,
name|ANY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|void
name|onMatch
parameter_list|(
name|RelOptRuleCall
name|call
parameter_list|)
block|{
name|ProjectRel
name|project
init|=
operator|(
name|ProjectRel
operator|)
name|call
operator|.
name|rels
index|[
literal|0
index|]
decl_stmt|;
name|MultiJoinRel
name|multiJoin
init|=
operator|(
name|MultiJoinRel
operator|)
name|call
operator|.
name|rels
index|[
literal|1
index|]
decl_stmt|;
comment|// if all inputs have their projFields set, then projection information
comment|// has already been pushed into each input
name|boolean
name|allSet
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|multiJoin
operator|.
name|getInputs
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|multiJoin
operator|.
name|getProjFields
argument_list|()
index|[
name|i
index|]
operator|==
literal|null
condition|)
block|{
name|allSet
operator|=
literal|false
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|allSet
condition|)
block|{
return|return;
block|}
comment|// create a new MultiJoinRel that reflects the columns in the projection
comment|// above the MultiJoinRel
name|MultiJoinRel
name|newMultiJoin
init|=
name|RelOptUtil
operator|.
name|projectMultiJoin
argument_list|(
name|multiJoin
argument_list|,
name|project
argument_list|)
decl_stmt|;
name|ProjectRel
name|newProject
init|=
name|CalcRel
operator|.
name|createProject
argument_list|(
name|newMultiJoin
argument_list|,
name|project
operator|.
name|getProjectExps
argument_list|()
argument_list|,
name|RelOptUtil
operator|.
name|getFieldNames
argument_list|(
name|project
operator|.
name|getRowType
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|call
operator|.
name|transformTo
argument_list|(
name|newProject
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End PushProjectIntoMultiJoinRule.java
end_comment

end_unit

