begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to DynamoBI Corporation (DynamoBI) under one // or more contributor license agreements.  See the NOTICE file // distributed with this work for additional information // regarding copyright ownership.  DynamoBI licenses this file // to you under the Apache License, Version 2.0 (the // "License"); you may not use this file except in compliance // with the License.  You may obtain a copy of the License at  //   http://www.apache.org/licenses/LICENSE-2.0  // Unless required by applicable law or agreed to in writing, // software distributed under the License is distributed on an // "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY // KIND, either express or implied.  See the License for the // specific language governing permissions and limitations // under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|rel
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|rel
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|relopt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * CachingRelMetadataProvider implements the {@link RelMetadataProvider}  * interface by caching results from an underlying provider.  *  * @author John V. Sichi  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|CachingRelMetadataProvider
implements|implements
name|RelMetadataProvider
block|{
comment|//~ Instance fields --------------------------------------------------------
specifier|private
specifier|final
name|Map
argument_list|<
name|List
argument_list|,
name|CacheEntry
argument_list|>
name|cache
decl_stmt|;
specifier|private
specifier|final
name|RelMetadataProvider
name|underlyingProvider
decl_stmt|;
specifier|private
specifier|final
name|RelOptPlanner
name|planner
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
specifier|public
name|CachingRelMetadataProvider
parameter_list|(
name|RelMetadataProvider
name|underlyingProvider
parameter_list|,
name|RelOptPlanner
name|planner
parameter_list|)
block|{
name|this
operator|.
name|underlyingProvider
operator|=
name|underlyingProvider
expr_stmt|;
name|this
operator|.
name|planner
operator|=
name|planner
expr_stmt|;
name|cache
operator|=
operator|new
name|HashMap
argument_list|<
name|List
argument_list|,
name|CacheEntry
argument_list|>
argument_list|()
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
comment|// implement RelMetadataProvider
specifier|public
name|Object
name|getRelMetadata
parameter_list|(
name|RelNode
name|rel
parameter_list|,
name|String
name|metadataQueryName
parameter_list|,
name|Object
index|[]
name|args
parameter_list|)
block|{
comment|// TODO jvs 30-Mar-2006: Use meta-metadata to decide which metadata
comment|// query results can stay fresh until the next Ice Age.
comment|// Compute hash key.
name|List
argument_list|<
name|Object
argument_list|>
name|hashKey
decl_stmt|;
if|if
condition|(
name|args
operator|!=
literal|null
condition|)
block|{
name|hashKey
operator|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
name|args
operator|.
name|length
operator|+
literal|2
argument_list|)
expr_stmt|;
name|hashKey
operator|.
name|add
argument_list|(
name|rel
argument_list|)
expr_stmt|;
name|hashKey
operator|.
name|add
argument_list|(
name|metadataQueryName
argument_list|)
expr_stmt|;
name|hashKey
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|hashKey
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|rel
argument_list|,
name|metadataQueryName
argument_list|)
expr_stmt|;
block|}
name|long
name|timestamp
init|=
name|planner
operator|.
name|getRelMetadataTimestamp
argument_list|(
name|rel
argument_list|)
decl_stmt|;
comment|// Perform cache lookup.
name|CacheEntry
name|entry
init|=
name|cache
operator|.
name|get
argument_list|(
name|hashKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|entry
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|timestamp
operator|==
name|entry
operator|.
name|timestamp
condition|)
block|{
return|return
name|entry
operator|.
name|result
return|;
block|}
else|else
block|{
comment|// Cache results are stale.
block|}
block|}
comment|// Cache miss or stale.
name|Object
name|result
init|=
name|underlyingProvider
operator|.
name|getRelMetadata
argument_list|(
name|rel
argument_list|,
name|metadataQueryName
argument_list|,
name|args
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|entry
operator|=
operator|new
name|CacheEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
name|entry
operator|.
name|result
operator|=
name|result
expr_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|hashKey
argument_list|,
name|entry
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
comment|//~ Inner Classes ----------------------------------------------------------
specifier|private
specifier|static
class|class
name|CacheEntry
block|{
name|long
name|timestamp
decl_stmt|;
name|Object
name|result
decl_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End CachingRelMetadataProvider.java
end_comment

end_unit

