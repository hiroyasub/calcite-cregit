begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *<code>CalcTupleIter</code> is an abstract base for iterator implementations  * generated by {@link org.eigenbase.oj.rel.IterCalcRel} .  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|CalcTupleIter
implements|implements
name|TupleIter
block|{
comment|//~ Instance fields --------------------------------------------------------
specifier|protected
name|TupleIter
name|inputIterator
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**      * Constructor.      *      * @param inputIterator iterator producing results to be transformed      */
specifier|protected
name|CalcTupleIter
parameter_list|(
name|TupleIter
name|inputIterator
parameter_list|)
block|{
name|this
operator|.
name|inputIterator
operator|=
name|inputIterator
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
comment|// implement TupleIter
specifier|public
name|boolean
name|setTimeout
parameter_list|(
name|long
name|timeout
parameter_list|,
name|boolean
name|asUnderflow
parameter_list|)
block|{
return|return
name|inputIterator
operator|.
name|setTimeout
argument_list|(
name|timeout
argument_list|,
name|asUnderflow
argument_list|)
return|;
block|}
comment|// implement TupleIter
specifier|public
name|boolean
name|addListener
parameter_list|(
name|MoreDataListener
name|c
parameter_list|)
block|{
return|return
name|inputIterator
operator|.
name|addListener
argument_list|(
name|c
argument_list|)
return|;
block|}
comment|// implement TupleIter
specifier|public
name|void
name|restart
parameter_list|()
block|{
name|inputIterator
operator|.
name|restart
argument_list|()
expr_stmt|;
block|}
comment|// implement TupleIter
specifier|public
name|StringBuilder
name|printStatus
parameter_list|(
name|StringBuilder
name|b
parameter_list|)
block|{
return|return
name|inputIterator
operator|.
name|printStatus
argument_list|(
name|b
argument_list|)
return|;
block|}
comment|// implement TupleIter
specifier|public
name|void
name|closeAllocation
parameter_list|()
block|{
name|inputIterator
operator|.
name|closeAllocation
argument_list|()
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End CalcTupleIter.java
end_comment

end_unit

