begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|redis
package|;
end_package

begin_comment
comment|/**  * Define the data processing type of redis.  */
end_comment

begin_enum
specifier|public
enum|enum
name|RedisDataFormat
block|{
comment|/**    * Treat redis key and value as a string format.    */
name|RAW
argument_list|(
literal|"raw"
argument_list|)
block|,
comment|/**    * Treat redis key and value as a csv format And parse the string    * to get the corresponding field content,The default separator is colon.    */
name|CSV
argument_list|(
literal|"csv"
argument_list|)
block|,
comment|/**    * Treat redis key and value as a json format And parse the json string    * to get the corresponding field content.    */
name|JSON
argument_list|(
literal|"json"
argument_list|)
block|;
specifier|private
specifier|final
name|String
name|typeName
decl_stmt|;
name|RedisDataFormat
parameter_list|(
name|String
name|typeName
parameter_list|)
block|{
name|this
operator|.
name|typeName
operator|=
name|typeName
expr_stmt|;
block|}
specifier|public
specifier|static
name|RedisDataFormat
name|fromTypeName
parameter_list|(
name|String
name|typeName
parameter_list|)
block|{
for|for
control|(
name|RedisDataFormat
name|type
range|:
name|RedisDataFormat
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|type
operator|.
name|getTypeName
argument_list|()
operator|.
name|equals
argument_list|(
name|typeName
argument_list|)
condition|)
block|{
return|return
name|type
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getTypeName
parameter_list|()
block|{
return|return
name|this
operator|.
name|typeName
return|;
block|}
block|}
end_enum

end_unit

