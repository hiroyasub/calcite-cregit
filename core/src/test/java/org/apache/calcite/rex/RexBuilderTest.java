begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataTypeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataTypeSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|type
operator|.
name|SqlTypeFactoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|type
operator|.
name|SqlTypeName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_comment
comment|/**  * Test for {@link RexBuilder}  */
end_comment

begin_class
specifier|public
class|class
name|RexBuilderTest
block|{
comment|/**    * Test RexBuilder.ensureType()    */
annotation|@
name|Test
specifier|public
name|void
name|testEnsureTypeWithAny
parameter_list|()
block|{
specifier|final
name|RelDataTypeFactory
name|typeFactory
init|=
operator|new
name|SqlTypeFactoryImpl
argument_list|(
name|RelDataTypeSystem
operator|.
name|DEFAULT
argument_list|)
decl_stmt|;
name|RexBuilder
name|builder
init|=
operator|new
name|RexBuilder
argument_list|(
name|typeFactory
argument_list|)
decl_stmt|;
name|RexNode
name|node
init|=
operator|new
name|RexLiteral
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
argument_list|,
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
decl_stmt|;
name|RexNode
name|ensuredNode
init|=
name|builder
operator|.
name|ensureType
argument_list|(
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|ANY
argument_list|)
argument_list|,
name|node
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|node
argument_list|,
name|ensuredNode
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test RexBuilder.ensureType()    */
annotation|@
name|Test
specifier|public
name|void
name|testEnsureTypeWithItself
parameter_list|()
block|{
specifier|final
name|RelDataTypeFactory
name|typeFactory
init|=
operator|new
name|SqlTypeFactoryImpl
argument_list|(
name|RelDataTypeSystem
operator|.
name|DEFAULT
argument_list|)
decl_stmt|;
name|RexBuilder
name|builder
init|=
operator|new
name|RexBuilder
argument_list|(
name|typeFactory
argument_list|)
decl_stmt|;
name|RexNode
name|node
init|=
operator|new
name|RexLiteral
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
argument_list|,
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
decl_stmt|;
name|RexNode
name|ensuredNode
init|=
name|builder
operator|.
name|ensureType
argument_list|(
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
argument_list|,
name|node
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|node
argument_list|,
name|ensuredNode
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test RexBuilder.ensureType()    */
annotation|@
name|Test
specifier|public
name|void
name|testEnsureTypeWithDifference
parameter_list|()
block|{
specifier|final
name|RelDataTypeFactory
name|typeFactory
init|=
operator|new
name|SqlTypeFactoryImpl
argument_list|(
name|RelDataTypeSystem
operator|.
name|DEFAULT
argument_list|)
decl_stmt|;
name|RexBuilder
name|builder
init|=
operator|new
name|RexBuilder
argument_list|(
name|typeFactory
argument_list|)
decl_stmt|;
name|RexNode
name|node
init|=
operator|new
name|RexLiteral
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
argument_list|,
name|SqlTypeName
operator|.
name|BOOLEAN
argument_list|)
decl_stmt|;
name|RexNode
name|ensuredNode
init|=
name|builder
operator|.
name|ensureType
argument_list|(
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|INTEGER
argument_list|)
argument_list|,
name|node
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|node
argument_list|,
name|ensuredNode
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ensuredNode
operator|.
name|getType
argument_list|()
argument_list|,
name|typeFactory
operator|.
name|createSqlType
argument_list|(
name|SqlTypeName
operator|.
name|INTEGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End RexBuilderTest.java
end_comment

end_unit

