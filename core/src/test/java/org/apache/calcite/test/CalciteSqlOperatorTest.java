begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|test
operator|.
name|SqlOperatorBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|test
operator|.
name|SqlTester
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_comment
comment|/**  * Embodiment of {@link org.apache.calcite.sql.test.SqlOperatorBaseTest}  * that generates SQL statements and executes them using Calcite.  */
end_comment

begin_class
specifier|public
class|class
name|CalciteSqlOperatorTest
extends|extends
name|SqlOperatorBaseTest
block|{
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|Connection
argument_list|>
name|LOCAL
init|=
operator|new
name|ThreadLocal
argument_list|<
name|Connection
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|Connection
name|initialValue
parameter_list|()
block|{
try|try
block|{
return|return
name|CalciteAssert
operator|.
name|that
argument_list|()
operator|.
name|with
argument_list|(
name|CalciteAssert
operator|.
name|SchemaSpec
operator|.
name|HR
argument_list|)
operator|.
name|connect
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|private
specifier|static
name|SqlTester
name|getHrTester
parameter_list|()
block|{
return|return
name|tester
argument_list|(
name|LOCAL
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|CalciteSqlOperatorTest
parameter_list|()
block|{
name|super
argument_list|(
literal|false
argument_list|,
name|getHrTester
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End CalciteSqlOperatorTest.java
end_comment

end_unit

