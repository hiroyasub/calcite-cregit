begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|relopt
package|;
end_package

begin_import
import|import
name|net
operator|.
name|hydromatic
operator|.
name|optiq
operator|.
name|config
operator|.
name|OptiqConnectionConfig
import|;
end_import

begin_comment
comment|/**  * Utilities for {@link Context}.  */
end_comment

begin_class
specifier|public
class|class
name|Contexts
block|{
specifier|public
specifier|static
specifier|final
name|EmptyContext
name|EMPTY_CONTEXT
init|=
operator|new
name|EmptyContext
argument_list|()
decl_stmt|;
specifier|private
name|Contexts
parameter_list|()
block|{
block|}
comment|/** Returns a context that contains a    * {@link net.hydromatic.optiq.config.OptiqConnectionConfig}. */
specifier|public
specifier|static
name|Context
name|withConfig
parameter_list|(
name|OptiqConnectionConfig
name|config
parameter_list|)
block|{
return|return
operator|new
name|ConfigContext
argument_list|(
name|config
argument_list|)
return|;
block|}
comment|/** Returns a context that returns null for all inquiries. */
specifier|public
specifier|static
name|Context
name|empty
parameter_list|()
block|{
return|return
name|EMPTY_CONTEXT
return|;
block|}
comment|/** Context that contains a    * {@link net.hydromatic.optiq.config.OptiqConnectionConfig}. */
specifier|private
specifier|static
class|class
name|ConfigContext
implements|implements
name|Context
block|{
specifier|private
name|OptiqConnectionConfig
name|config
decl_stmt|;
specifier|public
name|ConfigContext
parameter_list|(
name|OptiqConnectionConfig
name|config
parameter_list|)
block|{
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isInstance
argument_list|(
name|config
argument_list|)
condition|)
block|{
return|return
name|clazz
operator|.
name|cast
argument_list|(
name|config
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
comment|/** Empty context. */
specifier|static
class|class
name|EmptyContext
implements|implements
name|Context
block|{
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End Contexts.java
end_comment

end_unit

