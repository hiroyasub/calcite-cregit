begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|rex
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|AbstractList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|reltype
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Abstract base class for {@link RexInputRef} and {@link RexLocalRef}.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|RexSlot
extends|extends
name|RexVariable
block|{
comment|//~ Instance fields --------------------------------------------------------
specifier|protected
specifier|final
name|int
name|index
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**      * Creates a slot.      *      * @param index Index of the field in the underlying rowtype      * @param type Type of the column      */
specifier|protected
name|RexSlot
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|index
parameter_list|,
name|RelDataType
name|type
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|type
argument_list|)
expr_stmt|;
assert|assert
name|index
operator|>=
literal|0
assert|;
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|int
name|getIndex
parameter_list|()
block|{
return|return
name|index
return|;
block|}
comment|/** Thread-safe list that populates itself if you make a reference beyond      * the end of the list. Useful if you are using the same entries repeatedly.      * Once populated, accesses are very efficient. */
specifier|protected
specifier|static
class|class
name|SelfPopulatingList
extends|extends
name|CopyOnWriteArrayList
argument_list|<
name|String
argument_list|>
block|{
specifier|private
specifier|final
name|String
name|prefix
decl_stmt|;
name|SelfPopulatingList
parameter_list|(
specifier|final
name|String
name|prefix
parameter_list|,
specifier|final
name|int
name|initialSize
parameter_list|)
block|{
name|super
argument_list|(
name|fromTo
argument_list|(
name|prefix
argument_list|,
literal|0
argument_list|,
name|initialSize
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
specifier|private
specifier|static
name|AbstractList
argument_list|<
name|String
argument_list|>
name|fromTo
parameter_list|(
specifier|final
name|String
name|prefix
parameter_list|,
specifier|final
name|int
name|start
parameter_list|,
specifier|final
name|int
name|end
parameter_list|)
block|{
return|return
operator|new
name|AbstractList
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
specifier|public
name|String
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|prefix
operator|+
operator|(
name|index
operator|+
name|start
operator|)
return|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|end
operator|-
name|start
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
for|for
control|(
init|;
condition|;
control|)
block|{
try|try
block|{
return|return
name|super
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
if|if
condition|(
name|index
operator|<
literal|0
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|()
throw|;
block|}
name|addAll
argument_list|(
name|fromTo
argument_list|(
name|prefix
argument_list|,
name|size
argument_list|()
argument_list|,
name|Math
operator|.
name|max
argument_list|(
name|index
operator|+
literal|1
argument_list|,
name|size
argument_list|()
operator|*
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

begin_comment
comment|// End RexSlot.java
end_comment

end_unit

