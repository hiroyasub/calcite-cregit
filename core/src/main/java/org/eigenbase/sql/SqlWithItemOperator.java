begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* // Licensed to Julian Hyde under one or more contributor license // agreements. See the NOTICE file distributed with this work for // additional information regarding copyright ownership. // // Julian Hyde licenses this file to you under the Apache License, // Version 2.0 (the "License"); you may not use this file except in // compliance with the License. You may obtain a copy of the License at: // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|sql
package|;
end_package

begin_comment
comment|/**  * SqlWithItemOperator is used to represent an item in a WITH clause of a query.  * It has a name, an optional column list, and a query.  */
end_comment

begin_class
specifier|public
class|class
name|SqlWithItemOperator
extends|extends
name|SqlSpecialOperator
block|{
specifier|public
name|SqlWithItemOperator
parameter_list|()
block|{
name|super
argument_list|(
literal|"WITH_ITEM"
argument_list|,
name|SqlKind
operator|.
name|WITH_ITEM
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|void
name|unparse
parameter_list|(
name|SqlWriter
name|writer
parameter_list|,
name|SqlNode
index|[]
name|operands
parameter_list|,
name|int
name|leftPrec
parameter_list|,
name|int
name|rightPrec
parameter_list|)
block|{
specifier|final
name|Call
name|call
init|=
name|Call
operator|.
name|of
argument_list|(
name|operands
argument_list|)
decl_stmt|;
name|call
operator|.
name|name
operator|.
name|unparse
argument_list|(
name|writer
argument_list|,
name|getLeftPrec
argument_list|()
argument_list|,
name|getRightPrec
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|call
operator|.
name|columnList
operator|!=
literal|null
condition|)
block|{
name|call
operator|.
name|columnList
operator|.
name|unparse
argument_list|(
name|writer
argument_list|,
name|getLeftPrec
argument_list|()
argument_list|,
name|getRightPrec
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|sep
argument_list|(
literal|"AS"
argument_list|)
expr_stmt|;
name|call
operator|.
name|query
operator|.
name|unparse
argument_list|(
name|writer
argument_list|,
name|getLeftPrec
argument_list|()
argument_list|,
name|getRightPrec
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** Copy of the operands to a call to {@link SqlWithItemOperator}, with names    * and types applied. Use this rather than accessing the operands by    * position. */
specifier|public
specifier|static
class|class
name|Call
block|{
specifier|public
specifier|final
name|SqlIdentifier
name|name
decl_stmt|;
specifier|public
specifier|final
name|SqlNodeList
name|columnList
decl_stmt|;
comment|// may be null
specifier|public
specifier|final
name|SqlNode
name|query
decl_stmt|;
specifier|private
name|Call
parameter_list|(
name|SqlIdentifier
name|name
parameter_list|,
name|SqlNodeList
name|columnList
parameter_list|,
name|SqlNode
name|query
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|columnList
operator|=
name|columnList
expr_stmt|;
name|this
operator|.
name|query
operator|=
name|query
expr_stmt|;
assert|assert
name|query
operator|.
name|isA
argument_list|(
name|SqlKind
operator|.
name|QUERY
argument_list|)
assert|;
block|}
specifier|public
specifier|static
name|Call
name|of
parameter_list|(
name|SqlCall
name|call
parameter_list|)
block|{
assert|assert
name|call
operator|.
name|getKind
argument_list|()
operator|==
name|SqlKind
operator|.
name|WITH_ITEM
assert|;
return|return
name|of
argument_list|(
name|call
operator|.
name|getOperands
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Call
name|of
parameter_list|(
name|SqlNode
index|[]
name|operands
parameter_list|)
block|{
assert|assert
name|operands
operator|.
name|length
operator|==
literal|3
assert|;
return|return
operator|new
name|Call
argument_list|(
operator|(
name|SqlIdentifier
operator|)
name|operands
index|[
literal|0
index|]
argument_list|,
operator|(
name|SqlNodeList
operator|)
name|operands
index|[
literal|1
index|]
argument_list|,
name|operands
index|[
literal|2
index|]
argument_list|)
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End SqlWithItemOperator.java
end_comment

end_unit

