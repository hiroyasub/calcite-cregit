begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|eigenbase
operator|.
name|reltype
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|sql
operator|.
name|type
operator|.
name|SqlTypeName
import|;
end_import

begin_comment
comment|/** Default implementation of {@link org.eigenbase.reltype.RelDataTypeSystem},  * providing parameters from the SQL standard.  *  *<p>To implement other type systems, create a derived class and override  * values as needed.  *  *<table border='1'>  *<caption>Parameter values</caption>  *<tr><th>Parameter</th><th>Value</th></tr>  *<tr><td>MAX_NUMERIC_SCALE</td><td>19</td></tr>  *</table>  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|RelDataTypeSystemImpl
implements|implements
name|RelDataTypeSystem
block|{
specifier|public
name|int
name|getMaxScale
parameter_list|(
name|SqlTypeName
name|typeName
parameter_list|)
block|{
switch|switch
condition|(
name|typeName
condition|)
block|{
case|case
name|DECIMAL
case|:
return|return
name|getMaxNumericScale
argument_list|()
return|;
case|case
name|INTERVAL_DAY_TIME
case|:
case|case
name|INTERVAL_YEAR_MONTH
case|:
return|return
name|SqlTypeName
operator|.
name|MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION
return|;
default|default:
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|public
name|int
name|getDefaultPrecision
parameter_list|(
name|SqlTypeName
name|typeName
parameter_list|)
block|{
switch|switch
condition|(
name|typeName
condition|)
block|{
case|case
name|CHAR
case|:
case|case
name|BINARY
case|:
case|case
name|VARCHAR
case|:
case|case
name|VARBINARY
case|:
return|return
literal|1
return|;
case|case
name|TIME
case|:
return|return
literal|0
return|;
case|case
name|TIMESTAMP
case|:
comment|// TODO jvs 26-July-2004:  should be 6 for microseconds,
comment|// but we can't support that yet
return|return
literal|0
return|;
case|case
name|DECIMAL
case|:
return|return
name|getMaxNumericPrecision
argument_list|()
return|;
case|case
name|INTERVAL_DAY_TIME
case|:
case|case
name|INTERVAL_YEAR_MONTH
case|:
return|return
name|SqlTypeName
operator|.
name|DEFAULT_INTERVAL_START_PRECISION
return|;
default|default:
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|public
name|int
name|getMaxPrecision
parameter_list|(
name|SqlTypeName
name|typeName
parameter_list|)
block|{
switch|switch
condition|(
name|typeName
condition|)
block|{
case|case
name|DECIMAL
case|:
return|return
name|getMaxNumericPrecision
argument_list|()
return|;
case|case
name|VARCHAR
case|:
case|case
name|CHAR
case|:
return|return
literal|65536
return|;
case|case
name|VARBINARY
case|:
case|case
name|BINARY
case|:
return|return
literal|65536
return|;
case|case
name|TIME
case|:
case|case
name|TIMESTAMP
case|:
return|return
name|SqlTypeName
operator|.
name|MAX_DATETIME_PRECISION
return|;
case|case
name|INTERVAL_DAY_TIME
case|:
case|case
name|INTERVAL_YEAR_MONTH
case|:
return|return
name|SqlTypeName
operator|.
name|MAX_INTERVAL_START_PRECISION
return|;
default|default:
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|public
name|int
name|getMaxNumericScale
parameter_list|()
block|{
return|return
literal|19
return|;
block|}
specifier|public
name|int
name|getMaxNumericPrecision
parameter_list|()
block|{
return|return
literal|19
return|;
block|}
block|}
end_class

begin_comment
comment|// End RelDataTypeSystemImpl.java
end_comment

end_unit

