begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|prepare
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|jdbc
operator|.
name|CalciteSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|Enumerable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|Grouping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|OrderedQueryable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|Queryable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|QueryableDefaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|QueryableFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|BigDecimalFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|DoubleFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|EqualityComparer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|FloatFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|Function1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|Function2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|IntegerFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|LongFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|NullableBigDecimalFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|NullableDoubleFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|NullableFloatFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|NullableIntegerFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|NullableLongFunction1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|Predicate1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|function
operator|.
name|Predicate2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|linq4j
operator|.
name|tree
operator|.
name|FunctionExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|logical
operator|.
name|LogicalFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|logical
operator|.
name|LogicalProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|logical
operator|.
name|LogicalTableScan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|QueryableTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|TranslatableTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|impl
operator|.
name|AbstractTableQueryable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link QueryableFactory}  * that builds a tree of {@link RelNode} planner nodes. Used by  * {@link LixToRelTranslator}.  *  *<p>Each of the methods that implements a {@code Replayer} method creates  * a tree of {@code RelNode}s equivalent to the arguments, and calls  * {@link #setRel} to assign the root of that tree to the {@link #rel} member  * variable.</p>  *  *<p>To comply with the {@link org.apache.calcite.linq4j.QueryableFactory}  * interface, which is after all a factory, each method returns a dummy result  * such as {@code null} or {@code 0}.  * The caller will not use the result.  * The real effect of the method is to  * call {@link #setRel} with a {@code RelNode}.</p>  *  *<p>NOTE: Many methods currently throw {@link UnsupportedOperationException}.  * These method need to be implemented.</p>  *  * @param<T> Element type  */
end_comment

begin_class
class|class
name|QueryableRelBuilder
parameter_list|<
name|T
parameter_list|>
implements|implements
name|QueryableFactory
argument_list|<
name|T
argument_list|>
block|{
specifier|private
specifier|final
name|LixToRelTranslator
name|translator
decl_stmt|;
specifier|private
name|RelNode
name|rel
decl_stmt|;
name|QueryableRelBuilder
parameter_list|(
name|LixToRelTranslator
name|translator
parameter_list|)
block|{
name|this
operator|.
name|translator
operator|=
name|translator
expr_stmt|;
block|}
name|RelNode
name|toRel
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|queryable
parameter_list|)
block|{
if|if
condition|(
name|queryable
operator|instanceof
name|QueryableDefaults
operator|.
name|Replayable
condition|)
block|{
comment|//noinspection unchecked
operator|(
operator|(
name|QueryableDefaults
operator|.
name|Replayable
operator|)
name|queryable
operator|)
operator|.
name|replay
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
name|rel
return|;
block|}
if|if
condition|(
name|queryable
operator|instanceof
name|AbstractTableQueryable
condition|)
block|{
specifier|final
name|AbstractTableQueryable
name|tableQueryable
init|=
operator|(
name|AbstractTableQueryable
operator|)
name|queryable
decl_stmt|;
specifier|final
name|QueryableTable
name|table
init|=
name|tableQueryable
operator|.
name|table
decl_stmt|;
specifier|final
name|CalciteSchema
operator|.
name|TableEntry
name|tableEntry
init|=
name|CalciteSchema
operator|.
name|from
argument_list|(
name|tableQueryable
operator|.
name|schema
argument_list|)
operator|.
name|add
argument_list|(
name|tableQueryable
operator|.
name|tableName
argument_list|,
name|tableQueryable
operator|.
name|table
argument_list|)
decl_stmt|;
specifier|final
name|RelOptTableImpl
name|relOptTable
init|=
name|RelOptTableImpl
operator|.
name|create
argument_list|(
literal|null
argument_list|,
name|table
operator|.
name|getRowType
argument_list|(
name|translator
operator|.
name|typeFactory
argument_list|)
argument_list|,
name|tableEntry
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|table
operator|instanceof
name|TranslatableTable
condition|)
block|{
return|return
operator|(
operator|(
name|TranslatableTable
operator|)
name|table
operator|)
operator|.
name|toRel
argument_list|(
name|translator
operator|.
name|toRelContext
argument_list|()
argument_list|,
name|relOptTable
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|LogicalTableScan
operator|.
name|create
argument_list|(
name|translator
operator|.
name|cluster
argument_list|,
name|relOptTable
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|()
argument_list|)
return|;
block|}
block|}
return|return
name|translator
operator|.
name|translate
argument_list|(
name|queryable
operator|.
name|getExpression
argument_list|()
argument_list|)
return|;
block|}
comment|/** Sets the output of this event. */
specifier|private
name|void
name|setRel
parameter_list|(
name|RelNode
name|rel
parameter_list|)
block|{
name|this
operator|.
name|rel
operator|=
name|rel
expr_stmt|;
block|}
comment|// ~ Methods from QueryableFactory -----------------------------------------
annotation|@
name|Override
specifier|public
parameter_list|<
name|TAccumulate
parameter_list|,
name|TResult
parameter_list|>
name|TResult
name|aggregate
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|TAccumulate
name|seed
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|TAccumulate
argument_list|,
name|T
argument_list|,
name|TAccumulate
argument_list|>
argument_list|>
name|func
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|TAccumulate
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|aggregate
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|T
argument_list|,
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TAccumulate
parameter_list|>
name|TAccumulate
name|aggregate
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|TAccumulate
name|seed
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|TAccumulate
argument_list|,
name|T
argument_list|,
name|TAccumulate
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|all
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|any
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|any
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|BigDecimal
name|averageBigDecimal
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|BigDecimalFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|BigDecimal
name|averageNullableBigDecimal
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableBigDecimalFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|averageDouble
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|DoubleFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Double
name|averageNullableDouble
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableDoubleFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|averageInteger
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|IntegerFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Integer
name|averageNullableInteger
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableIntegerFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|float
name|averageFloat
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|FloatFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Float
name|averageNullableFloat
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableFloatFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|averageLong
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|LongFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|averageNullableLong
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableLongFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|concat
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|source2
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|contains
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|T
name|element
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|contains
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|T
name|element
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|count
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|count
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|defaultIfEmpty
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|defaultIfEmpty
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|T
name|value
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|distinct
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|distinct
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|elementAt
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|int
name|index
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|elementAtOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|int
name|index
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|except
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|)
block|{
return|return
name|except
argument_list|(
name|source
argument_list|,
name|enumerable
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|except
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|except
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|tEqualityComparer
parameter_list|)
block|{
return|return
name|except
argument_list|(
name|source
argument_list|,
name|enumerable
argument_list|,
name|tEqualityComparer
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|except
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|tEqualityComparer
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|first
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|first
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|firstOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|firstOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|>
name|Queryable
argument_list|<
name|Grouping
argument_list|<
name|TKey
argument_list|,
name|T
argument_list|>
argument_list|>
name|groupBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|>
name|Queryable
argument_list|<
name|Grouping
argument_list|<
name|TKey
argument_list|,
name|T
argument_list|>
argument_list|>
name|groupBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|EqualityComparer
argument_list|<
name|TKey
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|,
name|TElement
parameter_list|>
name|Queryable
argument_list|<
name|Grouping
argument_list|<
name|TKey
argument_list|,
name|TElement
argument_list|>
argument_list|>
name|groupBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TElement
argument_list|>
argument_list|>
name|elementSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|groupByK
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|TKey
argument_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|,
name|TElement
parameter_list|>
name|Queryable
argument_list|<
name|Grouping
argument_list|<
name|TKey
argument_list|,
name|TElement
argument_list|>
argument_list|>
name|groupBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TElement
argument_list|>
argument_list|>
name|elementSelector
parameter_list|,
name|EqualityComparer
argument_list|<
name|TKey
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|groupByK
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|TKey
argument_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|elementSelector
parameter_list|,
name|EqualityComparer
argument_list|<
name|TKey
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|,
name|TElement
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|groupBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TElement
argument_list|>
argument_list|>
name|elementSelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|TKey
argument_list|,
name|Enumerable
argument_list|<
name|TElement
argument_list|>
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|,
name|TElement
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|groupBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TElement
argument_list|>
argument_list|>
name|elementSelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|TKey
argument_list|,
name|Enumerable
argument_list|<
name|TElement
argument_list|>
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|,
name|EqualityComparer
argument_list|<
name|TKey
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TInner
parameter_list|,
name|TKey
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|groupJoin
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|TInner
argument_list|>
name|inner
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|outerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|TInner
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|innerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|Enumerable
argument_list|<
name|TInner
argument_list|>
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TInner
parameter_list|,
name|TKey
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|groupJoin
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|TInner
argument_list|>
name|inner
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|outerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|TInner
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|innerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|Enumerable
argument_list|<
name|TInner
argument_list|>
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|,
name|EqualityComparer
argument_list|<
name|TKey
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|intersect
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|)
block|{
return|return
name|intersect
argument_list|(
name|source
argument_list|,
name|enumerable
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|intersect
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|intersect
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|tEqualityComparer
parameter_list|)
block|{
return|return
name|intersect
argument_list|(
name|source
argument_list|,
name|enumerable
argument_list|,
name|tEqualityComparer
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|intersect
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|tEqualityComparer
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TInner
parameter_list|,
name|TKey
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|join
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|TInner
argument_list|>
name|inner
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|outerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|TInner
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|innerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|TInner
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TInner
parameter_list|,
name|TKey
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|join
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|TInner
argument_list|>
name|inner
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|outerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|TInner
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|innerKeySelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|TInner
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|,
name|EqualityComparer
argument_list|<
name|TKey
argument_list|>
name|comparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|last
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|last
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|lastOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|lastOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|longCount
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|longCount
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|max
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
extends|extends
name|Comparable
argument_list|<
name|TResult
argument_list|>
parameter_list|>
name|TResult
name|max
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|min
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
extends|extends
name|Comparable
argument_list|<
name|TResult
argument_list|>
parameter_list|>
name|TResult
name|min
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|ofType
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Class
argument_list|<
name|TResult
argument_list|>
name|clazz
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T2
parameter_list|>
name|Queryable
argument_list|<
name|T2
argument_list|>
name|cast
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Class
argument_list|<
name|T2
argument_list|>
name|clazz
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
extends|extends
name|Comparable
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|orderBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|orderBy
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|Comparator
argument_list|<
name|TKey
argument_list|>
name|comparator
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
extends|extends
name|Comparable
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|orderByDescending
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|orderByDescending
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|Comparator
argument_list|<
name|TKey
argument_list|>
name|comparator
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|reverse
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|select
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
name|RelNode
name|child
init|=
name|toRel
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RexNode
argument_list|>
name|nodes
init|=
name|translator
operator|.
name|toRexList
argument_list|(
name|selector
argument_list|,
name|child
argument_list|)
decl_stmt|;
name|setRel
argument_list|(
name|LogicalProject
operator|.
name|create
argument_list|(
name|child
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|()
argument_list|,
name|nodes
argument_list|,
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
literal|null
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|selectN
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|selectMany
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|Enumerable
argument_list|<
name|TResult
argument_list|>
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|selectManyN
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|,
name|Enumerable
argument_list|<
name|TResult
argument_list|>
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TCollection
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|selectMany
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|,
name|Enumerable
argument_list|<
name|TCollection
argument_list|>
argument_list|>
argument_list|>
name|collectionSelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|TCollection
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TCollection
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|selectManyN
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|Enumerable
argument_list|<
name|TCollection
argument_list|>
argument_list|>
argument_list|>
name|collectionSelector
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|TCollection
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|sequenceEqual
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|sequenceEqual
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|enumerable
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|tEqualityComparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|single
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|single
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|singleOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|singleOrDefault
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|skip
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|int
name|count
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|skipWhile
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|skipWhileN
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate2
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|BigDecimal
name|sumBigDecimal
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|BigDecimalFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|BigDecimal
name|sumNullableBigDecimal
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableBigDecimalFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|sumDouble
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|DoubleFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Double
name|sumNullableDouble
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableDoubleFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|sumInteger
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|IntegerFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Integer
name|sumNullableInteger
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableIntegerFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|sumLong
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|LongFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|sumNullableLong
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableLongFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|float
name|sumFloat
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|FloatFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Float
name|sumNullableFloat
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|NullableFloatFunction1
argument_list|<
name|T
argument_list|>
argument_list|>
name|selector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|take
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|int
name|count
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|takeWhile
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|takeWhileN
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Predicate2
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
extends|extends
name|Comparable
argument_list|<
name|TKey
argument_list|>
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|thenBy
parameter_list|(
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|thenBy
parameter_list|(
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|Comparator
argument_list|<
name|TKey
argument_list|>
name|comparator
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
extends|extends
name|Comparable
argument_list|<
name|TKey
argument_list|>
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|thenByDescending
parameter_list|(
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|TKey
parameter_list|>
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|thenByDescending
parameter_list|(
name|OrderedQueryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function1
argument_list|<
name|T
argument_list|,
name|TKey
argument_list|>
argument_list|>
name|keySelector
parameter_list|,
name|Comparator
argument_list|<
name|TKey
argument_list|>
name|comparator
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|union
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|source1
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|union
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T
argument_list|>
name|source1
parameter_list|,
name|EqualityComparer
argument_list|<
name|T
argument_list|>
name|tEqualityComparer
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|where
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|?
extends|extends
name|Predicate1
argument_list|<
name|T
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
name|RelNode
name|child
init|=
name|toRel
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|RexNode
name|node
init|=
name|translator
operator|.
name|toRex
argument_list|(
name|predicate
argument_list|,
name|child
argument_list|)
decl_stmt|;
name|setRel
argument_list|(
name|LogicalFilter
operator|.
name|create
argument_list|(
name|child
argument_list|,
name|node
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|source
return|;
block|}
annotation|@
name|Override
specifier|public
name|Queryable
argument_list|<
name|T
argument_list|>
name|whereN
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|FunctionExpression
argument_list|<
name|?
extends|extends
name|Predicate2
argument_list|<
name|T
argument_list|,
name|Integer
argument_list|>
argument_list|>
name|predicate
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T1
parameter_list|,
name|TResult
parameter_list|>
name|Queryable
argument_list|<
name|TResult
argument_list|>
name|zip
parameter_list|(
name|Queryable
argument_list|<
name|T
argument_list|>
name|source
parameter_list|,
name|Enumerable
argument_list|<
name|T1
argument_list|>
name|source1
parameter_list|,
name|FunctionExpression
argument_list|<
name|Function2
argument_list|<
name|T
argument_list|,
name|T1
argument_list|,
name|TResult
argument_list|>
argument_list|>
name|resultSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
end_class

end_unit

