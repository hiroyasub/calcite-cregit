begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlCollation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|Collator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_comment
comment|/**  * Collation that uses a specific {@link Collator} for comparison.  */
end_comment

begin_class
specifier|public
class|class
name|JavaCollation
extends|extends
name|SqlCollation
block|{
specifier|private
specifier|final
name|Collator
name|collator
decl_stmt|;
specifier|public
name|JavaCollation
parameter_list|(
name|Coercibility
name|coercibility
parameter_list|,
name|Locale
name|locale
parameter_list|,
name|Charset
name|charset
parameter_list|,
name|int
name|strength
parameter_list|)
block|{
name|super
argument_list|(
name|coercibility
argument_list|,
name|locale
argument_list|,
name|charset
argument_list|,
name|getStrengthString
argument_list|(
name|strength
argument_list|)
argument_list|)
expr_stmt|;
name|collator
operator|=
name|Collator
operator|.
name|getInstance
argument_list|(
name|locale
argument_list|)
expr_stmt|;
name|collator
operator|.
name|setStrength
argument_list|(
name|strength
argument_list|)
expr_stmt|;
block|}
comment|// Strength values
specifier|private
specifier|static
specifier|final
name|String
name|STRENGTH_PRIMARY
init|=
literal|"primary"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|STRENGTH_SECONDARY
init|=
literal|"secondary"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|STRENGTH_TERTIARY
init|=
literal|"tertiary"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|STRENGTH_IDENTICAL
init|=
literal|"identical"
decl_stmt|;
specifier|private
specifier|static
name|String
name|getStrengthString
parameter_list|(
name|int
name|strengthValue
parameter_list|)
block|{
switch|switch
condition|(
name|strengthValue
condition|)
block|{
case|case
name|Collator
operator|.
name|PRIMARY
case|:
return|return
name|STRENGTH_PRIMARY
return|;
case|case
name|Collator
operator|.
name|SECONDARY
case|:
return|return
name|STRENGTH_SECONDARY
return|;
case|case
name|Collator
operator|.
name|TERTIARY
case|:
return|return
name|STRENGTH_TERTIARY
return|;
case|case
name|Collator
operator|.
name|IDENTICAL
case|:
return|return
name|STRENGTH_IDENTICAL
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Incorrect strength value."
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|generateCollationName
parameter_list|(
name|Charset
name|charset
parameter_list|)
block|{
return|return
name|super
operator|.
name|generateCollationName
argument_list|(
name|charset
argument_list|)
operator|+
literal|"$JAVA_COLLATOR"
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collator
name|getCollator
parameter_list|()
block|{
return|return
name|collator
return|;
block|}
block|}
end_class

end_unit

