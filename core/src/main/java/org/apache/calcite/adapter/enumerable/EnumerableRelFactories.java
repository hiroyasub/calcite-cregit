begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|enumerable
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelCollation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|CorrelationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|hint
operator|.
name|RelHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|validate
operator|.
name|SqlValidatorUtil
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Contains factory interface and default implementation for creating various  * rel nodes.  */
end_comment

begin_class
specifier|public
class|class
name|EnumerableRelFactories
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|TableScanFactory
name|ENUMERABLE_TABLE_SCAN_FACTORY
init|=
operator|new
name|TableScanFactoryImpl
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|ProjectFactory
name|ENUMERABLE_PROJECT_FACTORY
init|=
operator|new
name|ProjectFactoryImpl
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|FilterFactory
name|ENUMERABLE_FILTER_FACTORY
init|=
operator|new
name|FilterFactoryImpl
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|SortFactory
name|ENUMERABLE_SORT_FACTORY
init|=
operator|new
name|SortFactoryImpl
argument_list|()
decl_stmt|;
comment|/**    * Implementation of {@link org.apache.calcite.rel.core.RelFactories.TableScanFactory} that    * returns a vanilla {@link EnumerableTableScan}.    */
specifier|private
specifier|static
class|class
name|TableScanFactoryImpl
implements|implements
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|TableScanFactory
block|{
annotation|@
name|Override
specifier|public
name|RelNode
name|createScan
parameter_list|(
name|RelOptTable
operator|.
name|ToRelContext
name|toRelContext
parameter_list|,
name|RelOptTable
name|table
parameter_list|)
block|{
return|return
name|EnumerableTableScan
operator|.
name|create
argument_list|(
name|toRelContext
operator|.
name|getCluster
argument_list|()
argument_list|,
name|table
argument_list|)
return|;
block|}
block|}
comment|/**    * Implementation of {@link org.apache.calcite.rel.core.RelFactories.ProjectFactory} that    * returns a vanilla {@link EnumerableProject}.    */
specifier|private
specifier|static
class|class
name|ProjectFactoryImpl
implements|implements
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|ProjectFactory
block|{
annotation|@
name|Override
specifier|public
name|RelNode
name|createProject
parameter_list|(
name|RelNode
name|input
parameter_list|,
name|List
argument_list|<
name|RelHint
argument_list|>
name|hints
parameter_list|,
name|List
argument_list|<
name|?
extends|extends
name|RexNode
argument_list|>
name|childExprs
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|fieldNames
parameter_list|)
block|{
specifier|final
name|RelDataType
name|rowType
init|=
name|RexUtil
operator|.
name|createStructType
argument_list|(
name|input
operator|.
name|getCluster
argument_list|()
operator|.
name|getTypeFactory
argument_list|()
argument_list|,
name|childExprs
argument_list|,
name|fieldNames
argument_list|,
name|SqlValidatorUtil
operator|.
name|F_SUGGESTER
argument_list|)
decl_stmt|;
return|return
name|EnumerableProject
operator|.
name|create
argument_list|(
name|input
argument_list|,
name|childExprs
argument_list|,
name|rowType
argument_list|)
return|;
block|}
block|}
comment|/**    * Implementation of {@link org.apache.calcite.rel.core.RelFactories.FilterFactory} that    * returns a vanilla {@link EnumerableFilter}.    */
specifier|private
specifier|static
class|class
name|FilterFactoryImpl
implements|implements
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|FilterFactory
block|{
annotation|@
name|Override
specifier|public
name|RelNode
name|createFilter
parameter_list|(
name|RelNode
name|input
parameter_list|,
name|RexNode
name|condition
parameter_list|,
name|Set
argument_list|<
name|CorrelationId
argument_list|>
name|variablesSet
parameter_list|)
block|{
return|return
name|EnumerableFilter
operator|.
name|create
argument_list|(
name|input
argument_list|,
name|condition
argument_list|)
return|;
block|}
block|}
comment|/**    * Implementation of {@link org.apache.calcite.rel.core.RelFactories.SortFactory} that    * returns a vanilla {@link EnumerableSort}.    */
specifier|private
specifier|static
class|class
name|SortFactoryImpl
implements|implements
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
operator|.
name|SortFactory
block|{
annotation|@
name|Override
specifier|public
name|RelNode
name|createSort
parameter_list|(
name|RelNode
name|input
parameter_list|,
name|RelCollation
name|collation
parameter_list|,
name|RexNode
name|offset
parameter_list|,
name|RexNode
name|fetch
parameter_list|)
block|{
return|return
name|EnumerableSort
operator|.
name|create
argument_list|(
name|input
argument_list|,
name|collation
argument_list|,
name|offset
argument_list|,
name|fetch
argument_list|)
return|;
block|}
block|}
specifier|private
name|EnumerableRelFactories
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

