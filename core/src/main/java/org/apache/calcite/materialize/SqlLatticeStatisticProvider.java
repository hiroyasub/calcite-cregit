begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|materialize
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|ScannableTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|schema
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|ImmutableBitSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link LatticeStatisticProvider} that gets statistics by  * executing "SELECT COUNT(DISTINCT ...) ..." SQL queries.  */
end_comment

begin_class
class|class
name|SqlLatticeStatisticProvider
implements|implements
name|LatticeStatisticProvider
block|{
specifier|static
specifier|final
name|SqlLatticeStatisticProvider
name|INSTANCE
init|=
operator|new
name|SqlLatticeStatisticProvider
argument_list|()
decl_stmt|;
comment|/** Creates an SqlLatticeStatisticProvider. */
specifier|private
name|SqlLatticeStatisticProvider
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|int
name|cardinality
parameter_list|(
name|Lattice
name|lattice
parameter_list|,
name|Lattice
operator|.
name|Column
name|column
parameter_list|)
block|{
specifier|final
name|String
name|sql
init|=
name|lattice
operator|.
name|countSql
argument_list|(
name|ImmutableBitSet
operator|.
name|of
argument_list|(
name|column
operator|.
name|ordinal
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|Table
name|table
init|=
operator|new
name|MaterializationService
operator|.
name|DefaultTableFactory
argument_list|()
operator|.
name|createTable
argument_list|(
name|lattice
operator|.
name|rootSchema
argument_list|,
name|sql
argument_list|,
name|ImmutableList
operator|.
expr|<
name|String
operator|>
name|of
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Object
index|[]
name|values
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
operator|(
operator|(
name|ScannableTable
operator|)
name|table
operator|)
operator|.
name|scan
argument_list|(
literal|null
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|(
operator|(
name|Number
operator|)
name|values
index|[
literal|0
index|]
operator|)
operator|.
name|intValue
argument_list|()
return|;
block|}
block|}
end_class

begin_comment
comment|// End SqlLatticeStatisticProvider.java
end_comment

end_unit

