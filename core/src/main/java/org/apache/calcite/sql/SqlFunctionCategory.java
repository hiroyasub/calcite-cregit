begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlFunctionCategory
operator|.
name|Property
operator|.
name|FUNCTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlFunctionCategory
operator|.
name|Property
operator|.
name|SPECIFIC
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlFunctionCategory
operator|.
name|Property
operator|.
name|TABLE_FUNCTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlFunctionCategory
operator|.
name|Property
operator|.
name|USER_DEFINED
import|;
end_import

begin_comment
comment|/**  * Enumeration of the categories of  * SQL-invoked routines.  */
end_comment

begin_enum
specifier|public
enum|enum
name|SqlFunctionCategory
block|{
name|STRING
argument_list|(
literal|"STRING"
argument_list|,
literal|"String function"
argument_list|,
name|FUNCTION
argument_list|)
block|,
name|NUMERIC
argument_list|(
literal|"NUMERIC"
argument_list|,
literal|"Numeric function"
argument_list|,
name|FUNCTION
argument_list|)
block|,
name|TIMEDATE
argument_list|(
literal|"TIMEDATE"
argument_list|,
literal|"Time and date function"
argument_list|,
name|FUNCTION
argument_list|)
block|,
name|SYSTEM
argument_list|(
literal|"SYSTEM"
argument_list|,
literal|"System function"
argument_list|,
name|FUNCTION
argument_list|)
block|,
name|USER_DEFINED_FUNCTION
argument_list|(
literal|"UDF"
argument_list|,
literal|"User-defined function"
argument_list|,
name|USER_DEFINED
argument_list|,
name|FUNCTION
argument_list|)
block|,
name|USER_DEFINED_PROCEDURE
argument_list|(
literal|"UDP"
argument_list|,
literal|"User-defined procedure"
argument_list|,
name|USER_DEFINED
argument_list|)
block|,
name|USER_DEFINED_CONSTRUCTOR
argument_list|(
literal|"UDC"
argument_list|,
literal|"User-defined constructor"
argument_list|,
name|USER_DEFINED
argument_list|)
block|,
name|USER_DEFINED_SPECIFIC_FUNCTION
argument_list|(
literal|"UDF_SPECIFIC"
argument_list|,
literal|"User-defined function with SPECIFIC name"
argument_list|,
name|USER_DEFINED
argument_list|,
name|SPECIFIC
argument_list|,
name|FUNCTION
argument_list|)
block|,
name|USER_DEFINED_TABLE_FUNCTION
argument_list|(
literal|"TABLE_UDF"
argument_list|,
literal|"User-defined table function"
argument_list|,
name|USER_DEFINED
argument_list|,
name|TABLE_FUNCTION
argument_list|)
block|,
name|USER_DEFINED_TABLE_SPECIFIC_FUNCTION
argument_list|(
literal|"TABLE_UDF_SPECIFIC"
argument_list|,
literal|"User-defined table function with SPECIFIC name"
argument_list|,
name|USER_DEFINED
argument_list|,
name|TABLE_FUNCTION
argument_list|,
name|SPECIFIC
argument_list|)
block|,
name|MATCH_RECOGNIZE
argument_list|(
literal|"MATCH_RECOGNIZE"
argument_list|,
literal|"MATCH_RECOGNIZE function"
argument_list|,
name|TABLE_FUNCTION
argument_list|)
block|;
specifier|private
specifier|final
name|EnumSet
argument_list|<
name|Property
argument_list|>
name|properties
decl_stmt|;
name|SqlFunctionCategory
parameter_list|(
name|String
name|abbrev
parameter_list|,
name|String
name|description
parameter_list|,
name|Property
modifier|...
name|properties
parameter_list|)
block|{
name|Util
operator|.
name|discard
argument_list|(
name|abbrev
argument_list|)
expr_stmt|;
name|Util
operator|.
name|discard
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|this
operator|.
name|properties
operator|=
name|EnumSet
operator|.
name|copyOf
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUserDefined
parameter_list|()
block|{
return|return
name|properties
operator|.
name|contains
argument_list|(
name|USER_DEFINED
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isTableFunction
parameter_list|()
block|{
return|return
name|properties
operator|.
name|contains
argument_list|(
name|TABLE_FUNCTION
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isFunction
parameter_list|()
block|{
return|return
name|properties
operator|.
name|contains
argument_list|(
name|FUNCTION
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isSpecific
parameter_list|()
block|{
return|return
name|properties
operator|.
name|contains
argument_list|(
name|SPECIFIC
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isUserDefinedNotSpecificFunction
parameter_list|()
block|{
return|return
name|isUserDefined
argument_list|()
operator|&&
operator|(
name|isFunction
argument_list|()
operator|||
name|isTableFunction
argument_list|()
operator|)
operator|&&
operator|!
name|isSpecific
argument_list|()
return|;
block|}
comment|/**    * Property of a SqlFunctionCategory.    */
enum|enum
name|Property
block|{
name|USER_DEFINED
block|,
name|TABLE_FUNCTION
block|,
name|SPECIFIC
block|,
name|FUNCTION
block|}
block|}
end_enum

end_unit

