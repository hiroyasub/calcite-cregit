begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlIdentifier
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Implementation of  * {@link org.apache.calcite.sql.validate.SqlValidatorCatalogReader} that passes  * all calls to a parent catalog reader.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|DelegatingSqlValidatorCatalogReader
implements|implements
name|SqlValidatorCatalogReader
block|{
specifier|protected
specifier|final
name|SqlValidatorCatalogReader
name|catalogReader
decl_stmt|;
comment|/**    * Creates a DelegatingSqlValidatorCatalogReader.    *    * @param catalogReader Parent catalog reader    */
specifier|protected
name|DelegatingSqlValidatorCatalogReader
parameter_list|(
name|SqlValidatorCatalogReader
name|catalogReader
parameter_list|)
block|{
name|this
operator|.
name|catalogReader
operator|=
name|catalogReader
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|SqlValidatorTable
name|getTable
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
return|return
name|catalogReader
operator|.
name|getTable
argument_list|(
name|names
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RelDataType
name|getNamedType
parameter_list|(
name|SqlIdentifier
name|typeName
parameter_list|)
block|{
return|return
name|catalogReader
operator|.
name|getNamedType
argument_list|(
name|typeName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SqlMoniker
argument_list|>
name|getAllSchemaObjectNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
return|return
name|catalogReader
operator|.
name|getAllSchemaObjectNames
argument_list|(
name|names
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|getSchemaPaths
parameter_list|()
block|{
return|return
name|catalogReader
operator|.
name|getSchemaPaths
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|C
parameter_list|>
name|C
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|C
argument_list|>
name|aClass
parameter_list|)
block|{
return|return
name|catalogReader
operator|.
name|unwrap
argument_list|(
name|aClass
argument_list|)
return|;
block|}
block|}
end_class

end_unit

