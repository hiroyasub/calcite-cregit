begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|type
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlOperandCountRange
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_comment
comment|/**  * Helpers for {@link SqlOperandCountRange}.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|SqlOperandCountRanges
block|{
specifier|public
specifier|static
name|SqlOperandCountRange
name|of
parameter_list|(
name|int
name|length
parameter_list|)
block|{
return|return
operator|new
name|RangeImpl
argument_list|(
name|length
argument_list|,
name|length
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SqlOperandCountRange
name|between
parameter_list|(
name|int
name|min
parameter_list|,
name|int
name|max
parameter_list|)
block|{
return|return
operator|new
name|RangeImpl
argument_list|(
name|min
argument_list|,
name|max
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SqlOperandCountRange
name|from
parameter_list|(
name|int
name|min
parameter_list|)
block|{
return|return
operator|new
name|RangeImpl
argument_list|(
name|min
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SqlOperandCountRange
name|any
parameter_list|()
block|{
return|return
operator|new
name|RangeImpl
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
comment|/** Implementation of {@link SqlOperandCountRange}. */
specifier|private
specifier|static
class|class
name|RangeImpl
implements|implements
name|SqlOperandCountRange
block|{
specifier|private
specifier|final
name|int
name|min
decl_stmt|;
specifier|private
specifier|final
name|int
name|max
decl_stmt|;
name|RangeImpl
parameter_list|(
name|int
name|min
parameter_list|,
name|int
name|max
parameter_list|)
block|{
name|this
operator|.
name|min
operator|=
name|min
expr_stmt|;
name|this
operator|.
name|max
operator|=
name|max
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
name|min
operator|<=
name|max
operator|||
name|max
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
name|min
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isValidCount
parameter_list|(
name|int
name|count
parameter_list|)
block|{
return|return
name|count
operator|>=
name|min
operator|&&
operator|(
name|max
operator|==
operator|-
literal|1
operator|||
name|count
operator|<=
name|max
operator|)
return|;
block|}
specifier|public
name|int
name|getMin
parameter_list|()
block|{
return|return
name|min
return|;
block|}
specifier|public
name|int
name|getMax
parameter_list|()
block|{
return|return
name|max
return|;
block|}
block|}
block|}
end_class

begin_comment
comment|// End SqlOperandCountRanges.java
end_comment

end_unit

