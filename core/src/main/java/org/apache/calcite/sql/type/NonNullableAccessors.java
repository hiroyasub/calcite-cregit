begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|type
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlCollation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apiguardian
operator|.
name|api
operator|.
name|API
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Objects
operator|.
name|requireNonNull
import|;
end_import

begin_comment
comment|/**  * This class provides non-nullable accessors for common getters.  */
end_comment

begin_class
specifier|public
class|class
name|NonNullableAccessors
block|{
specifier|private
name|NonNullableAccessors
parameter_list|()
block|{
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|Charset
name|getCharset
parameter_list|(
name|RelDataType
name|type
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|type
operator|.
name|getCharset
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"charset is null for "
operator|+
name|type
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlCollation
name|getCollation
parameter_list|(
name|RelDataType
name|type
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|type
operator|.
name|getCollation
argument_list|()
argument_list|,
operator|(
operator|)
operator|->
operator|!
name|SqlTypeUtil
operator|.
name|inCharFamily
argument_list|(
name|type
argument_list|)
condition|?
literal|"collation is null for "
operator|+
name|type
else|:
literal|"RelDataType object should have been assigned "
operator|+
literal|"a (default) collation when calling deriveType, type="
operator|+
name|type
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|RelDataType
name|getComponentTypeOrThrow
parameter_list|(
name|RelDataType
name|type
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|type
operator|.
name|getComponentType
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"componentType is null for "
operator|+
name|type
argument_list|)
return|;
block|}
block|}
end_class

end_unit

