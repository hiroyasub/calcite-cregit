begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlCallBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlDelete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlJoin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlMerge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlNodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlOperatorBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlSelect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apiguardian
operator|.
name|api
operator|.
name|API
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Objects
operator|.
name|requireNonNull
import|;
end_import

begin_comment
comment|/**  * This class provides non-nullable accessors for common getters.  */
end_comment

begin_class
specifier|public
class|class
name|SqlNonNullableAccessors
block|{
specifier|private
name|SqlNonNullableAccessors
parameter_list|()
block|{
block|}
specifier|private
specifier|static
name|String
name|safeToString
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
try|try
block|{
return|return
name|Objects
operator|.
name|toString
argument_list|(
name|obj
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
return|return
literal|"Error in toString: "
operator|+
name|e
return|;
block|}
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlSelect
name|getSourceSelect
parameter_list|(
name|SqlUpdate
name|statement
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|statement
operator|.
name|getSourceSelect
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"sourceSelect of "
operator|+
name|safeToString
argument_list|(
name|statement
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlSelect
name|getSourceSelect
parameter_list|(
name|SqlDelete
name|statement
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|statement
operator|.
name|getSourceSelect
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"sourceSelect of "
operator|+
name|safeToString
argument_list|(
name|statement
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlSelect
name|getSourceSelect
parameter_list|(
name|SqlMerge
name|statement
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|statement
operator|.
name|getSourceSelect
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"sourceSelect of "
operator|+
name|safeToString
argument_list|(
name|statement
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlNode
name|getCondition
parameter_list|(
name|SqlJoin
name|join
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|join
operator|.
name|getCondition
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"getCondition of "
operator|+
name|safeToString
argument_list|(
name|join
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|static
name|SqlNode
name|getNode
parameter_list|(
name|ScopeChild
name|child
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|child
operator|.
name|namespace
operator|.
name|getNode
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"child.namespace.getNode() of "
operator|+
name|child
operator|.
name|name
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlNodeList
name|getSelectList
parameter_list|(
name|SqlSelect
name|innerSelect
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|innerSelect
operator|.
name|getSelectList
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"selectList of "
operator|+
name|safeToString
argument_list|(
name|innerSelect
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlValidatorTable
name|getTable
parameter_list|(
name|SqlValidatorNamespace
name|ns
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|ns
operator|.
name|getTable
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"ns.getTable() for "
operator|+
name|safeToString
argument_list|(
name|ns
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlValidatorScope
name|getScope
parameter_list|(
name|SqlCallBinding
name|callBinding
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|callBinding
operator|.
name|getScope
argument_list|()
argument_list|,
parameter_list|()
lambda|->
literal|"scope is null for "
operator|+
name|safeToString
argument_list|(
name|callBinding
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
name|SqlValidatorNamespace
name|getNamespace
parameter_list|(
name|SqlCallBinding
name|callBinding
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|callBinding
operator|.
name|getValidator
argument_list|()
operator|.
name|getNamespace
argument_list|(
name|callBinding
operator|.
name|getCall
argument_list|()
argument_list|)
argument_list|,
parameter_list|()
lambda|->
literal|"scope is null for "
operator|+
name|safeToString
argument_list|(
name|callBinding
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|API
argument_list|(
name|since
operator|=
literal|"1.27"
argument_list|,
name|status
operator|=
name|API
operator|.
name|Status
operator|.
name|EXPERIMENTAL
argument_list|)
specifier|public
specifier|static
parameter_list|<
name|T
extends|extends
name|Object
parameter_list|>
name|T
name|getOperandLiteralValueOrThrow
parameter_list|(
name|SqlOperatorBinding
name|opBinding
parameter_list|,
name|int
name|ordinal
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|requireNonNull
argument_list|(
name|opBinding
operator|.
name|getOperandLiteralValue
argument_list|(
name|ordinal
argument_list|,
name|clazz
argument_list|)
argument_list|,
parameter_list|()
lambda|->
literal|"expected non-null operand "
operator|+
name|ordinal
operator|+
literal|" in "
operator|+
name|safeToString
argument_list|(
name|opBinding
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

