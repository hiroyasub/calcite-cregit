begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|parser
operator|.
name|SqlParserPos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|checkerframework
operator|.
name|checker
operator|.
name|nullness
operator|.
name|qual
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * A generic implementation of {@link SqlMoniker}.  */
end_comment

begin_class
specifier|public
class|class
name|SqlMonikerImpl
implements|implements
name|SqlMoniker
block|{
comment|//~ Instance fields --------------------------------------------------------
specifier|private
specifier|final
name|ImmutableList
argument_list|<
name|String
argument_list|>
name|names
decl_stmt|;
specifier|private
specifier|final
name|SqlMonikerType
name|type
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**    * Creates a moniker with an array of names.    */
specifier|public
name|SqlMonikerImpl
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|,
name|SqlMonikerType
name|type
parameter_list|)
block|{
name|this
operator|.
name|names
operator|=
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|names
argument_list|)
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
comment|/**    * Creates a moniker with a single name.    */
specifier|public
name|SqlMonikerImpl
parameter_list|(
name|String
name|name
parameter_list|,
name|SqlMonikerType
name|type
parameter_list|)
block|{
name|this
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|name
argument_list|)
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
annotation|@
name|Nullable
name|Object
name|obj
parameter_list|)
block|{
return|return
name|this
operator|==
name|obj
operator|||
name|obj
operator|instanceof
name|SqlMonikerImpl
operator|&&
name|type
operator|==
operator|(
operator|(
name|SqlMonikerImpl
operator|)
name|obj
operator|)
operator|.
name|type
operator|&&
name|names
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|SqlMonikerImpl
operator|)
name|obj
operator|)
operator|.
name|names
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|type
argument_list|,
name|names
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SqlMonikerType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getFullyQualifiedNames
parameter_list|()
block|{
return|return
name|names
return|;
block|}
annotation|@
name|Override
specifier|public
name|SqlIdentifier
name|toIdentifier
parameter_list|()
block|{
return|return
operator|new
name|SqlIdentifier
argument_list|(
name|names
argument_list|,
name|SqlParserPos
operator|.
name|ZERO
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Util
operator|.
name|sepList
argument_list|(
name|names
argument_list|,
literal|"."
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|id
parameter_list|()
block|{
return|return
name|type
operator|+
literal|"("
operator|+
name|this
operator|+
literal|")"
return|;
block|}
block|}
end_class

end_unit

