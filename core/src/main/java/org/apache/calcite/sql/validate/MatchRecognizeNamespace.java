begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlMatchRecognize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlNode
import|;
end_import

begin_comment
comment|/**  * Namespace for a {@code MATCH_RECOGNIZE} clause.  */
end_comment

begin_class
specifier|public
class|class
name|MatchRecognizeNamespace
extends|extends
name|AbstractNamespace
block|{
specifier|private
specifier|final
name|SqlMatchRecognize
name|matchRecognize
decl_stmt|;
comment|/** Creates a MatchRecognizeNamespace. */
specifier|protected
name|MatchRecognizeNamespace
parameter_list|(
name|SqlValidatorImpl
name|validator
parameter_list|,
name|SqlMatchRecognize
name|matchRecognize
parameter_list|,
name|SqlNode
name|enclosingNode
parameter_list|)
block|{
name|super
argument_list|(
name|validator
argument_list|,
name|enclosingNode
argument_list|)
expr_stmt|;
name|this
operator|.
name|matchRecognize
operator|=
name|matchRecognize
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RelDataType
name|validateImpl
parameter_list|(
name|RelDataType
name|targetRowType
parameter_list|)
block|{
name|validator
operator|.
name|validateMatchRecognize
argument_list|(
name|matchRecognize
argument_list|)
expr_stmt|;
return|return
name|rowType
return|;
block|}
annotation|@
name|Override
specifier|public
name|SqlMatchRecognize
name|getNode
parameter_list|()
block|{
return|return
name|matchRecognize
return|;
block|}
block|}
end_class

end_unit

