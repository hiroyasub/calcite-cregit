begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|jts
operator|.
name|geom
operator|.
name|Coordinate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|jts
operator|.
name|geom
operator|.
name|Geometry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|jts
operator|.
name|geom
operator|.
name|util
operator|.
name|GeometryEditor
import|;
end_import

begin_comment
comment|/**  * Geometry editor operation that removes a point to a geometry.  */
end_comment

begin_class
specifier|public
class|class
name|RemovePointOperation
extends|extends
name|GeometryEditor
operator|.
name|CoordinateOperation
block|{
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
specifier|public
name|RemovePointOperation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Coordinate
index|[]
name|edit
parameter_list|(
name|Coordinate
index|[]
name|coordinates
parameter_list|,
name|Geometry
name|geometry
parameter_list|)
block|{
if|if
condition|(
name|index
operator|<
literal|0
operator|||
name|index
operator|>
name|coordinates
operator|.
name|length
operator|-
literal|1
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid index: "
operator|+
name|index
argument_list|)
throw|;
block|}
name|Coordinate
index|[]
name|newCoordinates
init|=
operator|new
name|Coordinate
index|[
name|coordinates
operator|.
name|length
operator|-
literal|1
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|index
condition|;
name|i
operator|++
control|)
block|{
name|newCoordinates
index|[
name|i
index|]
operator|=
operator|(
name|Coordinate
operator|)
name|coordinates
index|[
name|i
index|]
operator|.
name|clone
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
name|index
operator|+
literal|1
init|;
name|i
operator|<
name|coordinates
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|newCoordinates
index|[
name|i
operator|-
literal|1
index|]
operator|=
operator|(
name|Coordinate
operator|)
name|coordinates
index|[
name|i
index|]
operator|.
name|clone
argument_list|()
expr_stmt|;
block|}
return|return
name|newCoordinates
return|;
block|}
block|}
end_class

end_unit

