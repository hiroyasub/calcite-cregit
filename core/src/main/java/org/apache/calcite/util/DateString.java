begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|avatica
operator|.
name|util
operator|.
name|DateTimeUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_comment
comment|/**  * Date literal.  *  *<p>Immutable, internally represented as a string (in ISO format).  */
end_comment

begin_class
specifier|public
class|class
name|DateString
implements|implements
name|Comparable
argument_list|<
name|DateString
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|v
decl_stmt|;
comment|/** Creates a DateString. */
specifier|public
name|DateString
parameter_list|(
name|String
name|v
parameter_list|)
block|{
name|this
operator|.
name|v
operator|=
name|v
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
name|PATTERN
operator|.
name|matcher
argument_list|(
name|v
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
comment|/** Creates a DateString for year, month, day values. */
specifier|public
name|DateString
parameter_list|(
name|int
name|year
parameter_list|,
name|int
name|month
parameter_list|,
name|int
name|day
parameter_list|)
block|{
name|this
argument_list|(
name|TimestampString
operator|.
name|ymd
argument_list|(
operator|new
name|StringBuilder
argument_list|()
argument_list|,
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|v
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
comment|// The value is in canonical form.
return|return
name|o
operator|==
name|this
operator|||
name|o
operator|instanceof
name|DateString
operator|&&
operator|(
operator|(
name|DateString
operator|)
name|o
operator|)
operator|.
name|v
operator|.
name|equals
argument_list|(
name|v
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|v
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|DateString
name|o
parameter_list|)
block|{
return|return
name|v
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|v
argument_list|)
return|;
block|}
comment|/** Creates a DateString from a Calendar. */
specifier|public
specifier|static
name|DateString
name|fromCalendarFields
parameter_list|(
name|Calendar
name|calendar
parameter_list|)
block|{
return|return
operator|new
name|DateString
argument_list|(
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|YEAR
argument_list|)
argument_list|,
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|MONTH
argument_list|)
operator|+
literal|1
argument_list|,
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|DAY_OF_MONTH
argument_list|)
argument_list|)
return|;
block|}
comment|/** Returns the number of days since the epoch. */
specifier|public
name|int
name|getDaysSinceEpoch
parameter_list|()
block|{
name|int
name|year
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|v
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|month
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|v
operator|.
name|substring
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|day
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|v
operator|.
name|substring
argument_list|(
literal|8
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|DateTimeUtils
operator|.
name|ymdToUnixDate
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
return|;
block|}
comment|/** Creates a DateString that is a given number of days since the epoch. */
specifier|public
specifier|static
name|DateString
name|fromDaysSinceEpoch
parameter_list|(
name|int
name|days
parameter_list|)
block|{
return|return
operator|new
name|DateString
argument_list|(
name|DateTimeUtils
operator|.
name|unixDateToString
argument_list|(
name|days
argument_list|)
argument_list|)
return|;
block|}
comment|/** Returns the number of milliseconds since the epoch. Always a multiple of    * 86,400,000 (the number of milliseconds in a day). */
specifier|public
name|long
name|getMillisSinceEpoch
parameter_list|()
block|{
return|return
name|getDaysSinceEpoch
argument_list|()
operator|*
name|DateTimeUtils
operator|.
name|MILLIS_PER_DAY
return|;
block|}
specifier|public
name|Calendar
name|toCalendar
parameter_list|()
block|{
return|return
name|Util
operator|.
name|calendar
argument_list|(
name|getMillisSinceEpoch
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End DateString.java
end_comment

end_unit

