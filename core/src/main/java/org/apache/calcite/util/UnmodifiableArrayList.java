begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|AbstractList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|RandomAccess
import|;
end_import

begin_comment
comment|/**  * A view onto an array that cannot be modified by the client.  *  *<p>Since the array is not copied, modifications to the array will be  * reflected in the list.</p>  *  *<p>Null elements are allowed.</p>  *  *<p>Quick and low-memory, like {@link java.util.Arrays#asList(Object[])}, but  * unmodifiable.</p>  *  * @param<E> Element type  */
end_comment

begin_class
specifier|public
class|class
name|UnmodifiableArrayList
parameter_list|<
name|E
parameter_list|>
extends|extends
name|AbstractList
argument_list|<
name|E
argument_list|>
implements|implements
name|RandomAccess
block|{
specifier|private
specifier|final
name|E
index|[]
name|elements
decl_stmt|;
specifier|private
name|UnmodifiableArrayList
parameter_list|(
name|E
index|[]
name|elements
parameter_list|)
block|{
name|this
operator|.
name|elements
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|elements
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
parameter_list|<
name|E
parameter_list|>
name|UnmodifiableArrayList
argument_list|<
name|E
argument_list|>
name|of
parameter_list|(
name|E
modifier|...
name|elements
parameter_list|)
block|{
return|return
operator|new
name|UnmodifiableArrayList
argument_list|<
name|E
argument_list|>
argument_list|(
name|elements
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|E
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|elements
index|[
name|index
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|elements
operator|.
name|length
return|;
block|}
block|}
end_class

begin_comment
comment|// End UnmodifiableArrayList.java
end_comment

end_unit

