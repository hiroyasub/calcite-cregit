begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql2rel
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelHomogeneousShuttle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexCorrelVariable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexShuttle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Rewrites relations to ensure the same correlation is referenced by the same  * correlation variable.  */
end_comment

begin_class
specifier|public
class|class
name|DeduplicateCorrelateVariables
extends|extends
name|RelHomogeneousShuttle
block|{
specifier|private
specifier|final
name|RexShuttle
name|dedupRex
decl_stmt|;
comment|/**    * Replaces alternative names of correlation variable to its canonical name.    */
specifier|private
specifier|static
class|class
name|DeduplicateCorrelateVariablesShuttle
extends|extends
name|RexShuttle
block|{
specifier|private
specifier|final
name|RexBuilder
name|builder
decl_stmt|;
specifier|private
specifier|final
name|String
name|canonical
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|altNames
decl_stmt|;
specifier|public
name|DeduplicateCorrelateVariablesShuttle
parameter_list|(
name|RexBuilder
name|builder
parameter_list|,
name|String
name|canonical
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|altNames
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
name|this
operator|.
name|canonical
operator|=
name|canonical
expr_stmt|;
name|this
operator|.
name|altNames
operator|=
name|altNames
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RexNode
name|visitCorrelVariable
parameter_list|(
name|RexCorrelVariable
name|variable
parameter_list|)
block|{
if|if
condition|(
operator|!
name|altNames
operator|.
name|contains
argument_list|(
name|variable
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|variable
return|;
block|}
return|return
name|builder
operator|.
name|makeCorrel
argument_list|(
name|variable
operator|.
name|getType
argument_list|()
argument_list|,
name|canonical
argument_list|)
return|;
block|}
block|}
specifier|public
name|DeduplicateCorrelateVariables
parameter_list|(
name|RexBuilder
name|builder
parameter_list|,
name|String
name|canonical
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|altNames
parameter_list|)
block|{
name|dedupRex
operator|=
operator|new
name|DeduplicateCorrelateVariablesShuttle
argument_list|(
name|builder
argument_list|,
name|canonical
argument_list|,
name|altNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RelNode
name|visit
parameter_list|(
name|RelNode
name|other
parameter_list|)
block|{
name|RelNode
name|next
init|=
name|super
operator|.
name|visit
argument_list|(
name|other
argument_list|)
decl_stmt|;
return|return
name|next
operator|.
name|accept
argument_list|(
name|dedupRex
argument_list|)
return|;
block|}
block|}
end_class

begin_comment
comment|// End DeduplicateCorrelateVariables.java
end_comment

end_unit

