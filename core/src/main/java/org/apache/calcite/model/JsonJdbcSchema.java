begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|model
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonCreator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|checkerframework
operator|.
name|checker
operator|.
name|nullness
operator|.
name|qual
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Objects
operator|.
name|requireNonNull
import|;
end_import

begin_comment
comment|/**  * JSON object representing a schema that maps to a JDBC database.  *  *<p>Like the base class {@link JsonSchema},  * occurs within {@link JsonRoot#schemas}.  *  * @see JsonRoot Description of JSON schema elements  */
end_comment

begin_class
specifier|public
class|class
name|JsonJdbcSchema
extends|extends
name|JsonSchema
block|{
comment|/** The name of the JDBC driver class.    *    *<p>Optional. If not specified, uses whichever class the JDBC    * {@link java.sql.DriverManager} chooses.    */
specifier|public
specifier|final
annotation|@
name|Nullable
name|String
name|jdbcDriver
decl_stmt|;
comment|/** The FQN of the {@link org.apache.calcite.sql.SqlDialectFactory} implementation.    *    *<p>Optional. If not specified, uses whichever class the JDBC    * {@link java.sql.DriverManager} chooses.    */
specifier|public
specifier|final
annotation|@
name|Nullable
name|String
name|sqlDialectFactory
decl_stmt|;
comment|/** JDBC connect string, for example "jdbc:mysql://localhost/foodmart".    */
specifier|public
specifier|final
name|String
name|jdbcUrl
decl_stmt|;
comment|/** JDBC user name.    *    *<p>Optional.    */
specifier|public
specifier|final
annotation|@
name|Nullable
name|String
name|jdbcUser
decl_stmt|;
comment|/** JDBC connect string, for example "jdbc:mysql://localhost/foodmart".    *    *<p>Optional.    */
specifier|public
specifier|final
annotation|@
name|Nullable
name|String
name|jdbcPassword
decl_stmt|;
comment|/** Name of the initial catalog in the JDBC data source.    *    *<p>Optional.    */
specifier|public
specifier|final
annotation|@
name|Nullable
name|String
name|jdbcCatalog
decl_stmt|;
comment|/** Name of the initial schema in the JDBC data source.    *    *<p>Optional.    */
specifier|public
specifier|final
annotation|@
name|Nullable
name|String
name|jdbcSchema
decl_stmt|;
annotation|@
name|JsonCreator
specifier|public
name|JsonJdbcSchema
parameter_list|(
annotation|@
name|JsonProperty
argument_list|(
name|value
operator|=
literal|"name"
argument_list|,
name|required
operator|=
literal|true
argument_list|)
name|String
name|name
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"path"
argument_list|)
annotation|@
name|Nullable
name|List
argument_list|<
name|Object
argument_list|>
name|path
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"cache"
argument_list|)
annotation|@
name|Nullable
name|Boolean
name|cache
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"autoLattice"
argument_list|)
annotation|@
name|Nullable
name|Boolean
name|autoLattice
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"jdbcDriver"
argument_list|)
annotation|@
name|Nullable
name|String
name|jdbcDriver
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"sqlDialectFactory"
argument_list|)
annotation|@
name|Nullable
name|String
name|sqlDialectFactory
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
name|value
operator|=
literal|"jdbcUrl"
argument_list|,
name|required
operator|=
literal|true
argument_list|)
name|String
name|jdbcUrl
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"jdbcUser"
argument_list|)
annotation|@
name|Nullable
name|String
name|jdbcUser
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"jdbcPassword"
argument_list|)
annotation|@
name|Nullable
name|String
name|jdbcPassword
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"jdbcCatalog"
argument_list|)
annotation|@
name|Nullable
name|String
name|jdbcCatalog
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
literal|"jdbcSchema"
argument_list|)
annotation|@
name|Nullable
name|String
name|jdbcSchema
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|path
argument_list|,
name|cache
argument_list|,
name|autoLattice
argument_list|)
expr_stmt|;
name|this
operator|.
name|jdbcDriver
operator|=
name|jdbcDriver
expr_stmt|;
name|this
operator|.
name|sqlDialectFactory
operator|=
name|sqlDialectFactory
expr_stmt|;
name|this
operator|.
name|jdbcUrl
operator|=
name|requireNonNull
argument_list|(
name|jdbcUrl
argument_list|,
literal|"jdbcUrl"
argument_list|)
expr_stmt|;
name|this
operator|.
name|jdbcUser
operator|=
name|jdbcUser
expr_stmt|;
name|this
operator|.
name|jdbcPassword
operator|=
name|jdbcPassword
expr_stmt|;
name|this
operator|.
name|jdbcCatalog
operator|=
name|jdbcCatalog
expr_stmt|;
name|this
operator|.
name|jdbcSchema
operator|=
name|jdbcSchema
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|accept
parameter_list|(
name|ModelHandler
name|handler
parameter_list|)
block|{
name|handler
operator|.
name|visit
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

