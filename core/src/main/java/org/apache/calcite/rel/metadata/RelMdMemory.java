begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|BuiltInMethod
import|;
end_import

begin_comment
comment|/**  * Default implementations of the  * {@link org.apache.calcite.rel.metadata.BuiltInMetadata.Memory}  * metadata provider for the standard logical algebra.  *  * @see RelMetadataQuery#isPhaseTransition  * @see RelMetadataQuery#splitCount  */
end_comment

begin_class
specifier|public
class|class
name|RelMdMemory
block|{
comment|/** Source for    * {@link org.apache.calcite.rel.metadata.BuiltInMetadata.Memory}. */
specifier|public
specifier|static
specifier|final
name|RelMetadataProvider
name|SOURCE
init|=
name|ReflectiveRelMetadataProvider
operator|.
name|reflectiveSource
argument_list|(
operator|new
name|RelMdMemory
argument_list|()
argument_list|,
name|BuiltInMethod
operator|.
name|MEMORY
operator|.
name|method
argument_list|,
name|BuiltInMethod
operator|.
name|CUMULATIVE_MEMORY_WITHIN_PHASE
operator|.
name|method
argument_list|,
name|BuiltInMethod
operator|.
name|CUMULATIVE_MEMORY_WITHIN_PHASE_SPLIT
operator|.
name|method
argument_list|)
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
specifier|protected
name|RelMdMemory
parameter_list|()
block|{
block|}
comment|//~ Methods ----------------------------------------------------------------
comment|/** Catch-all implementation for    * {@link BuiltInMetadata.Memory#memory()},    * invoked using reflection.    *    * @see org.apache.calcite.rel.metadata.RelMetadataQuery#memory    */
specifier|public
name|Double
name|memory
parameter_list|(
name|RelNode
name|rel
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
comment|/** Catch-all implementation for    * {@link BuiltInMetadata.Memory#cumulativeMemoryWithinPhase()},    * invoked using reflection.    *    * @see org.apache.calcite.rel.metadata.RelMetadataQuery#memory    */
specifier|public
name|Double
name|cumulativeMemoryWithinPhase
parameter_list|(
name|RelNode
name|rel
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
name|Double
name|nullable
init|=
name|mq
operator|.
name|memory
argument_list|(
name|rel
argument_list|)
decl_stmt|;
if|if
condition|(
name|nullable
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Boolean
name|isPhaseTransition
init|=
name|mq
operator|.
name|isPhaseTransition
argument_list|(
name|rel
argument_list|)
decl_stmt|;
if|if
condition|(
name|isPhaseTransition
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|double
name|d
init|=
name|nullable
decl_stmt|;
if|if
condition|(
operator|!
name|isPhaseTransition
condition|)
block|{
for|for
control|(
name|RelNode
name|input
range|:
name|rel
operator|.
name|getInputs
argument_list|()
control|)
block|{
name|nullable
operator|=
name|mq
operator|.
name|cumulativeMemoryWithinPhase
argument_list|(
name|input
argument_list|)
expr_stmt|;
if|if
condition|(
name|nullable
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|d
operator|+=
name|nullable
expr_stmt|;
block|}
block|}
return|return
name|d
return|;
block|}
comment|/** Catch-all implementation for    * {@link BuiltInMetadata.Memory#cumulativeMemoryWithinPhaseSplit()},    * invoked using reflection.    *    * @see org.apache.calcite.rel.metadata.RelMetadataQuery#cumulativeMemoryWithinPhaseSplit    */
specifier|public
name|Double
name|cumulativeMemoryWithinPhaseSplit
parameter_list|(
name|RelNode
name|rel
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
specifier|final
name|Double
name|memoryWithinPhase
init|=
name|mq
operator|.
name|cumulativeMemoryWithinPhase
argument_list|(
name|rel
argument_list|)
decl_stmt|;
specifier|final
name|Integer
name|splitCount
init|=
name|mq
operator|.
name|splitCount
argument_list|(
name|rel
argument_list|)
decl_stmt|;
if|if
condition|(
name|memoryWithinPhase
operator|==
literal|null
operator|||
name|splitCount
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|memoryWithinPhase
operator|/
name|splitCount
return|;
block|}
block|}
end_class

begin_comment
comment|// End RelMdMemory.java
end_comment

end_unit

