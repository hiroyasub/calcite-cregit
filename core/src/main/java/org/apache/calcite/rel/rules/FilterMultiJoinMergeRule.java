begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|rules
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptRuleCall
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|logical
operator|.
name|LogicalFilter
import|;
end_import

begin_comment
comment|/**  * Planner rule that merges a  * {@link org.apache.calcite.rel.logical.LogicalFilter}  * into a {@link MultiJoin},  * creating a richer {@code MultiJoin}.  *  * @see org.apache.calcite.rel.rules.ProjectMultiJoinMergeRule  */
end_comment

begin_class
specifier|public
class|class
name|FilterMultiJoinMergeRule
extends|extends
name|RelOptRule
block|{
specifier|public
specifier|static
specifier|final
name|FilterMultiJoinMergeRule
name|INSTANCE
init|=
operator|new
name|FilterMultiJoinMergeRule
argument_list|()
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
comment|/**    * Creates a FilterMultiJoinMergeRule.    */
specifier|private
name|FilterMultiJoinMergeRule
parameter_list|()
block|{
name|super
argument_list|(
name|operand
argument_list|(
name|LogicalFilter
operator|.
name|class
argument_list|,
name|operand
argument_list|(
name|MultiJoin
operator|.
name|class
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|void
name|onMatch
parameter_list|(
name|RelOptRuleCall
name|call
parameter_list|)
block|{
name|LogicalFilter
name|filter
init|=
name|call
operator|.
name|rel
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|MultiJoin
name|multiJoin
init|=
name|call
operator|.
name|rel
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|MultiJoin
name|newMultiJoin
init|=
operator|new
name|MultiJoin
argument_list|(
name|multiJoin
operator|.
name|getCluster
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getInputs
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getJoinFilter
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getRowType
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|isFullOuterJoin
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getOuterJoinConditions
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getJoinTypes
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getProjFields
argument_list|()
argument_list|,
name|multiJoin
operator|.
name|getJoinFieldRefCountsMap
argument_list|()
argument_list|,
name|filter
operator|.
name|getCondition
argument_list|()
argument_list|)
decl_stmt|;
name|call
operator|.
name|transformTo
argument_list|(
name|newMultiJoin
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// End FilterMultiJoinMergeRule.java
end_comment

end_unit

