begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|rules
operator|.
name|materialize
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptRuleCall
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|hep
operator|.
name|HepProgram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|Aggregate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|tools
operator|.
name|RelBuilderFactory
import|;
end_import

begin_comment
comment|/** Rule that matches Project on Aggregate.  *  * @see MaterializedViewRules#PROJECT_AGGREGATE */
end_comment

begin_class
specifier|public
class|class
name|MaterializedViewProjectAggregateRule
extends|extends
name|MaterializedViewAggregateRule
argument_list|<
name|MaterializedViewProjectAggregateRule
operator|.
name|Config
argument_list|>
block|{
specifier|private
name|MaterializedViewProjectAggregateRule
parameter_list|(
name|Config
name|config
parameter_list|)
block|{
name|super
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deprecated
comment|// to be removed before 2.0
specifier|public
name|MaterializedViewProjectAggregateRule
parameter_list|(
name|RelBuilderFactory
name|relBuilderFactory
parameter_list|,
name|boolean
name|generateUnionRewriting
parameter_list|,
name|HepProgram
name|unionRewritingPullProgram
parameter_list|)
block|{
name|this
argument_list|(
name|Config
operator|.
name|create
argument_list|(
name|relBuilderFactory
argument_list|)
operator|.
name|withGenerateUnionRewriting
argument_list|(
name|generateUnionRewriting
argument_list|)
operator|.
name|withUnionRewritingPullProgram
argument_list|(
name|unionRewritingPullProgram
argument_list|)
operator|.
name|as
argument_list|(
name|Config
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deprecated
comment|// to be removed before 2.0
specifier|public
name|MaterializedViewProjectAggregateRule
parameter_list|(
name|RelBuilderFactory
name|relBuilderFactory
parameter_list|,
name|boolean
name|generateUnionRewriting
parameter_list|,
name|HepProgram
name|unionRewritingPullProgram
parameter_list|,
name|RelOptRule
name|filterProjectTransposeRule
parameter_list|,
name|RelOptRule
name|filterAggregateTransposeRule
parameter_list|,
name|RelOptRule
name|aggregateProjectPullUpConstantsRule
parameter_list|,
name|RelOptRule
name|projectMergeRule
parameter_list|)
block|{
name|this
argument_list|(
name|Config
operator|.
name|create
argument_list|(
name|relBuilderFactory
argument_list|)
operator|.
name|withGenerateUnionRewriting
argument_list|(
name|generateUnionRewriting
argument_list|)
operator|.
name|withUnionRewritingPullProgram
argument_list|(
name|unionRewritingPullProgram
argument_list|)
operator|.
name|as
argument_list|(
name|Config
operator|.
name|class
argument_list|)
operator|.
name|withFilterProjectTransposeRule
argument_list|(
name|filterProjectTransposeRule
argument_list|)
operator|.
name|withFilterAggregateTransposeRule
argument_list|(
name|filterAggregateTransposeRule
argument_list|)
operator|.
name|withAggregateProjectPullUpConstantsRule
argument_list|(
name|aggregateProjectPullUpConstantsRule
argument_list|)
operator|.
name|withProjectMergeRule
argument_list|(
name|projectMergeRule
argument_list|)
operator|.
name|as
argument_list|(
name|Config
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onMatch
parameter_list|(
name|RelOptRuleCall
name|call
parameter_list|)
block|{
specifier|final
name|Project
name|project
init|=
name|call
operator|.
name|rel
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|final
name|Aggregate
name|aggregate
init|=
name|call
operator|.
name|rel
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|perform
argument_list|(
name|call
argument_list|,
name|project
argument_list|,
name|aggregate
argument_list|)
expr_stmt|;
block|}
comment|/** Rule configuration. */
specifier|public
interface|interface
name|Config
extends|extends
name|MaterializedViewAggregateRule
operator|.
name|Config
block|{
name|Config
name|DEFAULT
init|=
name|create
argument_list|(
name|RelFactories
operator|.
name|LOGICAL_BUILDER
argument_list|)
decl_stmt|;
specifier|static
name|Config
name|create
parameter_list|(
name|RelBuilderFactory
name|relBuilderFactory
parameter_list|)
block|{
return|return
name|MaterializedViewAggregateRule
operator|.
name|Config
operator|.
name|create
argument_list|(
name|relBuilderFactory
argument_list|)
operator|.
name|withGenerateUnionRewriting
argument_list|(
literal|true
argument_list|)
operator|.
name|withUnionRewritingPullProgram
argument_list|(
literal|null
argument_list|)
operator|.
name|withOperandSupplier
argument_list|(
name|b0
lambda|->
name|b0
operator|.
name|operand
argument_list|(
name|Project
operator|.
name|class
argument_list|)
operator|.
name|oneInput
argument_list|(
name|b1
lambda|->
name|b1
operator|.
name|operand
argument_list|(
name|Aggregate
operator|.
name|class
argument_list|)
operator|.
name|anyInputs
argument_list|()
argument_list|)
argument_list|)
operator|.
name|withDescription
argument_list|(
literal|"MaterializedViewAggregateRule(Project-Aggregate)"
argument_list|)
operator|.
name|as
argument_list|(
name|Config
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|default
name|MaterializedViewProjectAggregateRule
name|toRule
parameter_list|()
block|{
return|return
operator|new
name|MaterializedViewProjectAggregateRule
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

